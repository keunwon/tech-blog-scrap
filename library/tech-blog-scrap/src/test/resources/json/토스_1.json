{
  "resultType": "SUCCESS",
  "error": null,
  "success": {
    "page": 1,
    "pageSize": 20,
    "count": 330,
    "next": "/api-public/v3/ipd-thor/api/v1/workspaces/15/posts?page=2&size=20",
    "previous": null,
    "results": [
      {
        "id": 37481,
        "updatedTime": "2025-06-28T21:39:13+09:00",
        "createdTime": "2025-06-13T16:11:26+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "대팝업의 시대에서 살아남는 브랜드 경험 만들기",
        "subtitle": " 토스 10주년 기념 공간 ‘스퀘어 오브 토스’ 비하인드 ",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/photos/10to100.jpg",
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": "10to100, 토스 10주년 새로운 출발선 문구가 적힌 이미지"
        },
        "key": "10to100-behind",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-27T13:55:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37481,
          "title": null,
          "description": "토스 10주년 기념 공간 ‘스퀘어 오브 토스’ 비하인드: 하루에도 수많은 팝업이 생기고 사라지는 성수동에서, 단지 사람을 많이 불러모으는 것 이상의 좋은 브랜드 경험을 설계하기 위해 고민했던 세 가지 지점을 나눕니다.",
          "urlSlug": "10to100-behind",
          "primaryKeyword": {
            "id": 53175,
            "content": "토스 10주년",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37434,
              "content": "토스 브랜딩",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53177,
              "content": "스퀘어 오브 토스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53179,
              "content": "10to100",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53181,
              "content": "브랜드 경험",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": []
        },
        "openGraph": {
          "title": "대팝업의 시대에서 살아남는 브랜드 경험 만들기",
          "description": "토스 10주년 기념 공간 ‘스퀘어 오브 토스’ 비하인드",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/photos/10to100.jpg",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2571,
          "name": "이지영/심석용",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "2025년 2월, 토스가 10주년을 맞았어요. 브랜드에게 10년은 결코 짧은 시간이 아니지만, 토스에게는 여전히 갈 길이 먼 ‘초기’일지도 몰라요. 그래서 토스는 이번 10주년을 새로운 출발선으로 삼기로 했어요.\n\n이런 방향성은 10주년 캠페인의 이름에도 담겨 있어요. ‘10 to 100’, 지난 10년을 디딤돌 삼아 앞",
        "fullDescription": "2025년 2월, 토스가 10주년을 맞았어요. 브랜드에게 10년은 결코 짧은 시간이 아니지만, 토스에게는 여전히 갈 길이 먼 ‘초기’일지도 몰라요. 그래서 토스는 이번 10주년을 새로운 출발선으로 삼기로 했어요.\n\n이런 방향성은 10주년 캠페인의 이름에도 담겨 있어요. ‘10 to 100’, 지난 10년을 디딤돌 삼아 앞으로의 100년을 향해 나아가겠다는 의지예요. 그리고 캠페인에서 가장 중요하게 생각한 건, 토스와 사용자가 직접 만나고 경험할 수 있는 물리적인 접점이었어요. 그렇게 토스 10주년 기념 공간, ‘스퀘어 오브 토스’가 탄생했어요.\n하루에도 수많은 팝업이 생기고 사라지는 성수동에서, 단지 사람을 많이 불러모으는 것 이상의 좋은 브랜드 경험을 설계하기 위해 고민했던 세 가지 지점을 나눠볼게요.\n1. 캠페인 의도가 녹아든 로고와 공간 찾기\n기획 초기에 가장 중요한 두 가제 과제가 있었어요. 캠페인의 의미를 담은 로고를 만드는 것과, 그 메시지를 자연스럽게 전달할 수 있는 공간을 찾는 것.\n10 to 100은 ‘금융에서 일상으로, 온라인에서 오프라인으로, 국내에서 글로벌로’ 나아가겠다는 방향성과 함께 10년의 시작에서 100년의 여정으로 향한다는 뜻을 담고 있어요. 그래서 로고도 단순한 타이틀이 아니라, 변화의 여정을 시각화하는 데 집중했어요.\n\n10은 현재의 출발선, 100은 우리가 지향하는 미래를, to는 그 사이 움직임과 전환을 상징하는 흐름을 뜻해요. 이를 표현하기 위해 10과 100은 정적인 사각형 안에, to는 유동적인 원형으로 배치해 정체성과 움직임을 동시에 담았죠.\n이 로고에 담긴 메시지를 실제로 구현할 공간 역시 중요했어요. 사실 공간을 찾을 무렵, 스퀘어 오브 토스의 주요 프로그램은 어느 정도 밑그림이 그려져 있었어요. 토크 세션, 전시, 굿즈샵, 라이브러리 등 프로그램의 방향이 분명했기 때문에 기획 의도를 구현할 수 있는 공간을 역으로 찾기 시작했죠.\n서울역, 안국, 광화문 등 다양한 후보지를 돌며 결정한 공간은 성수동의 ‘앤더슨씨’였어요. 이곳은 중앙 광장을 중심으로 두 동의 건물을 함께 사용할 수 있는 구조예요. 프로그램을 유기적으로 배치할 수 있고, 하나의 흐름 속에서 다양한 경험을 연결할 수 있다는 장점이 있었어요. 10에서 100으로, 점에서 선으로 흐르는 여정을 공간에서도 자연스럽게 구현할 수 있다는 점에서 캠페인의 메시지와도 잘 어울린다고 느꼈죠.\n\n2. 내 삶에 닿는 이야기 찾기\n좋은 공간을 찾았으니, 이제 중요한 건 공간을 채울 프로그램을 구체화 하는 일이었어요. 집중한 질문은 하나였어요.\n“이곳에 방문한 사람들이 어떤 이야기와 영감을 얻어갈 수 있을까?”\n기꺼이 시간을 내어 걸음 해준 분들에게, ‘내 삶에 도움이 되는 무언가’를 분명히 전하고 싶었거든요.\n그 고민 끝에 탄생한 것이 ‘토스 위닝 세션’과 ‘넥스트 토크 세션’이었어요. ‘위닝 세션’은 디자인, 개발, 비즈니스 등 6개 분야의 리더들이 직접 토스의 실패와 성장 경험을 솔직하게 나누는 자리였어요. 완성된 결과보다 과정 속에서 얻은 배움과 시행착오에 집중했기 때문에, 누구나 자신의 고민과 겹쳐 생각해볼 수 있는 순간들이 있었죠.\n\n‘넥스트 토크 세션’은 더욱 일상에 가까운 이야기들을 담았어요. 정희원 노년내과 교수, 김경일 인지심리학 교수, 송길영 작가 등 각자의 분야에서 오랜 시간 지혜를 나눠온 연사들을 초청해, 다양한 ‘출발선’에 선 사람들에게 필요한 통찰과 조언을 전했어요.\n누구나 각자의 속도로 인생의 다음 챕터를 준비하고 있잖아요. 그런 분들에게 힘이 되거나, 위로가 되거나, 혹은 새로운 시선을 건넬 수 있는 이야기를 전하고 싶었어요. \n\n발표가 진행된 공간도 단순한 무대가 아닌, 서로의 이야기가 오갈 수 있는 광장 같은 구조로 설계했어요. 고대 그리스의 토론장 ‘아고라’를 참고해 계단식 벤치 좌석을 마련하고, 연사와 관객이 같은 눈높이에서 소통할 수 있도록 했어요. 스포트라이트보다는 자연광과 미색 톤을 적극적으로 활용해, 발표자가 아닌 ‘이야기 자체’에 몰입할 수 있도록 구성했어요.\n\n\n3. 브랜드 이야기를 ‘나의 이야기’로 전환하기\n브랜드가 전하는 메시지가 사용자에게 진심으로 닿기 위해서는, 이야기와 사용자 간의 연결되는 지점이 있어야 해요. 이 연결고리가 약하면, 아무리 정성 들여 만든 메시지도 ‘그냥 어떤 회사의 이야기’로만 들리기 쉽죠. 토스의 이야기를 나의 이야기로 전환하기 위해, 세 가지에 신경 썼어요.\n1️⃣ 실생활의 감각으로 표현하기\n2월 초 공개한 토스 10주년 데이터 리포트를 바탕으로 스퀘어 오브 토스에서 선보인 전시 ‘10의 여정’은, 숫자 중심의 이야기 대신 실생활에 가까운 감각으로 표현했어요. \n대출 비교로 아낀 ‘5억 시간’을 ‘휴가 8.3일’로, 송금 수수료로 아낀 1조 9천억 원을 ‘전국민 1인당 아메리카노 9잔’으로 환산해서 표현했죠. ‘토스가 이만큼 해냈다’는 숫자보다, 사람들이 삶에서 어떤 변화를 체감했는지를 보여주는 방식이 더 설득력 있다고 믿었어요.\n\n2️⃣ 키워드를 나의 언어로 풀기\n토스가 지난 10년 동안 중요하게 여겨온 태도를 10개의 키워드로 정리해 공간 곳곳에 심어두었어요. 이 키워드들은 토스팀이 일할 때마다 되새겼던 말들이자, 동시에 토스의 지난 10년을 돌아보는 중요한 단서이기도 했어요.\n하지만 이 키워드를 단지 토스의 언어로만 남기고 싶지 않았어요. 스퀘어 오브 토스를 찾는 사람들이 각자의 언어로 키워드를 받아들이길 바랐죠. 그래서 누구나 자신의 이야기로 받아들일 수 있도록 사용자 친화적인 설명을 덧붙였어요. \n\n 예를 들어, ‘STAY DRIVEN’은 토스가 폭발적인 성장을 이룬 2019년을 상징하는 키워드예요. 당시 토스는 천만 명이 사용하는 앱으로 자리잡았고, 뱅크·증권 등 새로운 계열사로 확장을 고민하던 중요한 전환점이었어요.\n하지만 이러한 조직의 맥락을 길게 설명하기보다는, “추진력의 불씨를 꺼트리지 않기 — 어떤 날은 빠르게, 어떤 날은 느리게 가더라도 멈추지 않는 것”처럼, 누구나 자기 삶의 맥락에 맞춰 받아들일 수 있는 이야기를 덧붙인 거죠. 이렇게 브랜드의 이야기가 ‘나의 이야기’로 자연스럽게 연결될 수 있도록 했어요.\n또, 선택한 키워드를 직접 경험할 수 있는 프로그램들도 함께 구성했어요. \n선택한 키워드로 나만의 키링을 만들 수 있는 ‘키링 워크숍’ \n셀피존에서 키워드와 함께 인증 사진을 남기는 ‘키워드 포토존’\n키워드가 담긴 티셔츠, 모자를 구입할 수 있는 ‘기념품숍’ \n다양한 프로그램을 즐기며 각자에게 의미 있는 키워드를 고르고, 그 키워드를 통해 토스 10주년의 이야기를 자신만의 방식으로 담아가길 바랐어요.\n\n\n3️⃣ 갖고 싶은 이미지로 만들기\n사람들이 키워드에 더 오래 머물고, 스스로 의미를 연결해볼 수 있도록 디자인적인 장치도 고민했어요. 그중 하나가 바로 서체였어요.\n서체는 단순한 텍스트를 넘어서, 브랜드의 메시지를 시각적으로 각인시키는 좋은 도구라고 생각했거든요. 특히 10개의 키워드를 캠페인 곳곳에 활용하는 만큼, 그 형태에도 브랜드의 철학과 정서가 자연스럽게 녹아 있길 바랐어요.\n그래서 디자인 스튜디오 ‘오렌지 슬라이스 타입’과 함께 전용 서체 ‘Toss SoT’를 만들었어요. 이 서체는 10에서 100으로 나아가는 여정을 굵고 단단한 선과, 끝에서 유연하게 풀리는 흐름으로 표현했어요. 구조 안에는 여백과 긴장감을 담아보려고 했는데요. 조형적 리듬은 간결함과 여유, 의지와 가능성을 동시에 담아내서, 캠페인의 정서와 맞닿아 있도록 했어요.\n\n단순히 읽는 문장이 아니라, ‘갖고 싶은 이미지’가 될 수 있도록 디자인한 거예요. 누군가에겐 이 키워드가 소장하고 싶은 말이 되고, 사진으로 남기고 싶은 문장이 될 수 있길 바라면서요. \n\n\n마치며\n10 to 100 캠페인 이름처럼, 100을 향해 가는 여정 속에서 더 많은 사람들이 토스를 경험하고 긍정할 수 있도록 노력해 갈게요. 이 기록이 비슷한 고민을 하고 있는 분들에게 작지만 실질적인 힌트가 되었기를 바라요.\n좋은 브랜드 경험을 고민하며 얻은 러닝 \n➀ 오프라인 공간은 브랜드 메시지를 체험할 수 있는 무대\n공간은 단지 예쁜 장면을 보여주는 곳이 아니라, 브랜드가 전하고 싶은 이야기를 사람들이 직접 느껴볼 수 있는 무대라고 생각했어요. 구조, 동선, 디자인을 하나의 여정처럼 설계하면 방문자는 그 흐름을 따라 자연스럽게 메시지를 경험하게 되더라고요.\n➁ 사람들이 오프라인 공간에 찾아올 이유 만들기\n사람들의 발걸음을 이끄는 건 결국 삶에 도움이 되는 경험이었어요. 영감을 줄 수 있는 작고 큰 이야기, 생활에 도움이 되는 정보, 나를 돌아보게 하는 질문 한 줄 같은 것들이요. 이런 경험들은 브랜드에 대한 긍정적인 인상으로 이어진다고 생각해요.\n➂ 브랜드 메시지를 사용자의 언어로 번역하기 \n중요한 메시지일수록 브랜드의 시선에서 말하기보다, 사람들이 받아들이기 쉬운 방식으로 풀어내는 게 더 효과적이라는 걸 체감했어요. 사용자의 맥락을 먼저 이해하고 그에 맞게 메시지를 다듬었을 때 더 많은 공감이 돌아왔어요. \n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 1409
      },
      {
        "id": 37483,
        "updatedTime": "2025-06-28T21:39:19+09:00",
        "createdTime": "2025-06-13T16:12:19+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "출시 2주만에 20만명이 쓴 토스증권 어닝콜 서비스 제작기",
        "subtitle": "출시 2주만에 20만명이 쓴 토스증권 ‘어닝콜 서비스’ 제작기를 공개할게요.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts-content/img-cover-techblog-earnings-call.jpg",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts-content/img-cover-techblog-earnings-call.jpg",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "toss-securities-earnings-call",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-27T10:45:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37483,
          "title": null,
          "description": "토스증권의 혁신에 유저들이 찐 감동한 이야기. 토스증권에서 출시한 반응이 뜨거운 '어닝콜' 서비스를 디자이너의 관점에서 어떻게 만들었는지 소개해드려요.",
          "urlSlug": "toss-securities-earnings-call",
          "primaryKeyword": {
            "id": 53131,
            "content": "어닝콜",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 46067,
              "content": "토스증권",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51367,
              "content": "UX디자인",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 51373,
              "content": "UX디자인",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "출시 2주만에 20만명이 쓴 토스증권 어닝콜 서비스 제작기",
          "description": "토스증권의 혁신에 유저들이 찐 감동한 이야기. 토스증권에서 출시한 반응이 뜨거운 '어닝콜' 서비스를 디자이너의 관점에서 어떻게 만들었는지 소개해드려요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts-content/img-cover-techblog-earnings-call.jpg",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2569,
          "name": "정채령",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "토스증권의 혁신에 유저들이 찐 감동한 이야기\n최근 토스증권에서 출시한 서비스에, 사용자들이 이런 의견까지 남겨줄 정도로 감동을 받았어요.\n\n바로 토스증권의 '해외기업 어닝콜 실시간 번역 서비스(이하 ‘어닝콜')예요. 어닝콜은 해외 특정 기업의 실적 발표 직후, 경영진이 투자자와 애널리스트를 모아 숫자 뒤에 숨겨진 해석과 ",
        "fullDescription": "토스증권의 혁신에 유저들이 찐 감동한 이야기\n최근 토스증권에서 출시한 서비스에, 사용자들이 이런 의견까지 남겨줄 정도로 감동을 받았어요.\n\n바로 토스증권의 '해외기업 어닝콜 실시간 번역 서비스(이하 ‘어닝콜')예요. 어닝콜은 해외 특정 기업의 실적 발표 직후, 경영진이 투자자와 애널리스트를 모아 숫자 뒤에 숨겨진 해석과 전략을 발표하는 오디오 회의예요. 한국 증권사 최초로, 어닝콜을 실시간으로 들으면서 한국어 번역과 요약까지 볼 수 있는 제품이라 이렇게 뜨거운 반응을 얻을 수 있었던 것 같아요.\n토스증권 내부에서는 예전부터 어닝콜 서비스에 대한 아이디어가 있었어요. 어닝콜은 투자자들이 가장 주목하는 행사였거든요. 어닝콜 시즌만 되면, 주식 커뮤니티에서는 늘 어닝콜 이야기가 활발하게 오갔죠.\n이번 글에서는, 어닝콜 서비스를 딱 두 달 만에 제작한 이야기를 공유드리려고 해요.\n\n\n어닝콜을 정말 어렵게 보고있는 유저들\n해외기업 어닝콜 실시간 번역 서비스가 한국 증권사 최초라고 말했는데요. 그럼 사용자들은 원래 어닝콜을 어떻게 보고 있었을까요? 리서처 팀과 함께, 어닝콜을 챙겨보시는 분들을 인터뷰 했어요.\n\n\n어닝콜이 1시간 이상 진행되어서 분량이 정말 긴데, 번역본을 다 읽기가 너무 귀찮아요.\n직장인이라 바쁜데 어닝콜은 너무 길고 새벽에 진행해서 챙겨보기 어려워요.\n1-2시간 동안 계속 영어 리스닝을 하면서 듣고 있어요. \n\n생각보다도 훨씬 불편한 방법으로 어닝콜을 보고 계시더라고요. 어닝콜은 보통 1~2시간 정도 진행되는데, 그 시간동안 그냥 듣고 있다고 하셨어요. 특히 외국 기업의 어닝콜은 대부분 영어로 진행되기 때문에, 번역 앱을 쓰거나, 그냥 영어 듣기를 하거나, 유튜브에서 실시간으로 어닝콜을 요약, 해설해주는 스트리밍을 보기도 했어요. 유튜브 라이브는 무려 세시간 동안 진행되더라고요. 어닝콜이 끝난 후 AI 로 스크립트를 해석해서 읽거나, 요약 영상을 보는 분들도 계셨어요.\n놀라웠던 점은 어닝콜을 열심히 보는 분들을 모아 인터뷰를 했음에도, 어닝콜을 처음부터 끝까지 다 듣는 분은 거의 없었다는 거예요. 그렇다면 초보 투자자들은 더더욱 접근이 어려웠겠죠.\n\n\n어닝콜, 실시간으로 요약해준다면?\n초보 투자자든, 고수 투자자든 어닝콜을 더 쉽고 잘 읽히게 만드는 게 목표가 되어야겠다고 생각했어요. 앞서 유튜브 실시간 요약 콘텐츠를 보는 사용자가 있다고 말씀드렸죠? 그것처럼 실시간 요약 기능이 있다면, 번역 스크립트만 보는 것보다 훨씬 도움이 될 것 같았어요.\n\n\n\n만약 그대로 번역만 해줬으면 좌측 영상처럼 텍스트가 그냥 주르륵 나오게 됐을거예요. 그러면 읽는데 굉장히 오랜 시간이 걸렸겠죠?\n\n어닝콜을 실시간으로 요약해주는 경험이 특별하게 느껴지려면, UI의 심미성도 중요하다고 생각했어요. 사용자가 평소와는 완전히 다른, 특별한 라이브 환경에 있다는 걸 확실히 느낄 수 있도록 다크모드를 고정하고 로고의 색이 배경에 은은하게 비치는 시각 효과를 주었어요.\n\n또 텍스트가 번역되거나 요약될 때 음성보다 약간의 딜레이가 생길 수 있는데, 사용자가 이걸 오류로 느끼지 않도록 ‘•••’ 이모지와 ‘번역 중’ 텍스트로 자연스럽게 안내했어요. 긴 전문이 자연스럽게 짧은 요약으로 합쳐지는 것처럼 보이는 인터랙션도 추가해, 사용자가 별도의 안내 없이도 직관적으로 상황을 이해할 수 있게 만들었어요.\n\n\n\n라이브가 끝난 후 요약노트까지\n어닝콜은 보통 새벽 4시, 6시… 굉장히 이른 아침에 발표돼요. 그래서 실시간으로 챙겨보지 못하고, 라이브가 끝난 뒤에 어닝콜을 보는 사용자도 많아요. 그런 사용자들은, 아무리 실시간 요약 버전을 읽어도 너무 길게 느껴질 것 같은 거예요. \n\n인터뷰를 하면서, 어닝콜 스크립트 전체를 GPT에 넣고 요약받는 사용자가 있다는 걸 알게 됐어요. 그래서 저희도 생각했죠. \n\n“GPT, 전문가들이 요약해주듯 AI가 어닝콜 전체를 한번에 요약해주면 좋지 않을까?”\n그래서 AI 분석 요약 노트를 만들었어요.\n\n\n\n실시간 번역탭은 요약을 해도 읽을 텍스트가 매우 많았어요. AI 분석탭을 통해 긴 텍스트를 다 읽지 않아도, 핵심 내용만 빠르게 이해할 수 있게 만들었어요.\n실제 AI 분석 세션은 저희 가설대로 라이브 종료 후에 많이 소비되고 있었어요. 데이터를 보니, 라이브 종료 후 진입한 유저 비율이 48%였어요. 라이브가 끝난 후 요약/해석 콘텐츠에 대한 수요가 확실하다는 걸 확인할 수 있었죠.\n\n\n\n2달 만에 만들어 PM fit 검증하기\n제품의 대략적인 아이디어가 잡히고 나서, 어닝콜 서비스를 만드는 데 걸린 시간은 딱 2달이었어요. 한 달 만에 디자인을 완성하고, 개발팀도 빠르게 작업을 해주셔서 가능했죠. 콘텐츠로서 PMF(Product-Market Fit)가 있는지 검증하기 위해, 어닝콜 시즌이 오기 전 미리 배포해봤어요. 결과는 어땠을까요?\n\n출시 후 2주 만에 20만명 이상이 쓰는 서비스가 되었어요!\n토스증권의 주요 서비스인 뉴스 콘텐츠 주간 이용자가 50만 명인 걸 생각하면, 신생 서비스치고 꽤 많은 사용자를 모은거죠.\n\n이런 지표뿐 아니라, 유저들의 정성적 반응도 있었어요. 정말 뜨거운 반응을 의견창구를 통해서 보내주셨어요\n\n\n\n\n어떻게 AI를 써야할지가 중요한 시대\n어닝콜 서비스를 만들면서 느낀 건, 요즘 AI는 정말 우리가 생각한 것보다 훨씬 앞서 있다는 거예요. 실시간으로 음성을 스크립트로 출력하고, 한국어로 번역하고, 요약까지 해주는 기술이 가능하다니. ‘이게 된다고?’ 싶을 정도였어요. \n그래서 이제는 단순히 AI를 쓰는 걸 넘어서, 어떻게 AI를 유저에게 좋은 경험으로 풀어낼지 고민하는 게 더 중요하다는 생각이 들었어요. AI를 활용해서 유저에게 더 쉽게, 더 큰 가치를 전달하는 것. 그게 앞으로 디자이너가 해야 할 역할이라고 느꼈어요.\n\n\n앞으로 남은 과제\n아마 이 글을 읽는 많은 분들도, 어닝콜이라는 걸 이번 기회에 처음 알게 되셨을 것 같아요. 토스증권 유저들 역시 비슷했어요. 어닝콜을 잘 알고 챙겨보던 유저도 있었지만, 어닝콜이 뭔지 처음 알게 된 유저도 많았거든요.\n토스증권은 이런 정보 비대칭 문제를 해결하고, 모든 투자자가 비슷한 정보를 가지고 투자 판단을 할 수 있도록 서비스를 만들고 있어요.\n앞으로 어닝콜 서비스는, PMF 검증은 끝났다고 판단하고 더 나은 기능들을 추가하면서 고도화할 계획이에요. AI 분석 퀄리티를 높이고, 어닝콜 종료 후, AI가 한글 음성으로 해설해주는 팟캐스트 기능도 실험 중이에요.\n유저분들께 더 쉽고, 더 편리한 어닝콜 경험을 제공하기 위해, 끊임없이 고민하고 발전해 나갈게요. 앞으로도 토스증권의 혁신을 기대해 주세요!\n\n \n\n\n투자자는 금융투자상품(국내주식, 해외주식)에 대해 토스증권으로부터 충분한 설명을 받을 권리가 있어요. 투자하기 전에 관련 상품설명서 및 약관 등을 꼭 읽어주세요.\n이 금융상품은 예금자보호법에 따라 보호되지 않습니다.\n금융투자상품은 자산가격 변동, 환율 변동, 신용등급 하락 등에 따라 투자원금의 손실(0~100%)이 발생할 수 있으며, 그 손실은 투자자에게 귀속돼요.\n국내주식 거래 수수료는 KRX 체결 시 0.015%, NXT(대체거래소)체결 시 0.014%이며, 해외주식 거래수수료는 주문당 매매거래대금이 10달러 이상인 경우 매매거래대금의 0.1%(2025년 12월 까지, 추후 연장 가능), 0.25%(2026년 1월부터)에요. 주문당 10달러 미만인 경우 매수,매도수수료는 없어요(2025년 12월까지, 추후 연장 가능). 단, 거래로 인해 발생된 세금 및 제비용은 고객 부담이에요.\nNXT(넥스트레이드)는 자본시장법상 다자간매매체결회사로 대체거래소(ATS:Alternative Trading System)입니다.\n\n토스증권 준법감시인 심사필 제2025-141호 ((2025-06-25 ~ 2026-06-24)\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 2691
      },
      {
        "id": 37629,
        "updatedTime": "2025-06-28T21:37:28+09:00",
        "createdTime": "2025-06-18T20:22:17+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "접근성 업무일지",
            "id": 1935,
            "slug": "universal_design",
            "parentId": null,
            "iconUrl": "https://static.toss.im/illusts-content/paper-plane.jpg"
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "시각장애인에게 ‘읽는 순서’가 왜 중요할까? | 접근성 업무일지 #1",
        "subtitle": "스크린리더의 역할 정보는 왜 항상 뒤에 읽혀야 할까? 사용자의 사용 방식을 관찰하면서, 시스템의 문법을 다시 생각해본 이야기를 들려드릴게요.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts-content/paper-plane.jpg",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "voiceover_usability",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-27T09:56:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37629,
          "title": null,
          "description": "스크린리더의 역할 정보는 왜 항상 뒤에 읽혀야 할까? 사용자의 사용 방식을 관찰하면서, 시스템의 문법을 다시 생각해본 이야기를 들려드릴게요.",
          "urlSlug": "voiceover_usability",
          "primaryKeyword": {
            "id": 49395,
            "content": "접근성",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 53115,
              "content": "토스 접근성",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53117,
              "content": "스크린리더",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53119,
              "content": "보이스오버",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53121,
              "content": "토스 유니버셜팀",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53123,
              "content": "토스 접근성팀",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 53125,
              "content": "접근성",
              "wordType": "TAG"
            },
            {
              "id": 53127,
              "content": "웹접근성",
              "wordType": "TAG"
            },
            {
              "id": 53129,
              "content": "앱접근성",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "원칙보다 사용성에 집중할 때 | 접근성 업무일지 #1",
          "description": "스크린리더의 역할 정보는 왜 항상 뒤에 읽혀야 할까? 사용자의 사용 방식을 관찰하면서, 시스템의 문법을 다시 생각해본 이야기를 들려드릴게요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts-content/paper-plane.jpg",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2575,
          "name": "김유라/유아란",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "배경\n여러분은 스크린리더라는 기능을 아시나요? 시각장애인 사용자가 앱을 탐색할 때 사용하는 보조 기술로, 화면 위의 요소들을 음성으로 읽어줘요. iOS에서는 ‘보이스오버(VoiceOver)’라는 이름으로 제공되고 있어요. \n\n\n\n보이스오버는 이 화면을 이렇게 읽어줘요.\n\n마케팅 알림, 체크상자, 선택됨, 설정을 끄거나 켜",
        "fullDescription": "배경\n여러분은 스크린리더라는 기능을 아시나요? 시각장애인 사용자가 앱을 탐색할 때 사용하는 보조 기술로, 화면 위의 요소들을 음성으로 읽어줘요. iOS에서는 ‘보이스오버(VoiceOver)’라는 이름으로 제공되고 있어요. \n\n\n\n보이스오버는 이 화면을 이렇게 읽어줘요.\n\n마케팅 알림, 체크상자, 선택됨, 설정을 끄거나 켜려면 이중탭 하십시오\n\n\n이 문장은 3가지 핵심 정보로 구성돼 있어요. 레이블, 역할, 상태인데요. 이 3가지 요소를 파악해야 이게 읽기만 하는 정보인지, 눌러야 할 버튼인지, 현재 어떤 상태인지를 정확히 파악할 수 있어요. 사용성에 가장 중요한 요소인거죠.\n\n\n\n레이블(Label): 컴포넌트 내용 \n역할(Role): 버튼, 탭, 토글 등 컴포넌트 종류\n상태(State): 활성화, 비활성화 등 컴포넌트 현재 상태\n\n\n\n\n사용자는 끝까지 듣지 않는다\n토스에서는 시각장애인 사용자를 대상으로 꾸준히 UT(사용성 테스트)를 진행해오고 있어요. 그 과정에서 반복적으로 발견된 한 가지 사용 패턴이 있었어요. 스크린리더 사용자는 음성을 2배속으로 듣고 다음 항목으로 넘어간다는 점이었죠. 화면을 볼 때 모든 글을 꼼꼼히 읽지 않고 훑는 것 처럼, 스크린리더 사용자도 모든 내용을 끝까지 듣지는 않는거죠. \n\n\n보이스오버 사용자의 탐색 속도\n\n특히 리스트 컴포넌트처럼 앞부분에 읽어야 할 정보가 많은 경우, 사용자가 ‘역할 정보’를 듣기 전에 항목을 넘겨버리는 일이 많았어요.\n\n\n\n예를 들어, 이런 화면을 보이스오버는 “ 쌓인 이자 2,253원, 5,931,424원, 버튼 “ 이라고 읽어줘요. ‘버튼’이라는 역할 정보는 문장의 맨 끝에 오기 때문에, 사용자가 앞부분만 듣고 넘기면 이 항목이 눌러야 할 버튼인지조차 인지하지 못한 채 지나치게 돼요. 결국 다시 해당 항목으로 돌아와 재탐색해야 하는 불편함이 반복되는 거죠.\n\n\n\n그렇다면, 어떻게 읽어줘야할까?\n역할 정보를 뒤에 읽어주는 것은 iOS의 기본 설정이지만, 사용자에게 최선은 아니라고 느껴졌어요. 그래서 리스트 컴포넌트를 어떻게 읽어줘야 더 좋은 사용성을 만들 수 있을지, iOS 개발자, 접근성 컨설턴트, 디자이너가 함께 머리를 맞댔어요. 그 과정에서 몇 가지 아이디어가 나왔어요.\n\n1. 리스트 항목을 분절해서 읽기 \n쌓인 이자 200원 \n10,000원\n버튼 \n\n기존처럼 한꺼번에 읽어주는 게 아니라, 하나하나 쪼개서 읽어주는 거예요. 사용자가 빠른 속도로 탐색하더라도 역할 정보를 비교적 빨리 파악할 수 있죠. 하지만, 초점(Focus)이 지나치게 많아져 오히려 탐색 속도가 느려질 수도 있었어요.\n\n2.효과음으로 알려주기\n(띵) 쌓인 이자 200원,10,000원, 버튼 \n역할 정보를 짧은 효과음으로 구분해주는 아이디어도 있었어요. 예를 들어 버튼은 ‘띵’, 스위치는 ‘툭’, 텍스트는 무음처럼, 귀로 바로 감지할 수 있게 만드는 방식이죠. 사용자가 텍스트를 끝까지 듣지 않더라도, 소리만으로도 이게 어떤 컴포넌트인지 직관적으로 알 수 있어요.\n\n3.역할 정보를 앞에 읽어주기 \n버튼, 쌓인 이자 200원, 10,000원\n마지막으로 떠올린 방법은, 역할 정보를 문장 앞에서 먼저 읽어주는 방식이에요. 사용자가 탐색을 시작하자마자 이 항목이 버튼인지, 단순한 텍스트인지 바로 파악할 수 있도록요.\n하지만 이 방식은 iOS의 기존 시스템 문법과는 다르죠. 토스 앱만 예외적으로 앞에 읽도록 바꿔버리면, 다른 앱들과의 사용성 일관성이 깨질 수 있다는 우려도 있었어요. 그래서 결국 이 문제는 개별 앱이 해결하기보다, 시스템 차원에서 사용자가 읽는 방식을 선택할 수 있도록 옵션을 제공해야 한다는 결론을 내렸어요.\n\n그리고 이 중 두 가지를 정리해 토스에서 어떻게 개선할 수 있을지 고민하면서, 관련 업체에 제안을 해보기도 했어요.\n\n1️⃣ 역할 정보를 텍스트보다 먼저 읽는 옵션을 만들기\n사용자가 탐색을 시작할 때, 이게 버튼인지 아닌지 먼저 인지할 수 있어야 훨씬 효율적으로 탐색할 수 있음\n\n2️⃣ 역할마다 사운드 힌트를 다르게 주기\n버튼은 ‘딸깍’, 스위치는 ‘툭’ 등… 소리로 직관적인 힌트를 주면 빠르게 훑을 때도 탐색이 쉬워짐\n\n\n\niOS 기능이 업데이트 되다\n그 시점에, iOS 18.4에 정말로 변화가 생겼어요. “컨트롤 항목 순서 설정”이라는 이름의 기능이 추가된 거예요. 이제 보이스오버 사용자는 역할 정보를 앞에 들을지, 뒤에 들을지, 혹은 생략할지 직접 설정할 수 있게 됐어요. 기존에는 iOS 환경에서 역할 정보는 항상 뒤에 고정된 순서로만 읽혔기 때문에, 사용자가 직접 순서를 조정할 수 있게 된 건 큰 변화였어요. \n사실 이런 설정은 Android나 Windows 등 다른 플랫폼에서는 이미 제공되고 있었어요. iOS VoiceOver에서 제공되지 않았던 설정이기에, 이번 업데이트가 더욱 인상 깊게 다가왔죠.\n\n내부에서 논의했던 방식들과 굉장히 유사한 방향으로 기능이 개선되었다는 점에서 더욱 반가웠어요. 직접적인 연결은 아니더라도, 우리의 문제의식과 고민이 시스템 변화의 흐름과 맞닿아 있었다는 것만으로도 큰 의미가 있었어요.\n\n\n\n\n\n답은 사용자에게 있다\n이번 변화는 단순히 기능 하나가 추가된 것을 넘어, 우리가 고민해온 방향성과 맞닿아 있었던 시스템의 변화라는 점에서 의미 있게 느껴졌어요. 접근성이라는 시스템의 문법에 질문을 던지고, 더 나은 사용성을 향한 방법을 찾으려는 우리의 시도가 실제 변화의 흐름과 연결되어 있었다는 점에서 더욱 특별하게 다가왔고요.\n이런 논의가 가능했던 이유는, 무언가 지켜야 할 원칙에서 출발한 것이 아니라 사용자의 실제 불편함에 주목했기 때문이라고 생각해요. “원칙상 어쩔 수 없다”는 태도보다는, 지금 이 순간 사용자가 겪는 문제를 어떻게든 풀어내려는 집요한 고민이 있었기에 가능했죠.\n앞으로도 토스 Universal Design 팀은, 사용자가 실제로 느끼는 불편함에 더 가까이 다가가고, 당연한 것에 질문을 던지며 더 좋은 서비스를 만들어보려고 해요. 그 과정을 계속해서 공유할게요!\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 1263
      },
      {
        "id": 37777,
        "updatedTime": "2025-06-28T21:41:19+09:00",
        "createdTime": "2025-06-23T13:15:03+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "토스페이먼츠 결제 시스템 연동을 돕는 MCP 서버 구현기",
        "subtitle": "AI 기반 코딩 도구를 활용해서 토스페이먼츠 결제 시스템을 쉽고 빠르게 연동할 수 있도록, MCP 서버를 구현한 과정과 인사이트를 공유합니다.",
        "bottomButtonConfig": {
          "ctaType": "EMPHASIS_TEXT",
          "imageUrl": null,
          "imageAlt": null,
          "title": "토스페이먼츠 연동 MCP 서버 사용하기",
          "description": "토스페이먼츠 연동 MCP 서버는 MCP 프로토콜을 지원하는 다양한 클라이언트에서 사용할 수 있어요.",
          "ctaName": "결제 연동 가이드 문서 확인하기",
          "landingUrl": "https://docs.tosspayments.com/guides/v2/get-started/llms-guide",
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": "supertoss://web?url=https%3A%2F%2Fdocs.tosspayments.com%2Fguides%2Fv2%2Fget-started%2Fllms-guide%3F&external=true&clearHistory=true&swipeRefresh=true",
          "landingExternal": "https://docs.tosspayments.com/guides/v2/get-started/llms-guide"
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts/mcp_businessfeed_tnail.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "tosspayments-mcp",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-24T15:56:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37777,
          "title": null,
          "description": "안녕하세요, 토스페이먼츠 김용성, 하태호입니다. 지난주, 토스페이먼츠에서 PG업계 최초로 MCP를 소개하면서 많은 분들이 관심가져 주셨는데요. 이 글을 통해 MCP 서버 구현 과정과 그 안에서 얻은 러닝을 공유하고자 해요.",
          "urlSlug": "tosspayments-mcp",
          "primaryKeyword": {
            "id": 52997,
            "content": "MCP",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37528,
              "content": "토스페이먼츠",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37582,
              "content": "AI",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 53011,
              "content": "결제 시스템",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 37580,
              "content": "AI",
              "wordType": "TAG"
            },
            {
              "id": 52999,
              "content": "MCP",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "토스페이먼츠 결제 시스템 연동을 돕는 MCP 서버 구현기",
          "description": "안녕하세요, 토스페이먼츠 김용성, 하태호입니다. 지난주, 토스페이먼츠에서 PG업계 최초로 MCP를 소개하면서 많은 분들이 관심가져 주셨는데요. 이 글을 통해 MCP 서버 구현 과정과 그 안에서 얻은 러닝을 공유하고자 해요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts/mcp_businessfeed_tnail.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2026,
          "name": "김용성",
          "slug": "kys0213",
          "shortDescription": "토스페이먼츠 Node.js Developer",
          "description": "-",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 2,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, 토스페이먼츠 김용성입니다.\n지난주, 토스페이먼츠에서 PG업계 최초로 MCP를 소개하면서 많은 분들이 관심가져 주셨는데요. 이 글을 통해 MCP 서버 구현 과정과 그 안에서 얻은 러닝을 공유하고자 해요.\n요약 \n\n토스페이먼츠의 API 연동을 조금이라도 더 쉽고 빠르게 하기 위해, AI 기반 코딩 도구 활용시 도",
        "fullDescription": "안녕하세요, 토스페이먼츠 김용성입니다.\n지난주, 토스페이먼츠에서 PG업계 최초로 MCP를 소개하면서 많은 분들이 관심가져 주셨는데요. 이 글을 통해 MCP 서버 구현 과정과 그 안에서 얻은 러닝을 공유하고자 해요.\n요약 \n\n토스페이먼츠의 API 연동을 조금이라도 더 쉽고 빠르게 하기 위해, AI 기반 코딩 도구 활용시 도움이 될 수 있도록 토스페이먼츠 연동 MCP 서버를 제공합니다. 자세한 내용은 토스페이먼츠 연동 가이드를 참고하세요.\n토스페이먼츠 연동 MCP 서버를 활용하면 AI 기반 코딩 도구를 단독으로 사용할 때보다 연동 코드 생성 정확도가 높아집니다.\n토스페이먼츠 연동 MCP 서버는, 길드(guild) 내 작은 논의에서 시작된 아이디어로부터 구현되어 글 작성 시점에 AI 모델에게 제공되는 지원되는 맥락 정보가 부족할 수 있습니다. 토스페이먼츠의 API 연동 경험이 더 나아질 수 있도록 계속해서 개선해 나가 볼게요.\n본 글에는 코드가 많이 첨부되어 있어 내용이 길어요. 자세한 내용이 궁금하신 분은 PC 환경에서 읽어보시기를 권장드립니다.\n* 길드(guild): 서로 다른 팀이나 사일로에 속한 팀원들이 느슨하게 모여 공통의 관심사를 공유하는 조직\n\n먼저 이해를 돕기 위해 짧은 시연 영상을 준비했어요. 외부 개발자분들이 토스페이먼츠 MCP를 활용해서 주문서 페이지를 만드는 상황에 대한 예시입니다. 로딩이나 일부 수정 과정은 생략했고, Claude 4 모델을 사용했습니다.\n\n구현 배경\n토스페이먼츠는 출범 초기부터 어떻게 하면 고객사가 결제 시스템을 더 쉽게 연동할 수 있을지에 대한 고민이 많았습니다. 기존의 결제 시스템 연동 방식은 개발자에게 복잡하고 번거로운 작업이라는 인식을 풀어야 했기 때문이죠.\n이 문제를 해결하기 위해 직관적인 API와 SDK를 새로 만들고, 토스페이먼츠 결제 시스템을 연동하는 개발자들을 위한 개발자 센터를 만드는 등 다양한 활동을 수행하였고, 개발자분들로부터 좋은 피드백을 받았습니다.\n그렇지만 여전히 결제 시스템 연동의 어려움을 겪는 분들이 많이 계신데요, 개발팀이 따로 없는 작은 가맹점이나 외부에 개발을 맡긴 사업자분들이 특히 어려움을 겪고 있었습니다. AI 기반 코딩 도구를 활용하면 토스페이먼츠 연동을 더 쉽게 할 수 있지 않을까?하는 생각을 바탕으로 토스페이먼츠 연동 코드를 작성해 보았지만, 생성된 코드의 정확도가 많이 떨어지는 문제가 있었어요.\n이 문제를 해결하기 위한 고민을 하던 중, AI 모델이 이해할 수 있는 맥락 정보를 제공할 수 있는 방법인 MCP(Model-Context Protocol)라는 개념이 등장해서 이를 활용해보기로 했습니다.\n\nMCP란?\n\nMCP는 엔트로픽에서 제안한, 인공지능 모델(LLM)이 다양한 상황과 맥락을 잘 이해할 수 있도록 돕는 표준적인 방법입니다. USB가 컴퓨터와 주변기기들을 간편하게 연결할 수 있는 표준을 만들었던 것처럼, MCP는 AI 모델과 다양한 환경이 자연스럽게 연결될 수 있도록 돕습니다. MCP 덕분에 하나의 서버에서 다양한 AI 툴(예: Cursor, Claude, Windsurf 등)을 편하게 사용할 수 있게 되는 것이죠. 저희는 MCP를 활용해, 개발자들이 더 쉽고 즐겁게 작업할 수 있는 '바이브 코딩' 환경을 만들려고 하고 있어요.\n\n양질의 콘텐츠 준비하기 \nMCP에서 가장 중요한 건, AI가 잘 이해할 수 있는 콘텐츠를 전달하는 것입니다. 하지만 모든 제품에 대해 콘텐츠를 개별적으로 제작하는 건 시간과 비용이 너무 많이 들죠. 다행히 저희는 이미 MDX 기반의 개발자 센터를 운영하고 있었고, CI/CD 과정에 CDN에 배포되는 구조라서 MCP 서버가 해당 콘텐츠에 접근한다면 문서의 버전업을 그대로 따라가는 구조를 충족할거라 생각했습니다. 이를 기반으로 LLM이 잘 이해할 수 있도록 llms.txt 파일을 만들어 프로토타입을 빠르게 구축할 수 있었어요. 특히 이 과정에서 프론트엔드 챕터의 신지호님께서 큰 도움을 주셨습니다.\nllms.txt는 대규모 언어 모델(LLM)이 웹사이트 콘텐츠를 더 잘 이해하고 상호 작용할 수 있도록 돕는 제안된 표준 파일이에요. 이 파일은 LLM이 웹사이트의 문서, 코드베이스 등과 어떻게 상호 작용해야 하는지에 대한 정보를 제공하여 LLM 기반 도구와 서비스의 효율성을 높이는 데 사용됩니다.\n* 참고: https://llmstxt.org/\n\nMCP Transport 결정하기 \n처음에는 Websocket이나 SSE 기반의 Remote MCP도 고려했지만 로컬 기반의 MCP 서버를 구현하기로 결정했어요. 로컬 기반 MCP 서버를 사용하며 얻을 수 있었던 장점들은 아래와 같습니다.\n\nCDN에 업로드된 개발자 센터 문서를 기반하므로 SSOT(Single Source of Truth)달성 가능\n사용자가 늘어나도 각 유저의 로컬 장비에서 실행하므로 서버 비용 발생 없음\nMCP 스펙에 STDIO Transport가 존재함\nNPM에 배포하여 이미 검증된 패키지 매니저를 사용하므로 추가 관리 비용 없음\n\n첫 번째 버전\nllms.txt에 기반하여 사전의 정의된 키워드 기반으로 문서를 검색하는 방식으로 구현하였습니다.\n\n\n도구 목록\n프로토타입은 아래 4개의 도구를 지원하였고, LLM은 이 도구들을 사용하여 토스페이먼츠 개발자 센터 문서를 탐색해요.\n\nget-keywords\ndocuments-by-keywords\ndocuments-by-link\ndocument-by-id\n\nget-keywords\n사전에 정의된 키워드 목록을 반환하는 도구입니다. LLM은 조회한 키워드 목록을 보고 사용자 질의를 분석하여 적절한 키워드를 추출 후 docs-by-keywords를 호출합니다.\nDescription\n\n반드시 먼저 호출하여 지원하는 키워드를 조회하세요. 조회된 키워드를 바탕으로 사용자의 질문에서 키워드를 추출합니다.\nResponse\nblog: \"토스페이먼츠 공식 블로그 게시글입니다.\"\ncodes: \"연동 시 사용하는 데이터 타입, ENUM 코드, 기관 코드 등을 정리한 문서입니다.\"\nguides: \"개발자가 참고할 수 있는 연동 가이드 문서입니다.\"\nresources: \"제품 설명과 범용 규약을 정리한 문서입니다.\"\nreference: \"연동 시 참조할 수 있는 참고용 문서입니다.\"\nsdk: \"토스페이먼츠 SDK 관련 문서입니다.\"\nlegacy: \"LG U+ 관련 레거시 시스템 문서입니다.\"\npayment-widget: \"결제 위젯 관련 문서입니다.\"\npayment-window: \"결제창 관련 문서입니다.\"\nbilling: \"정기결제 관련 문서입니다.\"\nbrandpay: \"브랜드페이 관련 문서입니다.\"\nquick: \"퀵 계좌이체 연동 문서입니다.\"\n결제위젯: \"결제 위젯 관련 문서입니다.\"\n결제창: \"결제창 관련 문서입니다.\"\n퀵계좌이체: \"퀵 계좌이체 연동 문서입니다.\"\n빌링: \"정기결제 관련 문서입니다.\"\n브랜드페이: \"브랜드페이 관련 문서입니다.\"\nv1: \"v1 버전의 문서입니다.\"\nv2: \"v2 버전의 문서입니다.\"\n\ndocuments-by-keywords\nLLM 키워드를 적절하게 추출하여 질의하면, MCP 서버가 문서들을 순회하며 다양한 조건별 점수를 계산하고 상위 10개의 문서를 반환하는 도구입니다.\n내부 동작 코드\nexport class TossPaymentsDocument {\n  constructor(\n    private readonly rawDocs: RawDocs,\n    private readonly keywordSet: Set<Keyword>,\n    public readonly id: number\n  ) {}\n  \n  ...\n  \n  scoreByKeywords(keywords: Keyword[]): number {\n\t  return keywords\n\t    .map((keyword): number => {\n\t      if (this.keywordSet.has(keyword)) {\n\t        // 키워드별 가중치 \n\t        return KeywordWeightConfig[keyword] ?? 1;\n\t      }\n\t\n\t      if (keyword === \"v1\" || keyword === \"v2\") {\n\t        return -1;\n\t      }\n\t\n\t      if (this.rawDocs.text.includes(keyword)) {\n\t        return 0.3;\n\t      }\n\t\n\t      return 0;\n\t    })\n\t    .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\n\t }\n}\nexport class TossPaymentDocsRepository {\n  constructor(private readonly documents: TossPaymentsDocument[]) {}\n  \n  async getTopMatchedDocumentsByKeywords(\n    keywords: Keyword[],\n    topN: number = 10\n  ): Promise<TossPaymentsDocument[]> {\n    const scoredDocs = this.documents\n      .map((doc) => ({ doc, score: doc.scoreByKeywords(keywords) }))\n      .filter(({ score }) => score > 0) // 매칭이 아예 없는 문서는 제외\n      .sort((a, b) => b.score - a.score) // 점수 높은 순 정렬\n      .slice(0, topN); // 상위 N개만 반환\n\n    return scoredDocs.map(({ doc }) => doc);\n  }\n}\nDescription\n키워드 목록을 기반으로 관련된 문서들을 조회합니다. 반드시 get-keywords 에서 조회한 키워드로 탐색해야합니다. 만약 버전정보를 확인할 수 없으면 v2 를 우선해서 사용해주세요.\n\n## 파라미터 형식\n{\n  \"keywords\": string[]  // UTF-8 인코딩된 문자열 배열\n}\n\n\n## 올바른 사용법 예시\n{\n  \"keywords\": [\"sdk\", \"결제위젯\", \"v2\"]\n}\n\n{\n  \"keywords\": [\"결제창\", \"v2\"]\n}\n\n\n## 파라미터 유효성 검사 규칙\n1. 반드시 JSON 객체여야 함\n2. keywords 필드는 필수이며 배열 타입이어야 함\n3. 배열의 각 요소는 UTF-8 인코딩된 문자열이어야 함\n4. 배열은 최소 1개 이상의 요소를 포함해야 함\n\n## 잘못된 사용 예시와 오류 메시지\n- [\"sdk\", \"결제위젯\"]\n  ❌ Error: 최상위 레벨이 JSON 객체가 아님\n  \n- { \"keywords\": \"결제위젯\" }\n  ❌ Error: keywords 필드가 배열 타입이 아님\n  \n- { \"keywords\": [1, 2] }\n  ❌ Error: 배열 요소가 문자열 타입이 아님\n  \n- { \"keywords\": [] }\n  ❌ Error: keywords 배열이 비어있음\nResponse \nMCP 서버 내부에서 채번한 unique 한 id 와 제목, 문서 설명 정보를 반환합니다.\n1 [Android, iOS 웹뷰에서 딥링크 열기] 각 딥링크 유형의 특징과 차이점을 자세히 알아보고, Android와 iOS 웹뷰에서 딥링크로 국내 카드앱·은행앱으로 이동하는 예시를 살펴볼게요.\n2 [Basic 인증과 Bearer 인증의 모든 것] 비밀번호로 이메일 계정의 권한을 확인하는 것 처럼, HTTP 인증으로 서버에 접근하는 클라이언트의 권한을 확인해요.\n...\n\ndocuments-by-link\nLink 기반으로 문서를 탐색하는 도구입니다. LLM이 문서를 탐색하는 중에 Markdown 링크로 표현된 문서를 만나는 경우 탐색을 실시합니다.\n내부 동작 코드\n\nexport class TossPaymentsDocument {\n\n  private readonly linkPath: string[];\n\n  constructor(\n    private readonly rawDocs: RawDocs,\n    private readonly keywordSet: Set<Keyword>,\n    public readonly id: number\n  ) {\n    this.linkPath = this.destructureLink(rawDocs.link);\n  }\n  \n  ...\n  \n  scoreByLink(link: string): number {\n    const destructureLink = this.destructureLink(link);\n\n    return destructureLink\n      .map((path, index): number => {\n        const docPath = this.linkPath[index];\n\n        if (!docPath) {\n          return -1;\n        }\n\n        if (docPath === path) {\n          return 2;\n        } else if (docPath.startsWith(path) || path.startsWith(docPath)) {\n          return 1;\n        } else if (docPath.includes(path) || path.includes(docPath)) {\n          return 0.1;\n        }\n\n        return 0;\n      })\n      .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\n  }\n  \n  private destructureLink(link: string) {\n    if (link.endsWith(\".md\")) {\n      link = link.slice(0, link.length - 3);\n    }\n\n    if (!link.startsWith(\"http\")) {\n      link = `https://docs.tosspayments.com${\n        link.startsWith(\"/\") ? link : `/${link}`\n      }`;\n    }\n\n    const url = new URL(link);\n    return url.pathname\n      .split(\"/\")\n      .filter((part) => part !== \"\")\n      .reverse();\n  }\n}\nexport class TossPaymentDocsRepository {\n  constructor(private readonly documents: TossPaymentsDocument[]) {}\n  \n  ...  \n  \n  async getTopMatchedDocumentsByLink(\n    link: string,\n    topN: number = 10\n  ): Promise<TossPaymentsDocument[]> {\n    const alias = LinkAlias[link];\n\n    if (alias) {\n      link = alias;\n    }\n\n    const scoredDocs = this.documents\n      .map((doc) => ({ doc, score: doc.scoreByLink(link) }))\n      .filter(({ score }) => score > 0) // 매칭이 아예 없는 문서는 제외\n      .sort((a, b) => b.score - a.score) // 점수 높은 순 정렬\n      .slice(0, topN); // 상위 N개만 반환\n\n    return scoredDocs.map(({ doc }) => doc);\n  }\n}\nDescription\n문서 링크를 입력하여 문서의 상세 내용을 조회합니다. 마크다운 문법에서 link syntax 로 정의된 링크를 입력해주세요.\nex1) [https://docs.tosspayments.com/llms.txt](https://docs.tosspayments.com/llms.txt) => { \"link\": \"https://docs.tosspayments.com/llms.txt\" }\nex2) [SDK 링크](/sdk/v2/js) => { \"link\": \"/sdk/v2/js\" }\nResponse\nMCP 서버 내부에서 채번한 unique 한 id 와 제목, 문서 설명 정보를 반환합니다.\n1 [Android, iOS 웹뷰에서 딥링크 열기] 각 딥링크 유형의 특징과 차이점을 자세히 알아보고, Android와 iOS 웹뷰에서 딥링크로 국내 카드앱·은행앱으로 이동하는 예시를 살펴볼게요.\n2 [Basic 인증과 Bearer 인증의 모든 것] 비밀번호로 이메일 계정의 권한을 확인하는 것 처럼, HTTP 인증으로 서버에 접근하는 클라이언트의 권한을 확인해요.\n...\n\n\ndocument-by-id\nMCP 서버 내부에서 채번한 ID를 기반으로 문서를 조회하는 도구입니다. get-keywords, documents-by-keywords, documents-by-link 도구를 사용하여 사용자 질의에 맞는 문서를 찾는 경우 해당 도구로 문서를 조회합니다.\n내부 동작 코드\nexport class TossPaymentDocsRepository {\n  constructor(private readonly documents: TossPaymentsDocument[]) {}\n  \n  ...\n  \n\tasync findOneById(id: number) {\n    return notNull(this.documents[id]);\n  }\n}\nDescription\n문서의 원본 ID 로 해당 문서의 전체 내용을 조회합니다.\nResponse\n***\n\ntitle: 예제로 이해하는 async/await 문법\ndescription: 오늘은 Promise의 단점을 알아보고, async/await 문법으로 어떻게 비동기 작업을 더 효율적으로 처리할 수 있는지 토스페이먼츠 결제위젯 예시로 자세히 살펴볼게요.\nkeyword: Promise, 프로미스, async, await, 비동기 작업, 결제 요청, 에러 처리\npublishedAt: 2023-10-10\nthumbnailSrc: https://static.toss.im/assets/payments/contents/paymetns-await-thumb.jpg\n--------------------------------------------------------------------------------------\n\n# 예제로 이해하는 async/await 문법\n\n2023년 10월 10일 ・ 읽는 시간 9분\n\n![async/await 문법 메인 이미지](https://static.toss.im/assets/payments/contents/paymetns-await-thumb.jpg)\n\n[지난 포스트](/blog/using-promises)에서는 콜백 함수 대신 Promise로 비동기 작업을 깔끔하게 처리하는 방법을 알아봤어요. 근데 Promise에도 콜백 함수와 비슷한 단점이 있어요. 오늘은 Promise의 단점을 알아보고, `async/await` 문법으로 어떻게 비동기 작업을 더 효율적으로 처리할 수 있는지 [토스페이먼츠 결제위젯](/guides/payment-widget/overview) 예시로 자세히 살펴볼게요.\n\n...\n\n결과 및 후기\n첫 번째 버전은 사전에 정의된 키워드를 기반으로 문서를 검색하는 방식이었습니다. 하지만 실제 운영을 해보니 AI 모델이 자꾸 엉뚱한 결과(Hallucination)를 내거나, 중요한 정보를 놓치는 경우가 많았어요. LLM의 호출 빈도도 증가했죠.\n문서별 길이가 천차만별이고, 길이가 긴 것은 5,000 라인이 넘어간다는 점이 원인으로 추측되었어요. 그런 문서들을 LLM이 여러 번 질의하면서 Checkpoint를 만들거나 대화내용을 요약하는 과정에서 중요한 정보들이 유실되는 현상으로 보여졌습니다. 때문에 새로운 방법을 고민해야했고 우리의 친구 Gemini, GPT와 이야기하며 다른 방법을 탐구했어요.\n\n두번째 버전\nGemini와 많은 대담을 나누다가 BM25라는 키워드를 확인했고, 해당 방식으로 변경해보기로 했어요.\n\nBM25는 Best Matching 25의 약자로, 확률적 정보 검색 모델인 Okapi BM25에서 유래했습니다. 이 모델은 특정 문서가 주어진 질의에 얼마나 관련이 있는지를 측정하는 방식으로 작동합니다.\n기본 개념\n문서에 등장한 질의어(Query term)의 빈도가 높을수록 관련성이 높다고 판단\n하지만 너무 자주 등장하는 단어는 가중치를 낮춤(IDF: 역문서 빈도)\n문서 길이에 따라 빈도의 영향을 보정함\n\n사용사례\n검색엔진: 사용자의 질의에 가장 관련 있는 문서 또는 웹페이지를 정렬\n문서 추천 시스템: 비슷한 내용을 가진 문서 간 유사도 측정\nRAG(Retrieval-Augmented Generation): LLM에 문서를 제공하기 위한 사전 필터링 단계\n\nBM25 사용하기\nJavascript에는 Python처럼 잘 구현된 BM25가 없어서, GPT의 도움을 받아 빠르게 만들어 볼 수 있었습니다. 하지만 해당 코드를 바로 사용할 수 없었는데요, 이유는 한국어의 특징 때문이었어요.\nGPT표 BM25\ntype DocumentTokens = string[];\n\nclass BM25 {\n  private corpus: DocumentTokens[];\n  private docCount: number;\n  private docLengths: number[];\n  private avgdl: number;\n  private termDocFreqs: Map<string, number>;\n  private k1: number;\n  private b: number;\n\n  constructor(docs: string[], k1: number = 1.5, b: number = 0.75) {\n    this.k1 = k1;\n    this.b = b;\n    this.corpus = docs.map(this.tokenize);\n    this.docCount = this.corpus.length;\n    this.docLengths = this.corpus.map(doc => doc.length);\n    this.avgdl = this.docLengths.reduce((a, b) => a + b, 0) / this.docCount;\n    this.termDocFreqs = this.calculateDocFrequencies();\n  }\n\n  private tokenize(text: string): DocumentTokens {\n    return text.toLowerCase().match(/\\b\\w+\\b/g) || [];\n  }\n\n  private calculateDocFrequencies(): Map<string, number> {\n    const dfMap = new Map<string, number>();\n    for (const doc of this.corpus) {\n      const uniqueTerms = new Set(doc);\n      for (const term of uniqueTerms) {\n        dfMap.set(term, (dfMap.get(term) || 0) + 1);\n      }\n    }\n    return dfMap;\n  }\n\n  private idf(term: string): number {\n    const df = this.termDocFreqs.get(term) || 0;\n    return Math.log(1 + (this.docCount - df + 0.5) / (df + 0.5));\n  }\n\n  private termFrequency(term: string, doc: DocumentTokens): number {\n    return doc.reduce((count, t) => (t === term ? count + 1 : count), 0);\n  }\n\n  public score(query: string, docIndex: number): number {\n    const tokens = this.tokenize(query);\n    const doc = this.corpus[docIndex];\n    const dl = doc.length;\n\n    let score = 0;\n    for (const term of tokens) {\n      const tf = this.termFrequency(term, doc);\n      const idf = this.idf(term);\n      const denom = tf + this.k1 * (1 - this.b + this.b * (dl / this.avgdl));\n      score += idf * ((tf * (this.k1 + 1)) / denom);\n    }\n    return score;\n  }\n\n  public rank(query: string): { index: number; score: number }[] {\n    return this.corpus.map((_, i) => ({\n      index: i,\n      score: this.score(query, i),\n    })).sort((a, b) => b.score - a.score);\n  }\n}\n\n예를 들어 다음 문장을 살펴 보겠습니다.\n\"BM25는 정보 검색에 사용되는 랭킹 함수입니다.\"\n영어식으로 토큰화하면 아래와 같은 결과가 나옵니다.\n[\"bm25는\", \"정보\", \"검색에\", \"사용되는\", \"랭킹\", \"함수입니다\"]\n\n발생한 문제\n의미 단위로 잘게 나눠지지 않음\n조사(는, 에), 어미(는, 다) 등이 그대로 포함되어 중복되고 불필요한 토큰이 많아짐\n같은 의미의 문장도 표현에 따라 일치하지 않음\n\n한국어 문장을 일관성 있고 의미 있게 토큰화하기 위해서는 형태소 분석 라이브러리가 필요했어요. 그러나 형태소 분석 라이브러리는 Java나 C와 같은 추가적인 환경 설정을 요구하기 때문에, 이러한 외부 의존성들이 로컬 MCP의 사용성을 저하시킬 수 있다고 판단하여 배제하였습니다. 다행히도 이 문제는 보다 간단한 방식으로 해결이 가능했어요.\nMCP 실행 환경에서는 모든 선택의 주체가 LLM입니다. 어떤 도구를 사용할지, 그리고 해당 도구를 어떤 파라미터로 실행할지는 전부 LLM이 결정하며, 사용자는 오직 도구 호출 여부만 선택하면 됩니다. 사용자의 질의를 LLM을 통해 유의미한 형태로 토큰화하고, 이 토큰화 된 질의에 정규식을 적용하여 매번 BM25 점수를 계산하면, 질문과 유사한 문서들을 효과적으로 색인할 수 있습니다.\n하지만 이 방법만으로 모든 문제가 해결되는 것은 아닙니다. 한국어 기반 문서에서 BM25를 적용하는 아이디어는 명확히 떠올렸지만, 본질적인 문제는 문서의 크기가 크다는 점이에요. 따라서 문서를 유의미한 크기의 청크(Chunk)로 잘라내는 작업이 추가로 필요했습니다.\n\n문서별 의미있는 Chunk 만들기\n청크(Chunk)를 너무 세분화하는 경우 중요한 정보가 유실될 수 있으므로, 마크다운 Header (#, ##)를 기준으로 문서를 자른 다음 BM25를 기반으로 점수를 계산하도록 개선하였습니다.\n\n마크다운을 파싱할 수 있는 라이브러리는 다양하지만, 저는 unist-util-visit, remark-parse, unified 세 가지 라이브러리를 활용하여 마크다운을 청크로 변환했습니다.\n\nunified 와 remark-parse 를 통해 markdown 을 분석하여 AST 트리로 변환합니다. \nconst tree = unified().use(remarkParse).parse(markdown);\n그 다음 unist-util-visit 을 사용하여 tree 를 순회합니다.\nvisit(tree, (node) => {\n  if (node.type === \"heading\" && node.depth <= 2) {\n    chunks.push(...)\n  }\n  ...\n});\n위의 과정을 거쳐서 각 마크다운 별로 header(#, ##)를 기준으로 문서를 자를 수 있습니다. \n\n마지막으로, 청크의 크기가 너무 작으면 유의미한 정보가 유실되거나 무의미한 데이터가 될 수 있으므로 일정 크기 이하의 청크는 병합하는 작업도 진행합니다.\n\nexport function joinShortChunks(chunks: string[], minWords = 30): string[] {\n  const result: string[] = [];\n\n  let buffer = \"\";\n  let bufferCount = 0;\n\n  for (const chunk of chunks) {\n    const wc = chunk.split(/\\s+/).length;\n    if (wc < minWords) {\n      buffer += (buffer ? \"\\n\\n\" : \"\") + chunk;\n      bufferCount += wc;\n      continue;\n    }\n\n    if (buffer) {\n      result.push(buffer.trim());\n      buffer = \"\";\n      bufferCount = 0;\n    }\n\n    result.push(chunk.trim());\n  }\n\n  if (buffer) {\n    result.push(buffer.trim());\n  }\n\n  return result;\n}\n\nBM25에 정규식 및 청크 문서 적용하기 \n이제 준비는 끝났습니다. 청크를 관리하는 Document 클래스와 유저가 입력한 키워드를 정규식으로 변환하여 점수를 계산하는 Calculator 를 준비합니다.\nexport class TossPaymentsDocument {\n  private readonly chunks: DocumentChunk[] = [];\n\n  constructor(\n    private readonly keywordSet: Set<string>,\n    private readonly remoteMarkdownDocument: RemoteMarkdownDocument,\n    private readonly _version: string | undefined,\n    public readonly id: number\n  ) {\n    remoteMarkdownDocument.chunks.forEach((chunk, index) => {\n      this.chunks.push({\n        id: this.id,\n        chunkId: this.id * 1000 + index,\n        originTitle: remoteMarkdownDocument.metadata.title,\n        text: chunk,\n        wordCount: chunk.split(/\\s+/).length,\n      });\n    });\n  }\n\n  getChunkWithWindow(chunkId: number, windowSize: number): DocumentChunk[] {\n    const chunkIndex = this.chunks.findIndex(\n      (chunk) => chunk.chunkId === chunkId\n    );\n    if (chunkIndex === -1) {\n      return [];\n    }\n\n    const start = Math.max(0, chunkIndex - windowSize);\n    const end = Math.min(this.chunks.length, chunkIndex + windowSize + 1);\n\n    return this.chunks.slice(start, end);\n  }\n\n  getChunks(): DocumentChunk[] {\n    return this.chunks;\n  }\n\n  get content(): string {\n    return this.remoteMarkdownDocument.markdown;\n  }\n\n  get title() {\n    return this.remoteMarkdownDocument.metadata.title;\n  }\n\n  get version(): string | undefined {\n    return this._version;\n  }\n\n  get description() {\n    return this.remoteMarkdownDocument.metadata.description;\n  }\n\n  toString() {\n    return this.remoteMarkdownDocument.markdown;\n  }\n\n  toJSON() {\n    return {\n      version: this.version,\n      id: this.id,\n      title: this.title,\n      link: this.remoteMarkdownDocument.link,\n      description: this.description,\n      keywords: Array.from(this.keywordSet),\n    };\n  }\n}\n\nexport class TossPaymentsBM25Calculator {\n  private readonly allChunks: DocumentChunk[];\n  pri",
        "isDisplayingFeedback": false,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 28617
      },
      {
        "id": 37627,
        "updatedTime": "2025-06-28T21:36:32+09:00",
        "createdTime": "2025-06-18T20:22:06+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "에러 0%, MSA에서의 Enum 관리 전략",
        "subtitle": "토스뱅크 여신의 발전하는 MSA에서 Enum을 안전하게 사용하는 노하우를 알려드립니다.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts-content/img-cover-techblog-server.jpg",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts-content/img-cover-techblog-server.jpg",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "msa-enum",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-18T20:30:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37627,
          "title": null,
          "description": "안녕하세요, 토스뱅크 Server Developer 김인회 · 이준영입니다.토스뱅크는 다른 은행과 달리 시스템을 MSA(Microservice Architecture)로 구축해 빠른 개발과 배포 속도를 누리고 있습니다. 하지만 \"은탄환은 없다\"는 말처럼, MSA는 다양한 복잡함을 수반했...",
          "urlSlug": "msa-enum",
          "primaryKeyword": {
            "id": 52949,
            "content": "Enum",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 44257,
              "content": "MSA",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52951,
              "content": "Server",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52953,
              "content": "kotlin",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52955,
              "content": "java",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 41784,
              "content": "Server",
              "wordType": "TAG"
            },
            {
              "id": 52943,
              "content": "MSA",
              "wordType": "TAG"
            },
            {
              "id": 52945,
              "content": "Enum",
              "wordType": "TAG"
            },
            {
              "id": 52947,
              "content": "Kotlin",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "에러 0%, MSA에서의 Enum 관리 전략",
          "description": "안녕하세요, 토스뱅크 Server Developer 김인회 · 이준영입니다.토스뱅크는 다른 은행과 달리 시스템을 MSA(Microservice Architecture)로 구축해 빠른 개발과 배포 속도를 누리고 있습니다. 하지만 \"은탄환은 없다\"는 말처럼, MSA는 다양한 복잡함을 수반했...",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts-content/img-cover-techblog-server.jpg",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2573,
          "name": "김인회/이준영",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, 토스뱅크 Server Developer 김인회 · 이준영입니다.\n토스뱅크는 다른 은행과 달리 시스템을 MSA(Microservice Architecture)로 구축해 빠른 개발과 배포 속도를 누리고 있습니다. 하지만 \"은탄환은 없다\"는 말처럼, MSA는 다양한 복잡함을 수반했는데요. 그중 하나가 바로 Enum",
        "fullDescription": "안녕하세요, 토스뱅크 Server Developer 김인회 · 이준영입니다.\n토스뱅크는 다른 은행과 달리 시스템을 MSA(Microservice Architecture)로 구축해 빠른 개발과 배포 속도를 누리고 있습니다. 하지만 \"은탄환은 없다\"는 말처럼, MSA는 다양한 복잡함을 수반했는데요. 그중 하나가 바로 Enum입니다.\n이번 글에서는 MSA 환경에서 Enum이 왜 문제가 될 수 있는지, 그리고 토스뱅크는 이를 어떻게 해결했는지에 대해 소개해 드리려고 합니다.\n\nMSA에서는 독이 될 수 있는 Enum\nEnum은 타입 안정성, 컴파일 타임 체크, IDE의 자동완성 등의 장점이 있어서 Java 혹은 Kotlin을 다뤄본 개발자라면 자주 사용하는 도구일 것 입니다.\n하지만 MSA환경에서는 이러한 Enum이 자칫 독이 될 수도 있는데요.\nMSA에서는 하나의 Enum을 각 서버끼리 공유할 때 정의되지 않은 Enum 값이 넘어오면 Deserialize 에러가 발생합니다.\n\n\n많게는 1년에 한두번씩 꾸준히 발생하는 이 문제는, 단순히 휴먼 에러라고 치부하기에는 너무 빈번하고 치명적이에요. 담당자가 바뀌거나, 서비스가 확장되거나, 새로운 Enum 값이 추가되는 순간 다시 문제가 발생하기 시작했고 토스뱅크 또한 예외는 아니었습니다. \n발전하는 MSA 속에서 Enum 관리가 점점 어려워지기 시작했고 결국 사람의 주의가 아닌 시스템적으로 이 문제를 예방하고 관리할 수 있는 방법이 필요해지기 시작했습니다.\n\n제공자와 소비자\nMSA에서 Enum 문제가 복잡해지는 이유 중 하나는 통신 주체에 따라 기대하는 동작이 다르기 때문입니다. \n그래서 저희는 요청 주체 기준으로 Enum 사용을 '제공자'와 '소비자'로 나누었고 각각의 Use Case에 맞는 전략을 수립했습니다.\n\n1. 클라이언트(소비자) → 서버(제공자): 요청을 수신하는 입장에서는 오류가 명확해야 한다.\n클라이언트가 Enum 값을 요청으로 전달하고, 서버가 이를 파싱해 처리하는 구조에서 서버는 Enum 값의 의미를 정확히 이해하고 처리해야 하므로, 정의되지 않은 값을 받을 경우 즉시 에러를 반환하는 것이 타당합니다. \n예를 들어 \"UNKNOWN\"으로 처리해 흐름을 이어가면, 의도하지 않은 상태로 비즈니스 로직이 흘러갈 수 있고, 데이터 무결성이 훼손될 우려가 있습니다.\n따라서 이 경우에는 Enum 값을 엄격하게 검증하고, 알 수 없는 값은 400 Bad Request 등의 클라이언트 오류로 응답하는 것이 바람직합니다.\n\n2. 서버(제공자) → 클라이언트(소비자) : 처리는 소비자의 선택에 맡긴다\n반대로 서버가 Enum 값을 응답으로 보내고, 클라이언트가 이를 파싱하는 구조에서는 상황이 달라집니다. 서버가 Enum을 확장하여 새로운 값을 보내더라도, 클라이언트는 그 값을 아직 모를 수 있어요. 이때는 클라이언트 쪽에서 어떻게 대응할지를 선택할 수 있어야 합니다. \n예를 들어,\n알 수 없는 값이면 경고를 띄우고 무시한다\nfallback 동작으로 \"UNKNOWN\" 또는 \"기타\"로 처리한다\n오류를 발생시켜 사용자에게 명시적으로 알린다\n이처럼 소비자가 상황에 맞게 처리 전략을 선택할 수 있도록 열려 있는 구조가 필요합니다.\nKafka 소비자나 이벤트 핸들러 등 외부로부터 Enum을 수신하는 구조에서도 마찬가지입니다.  \n\n이렇게, 각 Use Case 별 전략 수립 과정을 거쳐서 저희는 Enum deserialize 오류로부터 자유로워질 수 있는 아래 세 가지 해결책을 도출했습니다.\n\nEnum을 선택적으로 deserialize하기 - EnumString\nEnumString 전파하기 - ArchUnit\nEnum 배포 의존성 끊기 - Meta Expose\n이번 글에서는 이 세 가지 해결책을 통해 어떻게 Enum deserialize 오류를 극복했는지 자세히 살펴보겠습니다.\n1. Enum을 선택적으로 deserialize하기 - EnumString\n알지 못하는 Enum 값이 들어왔을 때 이를 역직렬화(deserialize)하는 방안을 고민하며, 처음에는 다음과 같은 방법들을 떠올렸어요.\n\n@JsonEnumDefaultValue 혹은 @JsonCreator 설정을 추가해서 입력과 일치하는 Enum이 없으면 기본값을 내려준다.\n@JsonCreator와 Property 를 사용해서 기본값을 반환할 Enum을 선택할 수 있게 한다.\n하지만 이러한 해결법들은 기본값을 내려주더라도 도메인 로직상 여전히 예기치 않은 버그가 발생할 수 있으며, 개발자가 의도한대로 동작을 완전히 제어하기 어렵다는 한계가 있었습니다.\n따라서 저희는 Enum 타입이 지닌 장점을 유지하면서도, 예상치 못한 값이 들어왔을 때 개발자가 직접 원하는 동작을 정의할 수 있는 유연한 접근법을 도입하기로 결정했어요.\n하지만, 단순히 String으로 처리하는 것으로는 이 같은 유연성을 만족시키기 어렵고 사용성에 제한을 두기도 어려웠기 때문에, 아래와 같은 사용성을 제공하는 전용 라이브러리를 제작하게 되었습니다.\n\n\n\nEnumString의 사용 예시를 코드로 보면 아래와 같은데요. 만약, EnumString이 아래와 같이 되어 있다고 가정하면,\nabstract class EnumString<E : Enum<E>, T : EnumString<E, T>>(\n    @get:JsonValue\n    override val value: String,\n) : DelegatedValue<String>(value), Comparable<EnumString<E, T>> {\n\n    \n    \n    open fun toEnumOrElse(defaultValueSupplier: () -> E): E = toEnumOrNull() ?: defaultValueSupplier()\n    \n    open fun toEnumOrThrow(exceptionSupplier: () -> RuntimeException = { IllegalStateException(\"\\\"$value\\\" 에 해당하는 ${EnumName}을 찾을 수 없습니다. dependency version을 체크해주세요.\") }): E = toEnumOrNull()\n        ?: throw exceptionSupplier()\n        \n    open fun toEnumOrNull(): E? = EnumFinder.findByNameOrNull(value)\n    \n    companion object {\n        val CONSTRUCTOR_CACHE = ConcurrentHashMap<KClass<out EnumString<*, *>>, KCallable<*>>()\n        inline fun <E : Enum<E>, reified T : EnumString<E, T>> E.toEnumString(): T {\n            val constructor = CONSTRUCTOR_CACHE.computeIfAbsent(T::class) {\n                ...\n            }\n            return constructor.call(this.name) as T\n        }\n    }\n}\n\nEnumString을 적용하려는 Enum은 아래처럼 간단히 EnumString 인터페이스만 구현하면 됩니다.\nEnum class Animal {\n\n\tDOG,\n\tCAT,\n\tRABBIT,\n\t;\t\n}\n\nclass AnimalString private constructor(\n\toverride val value: String\n) : EnumString<Animal>(...)\n\n이렇게 정의된 다음에는, DTO에서 Enum을 EnumString 타입으로 선언하고 나서 필요에 따라 선택적으로 역직렬화 결과를 처리할 수 있게 되는데요. \ndata class Foo(\n val animal: AnimalString,\n)\n\n// 아래와 같이 선택적으로 Enum을 deserialize 할 수 있습니다. \nfun helloWorld() {\n\tfoo.animal.toEnumOrElse { throw IllegalArgumentException(\"역직렬화에 실패했어요.\") }\n\t\n\tfoo.animal.toEnumOrElse { return@toEnumOrElse Animal.DOG }\n\t\n\t// 혹은 필요에 따라 아래와 같은 편의 제공 메소드를 활용할 수도 있습니다.\n\tfoo.animal.toEnumOrThrow()\n\tfoo.animal.toEnumOrNull()\n}\n사용자는 상황에 따라 세 가지 메소드를 유연하게 선택해 사용할 수 있습니다.\ntoEnumOrNull / toEnumOrElse: 무시해도 괜찮은 경우에는 null 또는 지정된 기본값을 반환하고,\ntoEnumOrThrow: 무시하면 안 되고 반드시 함께 버전업 되어야 하는 경우에는 예외를 발생시킵니다.\n이처럼 EnumString을 도입하면서 불명확한 Enum 입력에 대해 “예외 발생” 또는 “기본값 할당” 등 원하는 동작을 직접 정의할 수 있게 되었고, 결과적으로 Deserialize 과정에서 발생할 수 있는 오류를 안전하게 제어할 수 있게 되었습니다.\n\n2. EnumString 전파하기 - ArchUnit\n아무리 좋은 해결책 이더라도, 전파되지 않으면 무용지물이죠. 특히, 새로 합류한 구성원이 과거 문제를 잘 모른 채 기존처럼 Enum을 사용할 가능성도 고려해야 했어요. 그래서, 저희는 제공자 → 소비자 패턴에서 EnumString 사용을 시스템적으로 강제할 수 있는 방법을 찾기 시작했고 그 결과 ArchUnit을 찾게 되었습니다.\n\nArchUnit은, 패키지와 클래스간의 의존성을 테스트 해주는 오픈소스 라이브러리 도구로 저희만의 커스텀 룰을 만들어서 제공하면 제공자 → 소비자 패턴에서 EnumString을 막을 수 있었습니다.\n그래서 저희는 공용 레포에 대해 ArchUnit으로 규칙을 만들고, 컨슈머 코드에서 Enum 사용을 감지해 빌드 시점에 실패하도록 설정했습니다. 덕분에 새로운 구성원도 EnumString을 자연스럽게 사용하게 만들 수 있었습니다.\n\n\n\n\n3. Enum 배포의존성 끊기 - Meta Expose\n위에서 소개한 EnumString 도입 이후, 서비스는 이전보다 훨씬 안정적으로 운영될 수 있게 되었습니다. 특히 버전과 무관하게 무시 가능한 Enum 값들에 대해서는 문제가 거의 발생하지 않게 되었죠.\n하지만, 모든 Enum이 그렇게 유연할 수는 없었습니다. 어떤 Enum은 반드시 서비스 간에 함께 버전업이 되어야만 의미가 유지되며, 그렇지 않으면 여전히 오류가 발생할 수 있습니다.\n예를 들어, 소비자(Consumer)라고 하더라도 \"정의되지 않은 Enum 값을 받으면 도메인 로직이 깨지므로 오류를 발생시켜야 하는\" 경우도 있었고, 제공자(Publisher) 입장에서도 Enum이 갱신되지 않은 소비자에게 메시지를 전송하면 실패가 발생하는 구조는 여전히 유효했습니다.\n이를 해결하기 위해 저희는 Enum의 버전 동기화 상태를 관찰(Observe)하고 감지할 수 있는 시스템, Meta-Expose를 설계하고 도입하게 되었습니다.\n\nMeta Expose의 핵심 구성과 동작 방식\nMeta Expose의 구조를 그려보면 아래와 같은데요. 중앙의 Meta-Expose-Hub에서 Enum을 사용하는 모든 서버를 watch하고 있다가 버전이 올라가지 않은 서버를 자동으로 감지해 어드민과 모니터링 도구로 알림을 주게 됩니다.\n\n자동 노출된 Enum API\nMeta-Expose 라이브러리를 사용하는 서비스는 자신의 Enum 정의값을 자동으로 외부 API로 노출합니다.\n이 API는 서비스 코드에 추가 작업 없이 자동 구성(auto config)됩니다.\n중앙 Hub에서의 정합성 검증\nMeta-Expose-Hub는 ServiceDiscovery를 통해 Enum API를 가진 서비스를 식별하고, 주기적으로 호출하여 Enum 정의값을 수집합니다.\n이를 기준 Enum과 비교해 정의의 일관성을 검증합니다.\n동적으로 서비스 식별\nServiceDiscovery는 Meta-Expose 의존성을 가진 서비스만을 식별해 관리합니다.\n신규 서비스도 자동으로 포함되어, 누락 없이 전체 시스템을 커버할 수 있습니다.\nGrafana를 통한 모니터링\n검증 결과는 Prometheus에 지표(metric)로 수집되고, Grafana 대시보드를 통해 실시간으로 시각화됩니다.\n특정 Enum 정의가 불일치하거나 누락된 서비스가 있는 경우 대시보드에서 바로 확인할 수 있으며, 알림 연동도 가능합니다.\n\n\n이 시스템을 통해 저희는 다음과 같은 효과를 얻을 수 있게 되었고, 마침내 Enum deserialize 에러에서 자유로워질 수 있었습니다.\nEnum 변경 시, 모든 관련 서비스가 실제로 버전업 되었는지를 눈으로 확인 가능합니다.\n신규 Enum 추가 이후 배포 누락 서비스가 있다면 빠르게 감지하여 운영환경에서 발생할 수 있는 리스크를 사전에 제거할 수 있었습니다.\n신규 구성원이 Enum 정의 방식에 익숙하지 않더라도 자동 검증과 시각화 덕분에 실수를 방지할 수 있었습니다.\n마치며\n실수를 완전히 막을 순 없지만, 이를 문제로 확산되지 않도록 시스템 차원에서 방어하는 것은 개발자의 몫입니다. 그래서 저희는 예측 가능한 구조와 자동화된 감시 체계를 통해 오류를 사전에 차단하고자 했어요. 이러한 노력 덕분에, 수백 번의 배포와 확장되는 MSA 환경 속에서도 단 한 번의 Enum 이슈 없이 안정적인 서비스를 운영하는 성과를 얻을 수 있었습니다.\n토스뱅크는 고객의 자산을 직접 다루는 은행 서비스 특성상, 1년에 한 번 발생할 수 있는 작은 버그라도 결코 가볍게 넘기지 않습니다. 성능만큼 안정성이 중요한 은행 도메인에서, 구조적으로 실수를 방지하고 예측 가능한 시스템을 함께 설계해 나가고 싶다면, 토스뱅크에 합류해 주세요.\n\n",
        "isDisplayingFeedback": false,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 19339
      },
      {
        "id": 37231,
        "updatedTime": "2025-06-28T21:41:33+09:00",
        "createdTime": "2025-06-07T07:25:26+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "로고 하나로 툴을 설명할 수 있다면\n",
        "subtitle": "토스의 새로운 디자인 툴, 그 로고는 어떤 모습이어야 할까요?\n툴의 정체성을 담아낸 로고 제작기를 공유합니다.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/assets/toss-tech/250617-deus-logo.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": "로고 하나로 툴을 설명할 수 있다면"
        },
        "key": "deus",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-18T10:00:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37231,
          "title": null,
          "description": "토스의 새로운 디자인 툴, 그 로고는 어떤 모습이어야 할까요?\n툴의 정체성을 담아낸 로고 제작기를 공유합니다.",
          "urlSlug": "deus",
          "primaryKeyword": {
            "id": 52891,
            "content": "로고",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37428,
              "content": "브랜드 디자이너",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 50189,
              "content": "데우스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52891,
              "content": "로고",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52893,
              "content": "BX",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 41790,
              "content": "Graphic Design",
              "wordType": "TAG"
            },
            {
              "id": 41810,
              "content": "Brand Design",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "로고 하나로 툴을 설명할 수 있다면",
          "description": "토스의 새로운 디자인 툴, 그 로고는 어떤 모습이어야 할까요?\n툴의 정체성을 담아낸 로고 제작기를 공유합니다.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/assets/toss-tech/250617-deus-logo.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2553,
          "name": "김영하",
          "slug": "yeongha-kim",
          "shortDescription": "토스코어 Graphic Designer",
          "description": "-",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": "https://www.instagram.com/yeonghaaa?igsh=MTd2NWE4bW45emtobg%3D%3D&utm_source=qr",
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "\n토스만의 디자인 툴, 데우스 \n토스에서는 ‘데우스(Deus)’라는 자체 디자인 툴을 쓰고 있어요. 토스의 일하는 방식에 맞춰 설계된 디자인 툴로, 디자이너와 개발자 모두가 기능적 제약 없이 효율적으로 협업할 수 있도록 만들어졌어요. 이번 글에서는 전사에서 함께 사용하는 디자인 툴의 로고를 제작하면서 겪었던 고민과 과정을",
        "fullDescription": "\n토스만의 디자인 툴, 데우스 \n토스에서는 ‘데우스(Deus)’라는 자체 디자인 툴을 쓰고 있어요. 토스의 일하는 방식에 맞춰 설계된 디자인 툴로, 디자이너와 개발자 모두가 기능적 제약 없이 효율적으로 협업할 수 있도록 만들어졌어요. 이번 글에서는 전사에서 함께 사용하는 디자인 툴의 로고를 제작하면서 겪었던 고민과 과정을 공유하려고 해요.\n\n\n데우스의 어원은 Deus Ex Machina. 그리스 연극에서 유래된 표현이에요. ‘기계 장치에서 내려오는 신’이라는 뜻으로, 예기치 않게 문제를 해결해주는 초월적인 존재를 의미하죠. 데우스 역시 필요한 순간 정확한 기능을 제공하는 도구가 되길 바라는 마음으로 붙여진 이름이에요.\n\n\n하지만 기능의 중요도에 비해 뚜렷한 시각적 아이덴티티는 부족한 상태였어요. 별도의 로고 없이 토스 로고나 이모지를 상황에 따라 혼용해 사용해왔거든요. 전사에서 툴의 역할이 확장될수록 독립적인 브랜드 아이덴티티가 필요하다는 요구가 커졌어요. 외부에도 공개되는 툴이기에, 툴 자체의 정체성이 더 명확히 드러나야 한다고 생각했죠. 그렇게 로고를 제작하게 되었어요.\n\n첫 번째 시도\n처음에는 ‘데우스’라는 이름이 다소 낯설 수 있다고 생각해, 이름을 직관적으로 연상할 수 있는 심볼을 만드는 데 집중했어요. 그래서 ‘D’를 모티프로 한 시안부터 작업을 시작했어요.\n\n전사 툴인 만큼, 데우스 팀 뿐만 아니라 다양한 직군의 토스 팀원들에게 의견을 받았는데요. 브랜드 톤앤매너부터 조형적 디테일까지, 정말 다양한 피드백이 쏟아졌어요. \n\n“툴의 첫인상으로 이게 맞는지 잘 모르겠어요”\n“일반적인 앱 스타일이라 아쉬워요”\n“조형이 불안정해요”\n“두께가 줄어들면 어떨까요?”\n\n예상보다 훨씬 디테일한 의견들이 나왔죠. 어디서부터 수용해야 할지, 어떤 부분을 고쳐야 할지 갈피를 못잡겠더라고요. \n브랜드의 본질부터 정의하기\n그래서 단순히 '로고를 어떻게 만들까'를 고민하는 게 아니라, 데우스가 어떤 툴인지, 어떤 브랜드여야 하는지 스스로 먼저 정리해볼 필요가 있다고 생각했어요. 제가 먼저 데우스의 명확한 정체성을 정의해야, 그걸 기준으로 팀원들을 설득하고 피드백을 조율할 수 있을 거라 판단했죠.\n토스에서는 새로운 툴로 옮겨갈 때 종종 ‘이주한다’는 표현을 써요. 이 표현에서 힌트를 얻어, 데우스를 새로운 세계로 이동하는 경험처럼 그려보고 싶었어요. 툴을 바꾼다는 건 이전과는 완전히 다른 환경으로 넘어가는 전환의 경험이니까요.\n이런 스토리를 바탕으로, 데우스로의 전환을 미지의 행성으로 이주하는 장면에 빗대어 별빛, 우주적 심상 등을 모티브로 한 다양한 시안들을 실험해봤죠.\n\n이렇게 스토리를 먼저 정리하고 나니, 팀원들도 시안의 의도를 훨씬 쉽게 이해하고 피드백을 줄 수 있었어요. 저 역시 기준이 명확해지면서 디자인 방향을 잡는 과정이 훨씬 수월해졌고요.\n\n본질에 다시 집중하기\n하지만 여전히 고민이 남아있었어요.\n“이 스토리가 데우스를 정확히 설명해주고 있나?”\n조형적으로 흥미로운 시안들도 있었지만, 툴을 처음 접하는 사람이 로고만 보고 데우스의 정체성과 역할을 짐작할 수 있을까? 라는 질문이 계속 들었어요.\n이 고민 끝에 툴의 이름이자 정체성인 ‘Deus’라는 단어 자체의 스토리에 다시 집중해보기로 했어요.\n\n‘Deus Ex Machina’ ⎯  기계 장치에서 내려오는 신\n‘Deus’ ⎯  필요한 순간에 정확한 기능을 제공해주는 도구 \n\n데우스의 어원과 이름이 가진 의미를, ‘하늘에서 내려오는 빛’이라는 메타포로 풀어보고 싶었어요.\n\n\n먼저 빛의 속성과 브랜드 분위기를 정리하기 위해 무드보드를 구성하고, 빛줄기의 교차와 투시를 활용한 다양한 조형을 빠르게 실험했어요.\n\n\n이 시안이 팀원들에게 많은 공감을 얻었어요. 하늘에서 내려오는 빛의 심상이 데우스 본래의 의미와 자연스럽게 녹아든 덕분이 아닐까 생각해요.\n\n최종 시안 완성하기\n하늘에서 내려오는 빛이라는 큰 틀은 정했지만, 디테일한 조정 과정이 필요했어요. 심볼만 단독으로 봐서는 데우스의 정체성과 어울리는지 판단하기 어려웠고, 무엇보다 다양한 사용 환경에서도 문제없이 적용될 수 있어야 했거든요.\n그래서 워드마크와 함께 배치했을 때의 밸런스, 작은 크기로 줄였을 때의 시인성, 앱 아이콘이나 파비콘, 로딩 애니메이션 등 실사용 상황에서의 적용성을 기준으로 가장 적합한 룩을 찾아갔어요.\n\n최종 후보는 4개였는데요. 그 중에서도 1번을 최종안으로 선택했어요.\n워드마크와의 조화가 가장 안정적이었어요.\n조형이 너무 강조되지도, 워드마크에 묻히지도 않는 균형을 만들 수 있었어요.\n확장성과 활용성이 가장 뛰어났어요.\n파비콘, 앱 아이콘, 로딩 모션 등 다양한 크기와 형태에서도 선명하게 유지됐고, 형태가 깨지거나 왜곡되지 않았어요.\n조형적 간결함 속에서도 컨셉이 유지됐어요.\n하늘에서 내려오는 빛이라는 메타포가 직관적으로 전달됐어요.\n\n\n둥근 형태나 너무 얇은 조형들은 작은 크기에서는 시인성이 급격히 떨어졌고, 실제 제품 화면 위에 얹었을 때 브랜드 아이덴티티가 선명하게 드러나지 않는다는 한계가 있었어요.\n\n\n로고에 담긴 메시지를 더 입체적으로 전달하고 싶어서, 로고의 핵심 구조를 활용한 브랜드 컨셉 영상도 함께 제작했어요.\n\n\n다양한 직군의 토스 팀원들이 함께 애정을 갖고 만들어온 툴이라, 로고를 처음 공개하는 순간은 유독 긴장감이 컸어요.\n다행히 공유 직후, 팀원들이 \"가슴 뛰는 로고다\"라는 반응을 보내줬고, 그동안 여러 번 방향을 고민하고 조율했던 시간이 보람으로 돌아오는 순간이었어요.\n\n새로 만들어진 데우스 로고는 Simplicity Season 4를 통해 외부에도 처음 공개됐죠.\n덕분에 데우스를 처음 만나는 분들에게도, 토스만의 디자인 툴로서의 정체성을 자연스럽게 소개할 수 있었어요.\n\nSimplicity Season 4 ‘토스가 디자인 툴을 만든 이유’\n\n적용해보기 \n로고를 만드는 작업은 절대 한 번에 완성되지 않더라고요. 특히 데우스는 다양한 직군이 함께 쓰는 전사 툴이기 때문에, 디자인에 대한 이해관계도 다양했고, 각자 중요하게 생각하는 기준과 포인트도 조금씩 달랐어요.\n이 과정에서 얻은 배움은 이렇게 정리할 수 있을 것 같아요.\n1️⃣ 스스로 먼저 납득할 수 있는 스토리를 정의하기\n모두를 설득할 수 있는 로고를 만들기 위해서는 먼저 어떤 브랜드인지 명확히 정의하는 것이 중요했어요. 정체성을 먼저 세워둬야 수많은 피드백 속에서도 중심을 잃지 않고, 방향을 조율해나갈 수 있었어요.\n2️⃣ 다양한 실사용 환경까지 고려하기\n하나의 로고가 다양한 채널에서 어떻게 사용될지까지 시뮬레이션하며 설계했어요. 직관적인 조형, 작은 크기에서도 읽히는 시인성, 워드마크와의 조화, 파비콘·로딩 등 실제 상황까지 고려했어요.\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 13415
      },
      {
        "id": 37329,
        "updatedTime": "2025-06-28T21:34:12+09:00",
        "createdTime": "2025-06-10T12:43:59+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "UX 리서처와 리서치 오퍼레이터가 함께 만든 ‘리서치 자율주행 프로젝트’",
        "subtitle": "리서처 없이도 리서치 할 수 있는 프로세스를 만들고 있어요. GPT를 활용한 ‘리서치 자율주행 프로젝트’ 이야기를 들려드릴게요.",
        "bottomButtonConfig": {
          "ctaType": "ONLY_BUTTON",
          "imageUrl": "",
          "imageAlt": null,
          "title": "UX Research Operation Manager 채용 공고 보러가기",
          "description": null,
          "ctaName": "소희 & 수빈님과 함께 해보고 싶다면?",
          "landingUrl": "https://toss.im/career/job-detail?job_id=5942748003",
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5942748003&external=true&clearHistory=true&swipeRefresh=true",
          "landingExternal": "https://toss.im/career/job-detail?job_id=5942748003"
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts-content/0609autorize_research.jpg",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": "UX Research"
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts-content/0609autorize_research.jpg",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": "UX Research"
        },
        "key": "37329",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-16T11:10:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37329,
          "title": null,
          "description": "리서처 없이도 리서치 할 수 있는 프로세스를 만들고 있어요. GPT를 활용한 ‘리서치 자율주행 프로젝트’ 이야기를 들려드릴게요.",
          "urlSlug": "37329",
          "primaryKeyword": {
            "id": 37618,
            "content": "UX리서치",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37550,
              "content": "ux리서치",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37552,
              "content": "유저리서치",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37554,
              "content": "리서치 플랫폼 팀",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 43310,
              "content": "리서치옵스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 47293,
              "content": "리서치플랫폼",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 46069,
              "content": "UX리서치",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "UX 리서처와 리서치 오퍼레이터가 함께 만든 ‘리서치 자율주행 프로젝트’",
          "description": "리서처 없이도 리서치 할 수 있는 프로세스를 만들고 있어요. GPT를 활용한 ‘리서치 자율주행 프로젝트’ 이야기를 들려드릴게요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts-content/0609autorize_research.jpg",
          "imageType": "커버 이미지"
        },
        "relatedPostConfig": {
          "id": 6905,
          "relatedPosts": [
            {
              "id": 28336,
              "updatedTime": "2024-12-19T15:08:14+09:00",
              "createdTime": "2024-06-19T15:09:31+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                }
              ],
              "series": null,
              "title": "UX리서치 조직에서 리옵매란?",
              "subtitle": "토스의 효율적인 UX리서치 환경을 만드는 데 ‘UX 리서치 오퍼레이션 매니저’는 어떤 역할을 하고 있고 또 어떤 고민을 해결해 가고 있는지 소개해요.",
              "bottomButtonConfig": {
                "ctaType": "EMPHASIS_TEXT",
                "imageUrl": null,
                "imageAlt": null,
                "title": "토스에서 효율적인 UX리서치 시스템을 함께 만들고 싶다면?",
                "description": null,
                "ctaName": "채용공고 보러가기",
                "landingUrl": "https://toss.im/career/job-detail?job_id=5942748003&&utm_source=techblog&utm_medium=post&utm_campaign=article_button",
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5942748003%26utm_source%3Dtechblog%26utm_medium%3Dpost%26utm_campaign%3Darticle_button&external=true&clearHistory=true&swipeRefresh=true",
                "landingExternal": "https://toss.im/career/job-detail?job_id=5942748003&&utm_source=techblog&utm_medium=post&utm_campaign=article_button"
              },
              "coverConfig": {
                "coverType": "IMAGE",
                "imageUrl": "https://static.toss.im/assets/toss-tech/승희님-테크블로그-본문썸네일.png",
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/assets/toss-tech/승희님-테크블로그-본문썸네일.png",
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": null
              },
              "editor": {
                "id": 2290,
                "name": "도승희",
                "slug": "sunny-do",
                "shortDescription": "토스 Research Platform Team Leader",
                "description": "Research Platform Team Leader",
                "imageUrl": "https://static.toss.im/assets/toss-tech/sunny-do.jpg",
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 1,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "what-is-research-ops",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2024-07-01T11:17:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            },
            {
              "id": 23487,
              "updatedTime": "2024-12-19T14:52:22+09:00",
              "createdTime": "2023-11-16T13:45:44+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                }
              ],
              "series": null,
              "title": "효율적인 유저 리서치 환경을 만드는 리서치 플랫폼 팀, 들어보셨나요?",
              "subtitle": "토스팀에서 팀원들이 사용자를 더 쉽고, 빠르고, 편하게 만날 수 있도록 고군분투하고 있는 ‘리서치 플랫폼 팀’에 대해 소개해 보려고 해요. ",
              "bottomButtonConfig": {
                "ctaType": "EMPHASIS_TEXT",
                "imageUrl": null,
                "imageAlt": null,
                "title": "UX Research Operation Manager로 정은님과 일해보고 싶다면?",
                "description": null,
                "ctaName": "지원하기",
                "landingUrl": "https://toss.im/career/job-detail?job_id=5942748003&&utm_source=techblog&utm_medium=post&utm_campaign=article_button",
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5942748003%26utm_source%3Dtechblog%26utm_medium%3Dpost%26utm_campaign%3Darticle_button&external=true&clearHistory=true&swipeRefresh=true",
                "landingExternal": "https://toss.im/career/job-detail?job_id=5942748003&&utm_source=techblog&utm_medium=post&utm_campaign=article_button"
              },
              "coverConfig": {
                "coverType": "IMAGE",
                "imageUrl": "https://static.toss.im/illusts/tech-research-platform-og-image.png",
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/illusts/tech-research-platform-og-image.png",
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "editor": {
                "id": 1889,
                "name": "최정은",
                "slug": "jeongeun-choe",
                "shortDescription": "토스 UX Research Operation Manager",
                "description": "-",
                "imageUrl": "https://static.toss.im/assets/toss-tech/IMG_0932.jpg",
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 3,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "ux-research-platform",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2023-11-23T15:14:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            },
            {
              "id": 34897,
              "updatedTime": "2025-06-28T20:40:07+09:00",
              "createdTime": "2025-04-08T11:13:42+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                }
              ],
              "series": null,
              "title": "[현장으로 간 리서처] EP1. 커피값은 저희가 낼게요, 테스트 참여 해보실래요?",
              "subtitle": "다양한 변수가 존재하는 오프라인 결제 경험 - 최대한 변수를 줄이면서 사용성 평가를 하기위해 고군분투 했던 과정에 대해 들려드릴게요 ",
              "bottomButtonConfig": {
                "ctaType": "ONLY_BUTTON",
                "imageUrl": null,
                "imageAlt": null,
                "title": null,
                "description": null,
                "ctaName": "UX Researcher 서류 프리패스 전형 바로가기",
                "landingUrl": "https://toss.im/career/job-detail?job_id=5913667003",
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5913667003&external=true&clearHistory=true&swipeRefresh=true",
                "landingExternal": "https://toss.im/career/job-detail?job_id=5913667003"
              },
              "coverConfig": {
                "coverType": "IMAGE",
                "imageUrl": "https://static.toss.im/illusts/place-research-blog-cover.png",
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/illusts/place-research-blog-cover.png",
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "editor": {
                "id": 2493,
                "name": "강다희",
                "slug": "DaHee_Kang",
                "shortDescription": "토스플레이스 UX Researcher",
                "description": "-",
                "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 1,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "34897",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2025-06-05T17:00:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            }
          ],
          "title": "함께 읽어보면 좋을 콘텐츠"
        },
        "editor": {
          "id": 2561,
          "name": "서소희/이수빈",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "오늘은 리서치 플랫폼팀과 리서치팀이 협업해 만든 ‘리서치 자율주행 프로젝트’ 이야기를 들려드리려고 해요. 리서치 자율주행 프로젝트는, UX 리서처의 도움 없이도 팀원 혼자서 필요한 리서치를 찾아서 수행할 수 있는 환경을 만드는 프로젝트예요. 리서처 수빈님과 리서치 오퍼레이터 매니저 소희님을 만나서 두 팀이 어떻게 목표를 ",
        "fullDescription": "오늘은 리서치 플랫폼팀과 리서치팀이 협업해 만든 ‘리서치 자율주행 프로젝트’ 이야기를 들려드리려고 해요. 리서치 자율주행 프로젝트는, UX 리서처의 도움 없이도 팀원 혼자서 필요한 리서치를 찾아서 수행할 수 있는 환경을 만드는 프로젝트예요. 리서처 수빈님과 리서치 오퍼레이터 매니저 소희님을 만나서 두 팀이 어떻게 목표를 맞추고 협업하게 되었는지 이야기를 들어봤어요. \n\n리서치 자율주행 프로젝트의 시작\nUX Researcher 수빈 \n토스에서는 다양한 서비스가 운영되고 있어요. 서비스가 늘어날수록 팀원들의 리서치 수요도 함께 늘어났는데, 리서처 수는 한정적이었어요. 그래서 리서치팀에게는 리서처의 도움 없이 팀원 스스로 필요한 리서치를 수행할 수 있는 환경을 만드는 게 중요한 과제였어요. 그래서 ‘리서치 자율주행 프로젝트’를 시작하게 됐죠. 리서처와의 미팅 없이도, 내게 맞는 리서치가 어떤 것인지 파악할 수 있게 하고 싶었어요.\n초기에는 리서치팀 안에서만 이 문제를 풀려고 했어요. 첫 시도로 구글폼을 활용해 리서치 신청 프로세스를 정형화해보려 했죠. 팀원이 조사 목적과 배경을 폼에 입력하면, 별도 미팅 없이 리서치 방향을 잡을 수 있도록 하려 했어요.\n\n\n\n\n구글폼, 미팅을 줄일 수 있었을까?\nUX Researcher 수빈 \n1년 동안 구글폼을 활용해봤었는데, 결과적으로는 미팅이 줄지 않더라고요. 제품팀이 어떤 리서치를 하고 싶은지는 알 수 있었지만, 리서치가 필요한 맥락을 충분히 파악할 수 없었거든요. \n예를 들어, 구글폼에 나와있는 \"퍼널 이탈 이유를 알고 싶어요\" 같은 단편적인 정보만으로는 적합한 리서치 방법을 결정하기 어려웠어요. 퍼널의 맥락, 유용성 검증 여부 등 추가적인 정보가 필요했던거죠. 결국 리서처가 추가 미팅을 제안하는 경우가 많았고, 미팅 수는 줄지 않았어요. \n게다가 팀원 입장에서도 구글폼 작성이 번거로웠어요. 리서치 배경, 리쿠르팅 정보 등 입력 항목이 많다 보니 중도 포기하는 사례도 있었어요. 방식 자체를 개선해야 겠다고 생각했고, 이때부터 리서치 플랫폼팀과 협업하게 됐죠.\n\n\n\n리서치플랫폼팀이 합류한 이유\nUX Research Operations Manager 소희\n리서치플랫폼팀은 일반 팀원들이 더 쉽게 유저 리서치에 접근할 수 있는 환경을 만드는 것에 집중하고 있는 팀이에요. 자율주행 프로젝트의 목표는 그런 환경을 만드는 것 보다는, 리서처 리소스 절감이라고 생각해서 처음부터 협업하지는 않았었죠.\n하지만 점점 팀원들이 리서치에 관심을 가지면서, 리서처가 해야 할 일도 함께 늘어난다는 것을 알게 됐어요. 팀원 리서치 활성화와 리서처 리소스 효율화는 결국 같은 문제의 양면이었던 거죠. 그렇게 자연스럽게 목표가 정렬됐고, 리서치 자율주행 프로젝트에 참여했어요.\n\n리서치플랫폼팀이 가장 먼저 한 일 \nUX Research Operations Manager 소희\n먼저 문제를 다시 정의했어요. 구글폼 작성 이후에도 미팅을 요청하는 사례들을 살펴보니, 같은 요청이라도 리서처마다 대응이 다르다는 문제가 있었어요. 리서처마다 생각하는 리서처의 역할이 조금씩 다르다 보니, 안내 방식뿐 아니라 미팅에서 파악하는 정보에도 차이가 있었어요. \n리서치 자율주행이 제대로 작동하려면, 팀원들이 자주 하는 리서치 요청에 대해 리서처들의 공통적인 기준을 세우는 게 먼저라는 생각이 들었어요. 그래서 모두 모여 워크샵을 하는 걸 제안했죠.\n\nUX Researcher 수빈\n워크숍에서는 리서처들이 함께 모여, 같은 요청에 대해 어떤 질문을 던질지, 왜 그런 질문을 하는지 논의했어요. 리서치 미팅에서 필요한 정보와 리서처가 기대하는 답변 수준을 정리할 수 있었죠.\n\n\n\n\n리서치 미팅을 바꾼 결정적 깨달음\nUX Research Operations Manager 소희 \n워크샵을 진행하면서, 리서처들이 같은 질문을 반복하거나 비슷한 질문을 여러 번 하는 모습을 자주 볼 수 있었어요. 이유를 물어보니, 원하는 수준의 답변이 나오지 않아서 그렇다고 하더라고요. 그때 깨달았어요. 미팅에서 중요한 건 리서처가 어떤 질문을 하느냐가 아니라, 요청한 사람이 얼마나 충분한 답변을 하느냐라는 걸요. 처음에는 질문을 통일하는 것이 중요하다고 생각했는데, 사실 질문은 원하는 답변을 얻기 위한 수단일 뿐, 목적이 아니었던 거죠.\n\nUX Researcher 수빈 \n저는 몰입해서 계속 질문하고 있었는데, 소희님이 제 3자 입장에서 보니까 그 문제가 보였던 것 같아요.\n\n질문이 아니라 ‘답변’에 집중하다\nUX Research Operations Manager 소희 \n워크샵 이후 방향성을 바꿨어요. 그동안은 자율주행 로직을 짤 때, 리서처의 관점에서 팀원에게 어떤 질문을 던질까에 집중해왔다면, 이제는 모범 답변의 기준을 정하기로 한거죠. 그래서 리서처한테 이렇게 요청했어요. \n“내가 단 하나의 추가 질문도 하지 않을 만한 팀원의 답변을 적어주세요.” \n\nUX Researcher 수빈 \n툴도 바꾸기로 했어요. 구글폼은 고정된 질문만 던질 수 있어서 팀원 답변에 따라 유연하게 추가 질문을 할 수 없었어요. 그래서 GPT를 활용해보기로 했죠. 팀원이 정해진 항목을 선택하는 대신, 팀원의 답변을 읽고 맥락에 따라 추가 질문을 던질 수 있도록 말이에요.\n\nUX Research Operations Manager 소희\n리서치플랫폼팀은 이미 사용자처럼 응답하는 AI 챗봇을 개발한 경험이 있었거든요. 그래서 기준만 있다면, 리서처처럼 질문하는 리서처봇도 가능할 거라 생각했어요.\n\nGPT를 도입한 결과\nUX Researcher 수빈\n구글폼만 썼을 때보다 훨씬 나았어요. 구글폼만 쓸 때에는, 제품팀이 이전에 실험을 했었는지, 그럼 어떤 내용으로 실험을 했는지 등 자세한 맥락을 알 수 없었는데요. GPT로는 팀원들이 실험 여부, 결과까지 상세히 답변해줬고, 리서처가 별도 추가 미팅 없이 필요한 정보를 얻을 수 있었어요. 리서치팀은 이걸 초석으로 삼아 자율주행 프로젝트를 더 발전시킬 수 있게 됐죠.\n\n\n\n\n리플팀과 리서치팀이 함께 배운 것\n소희 : “바다를 한 번에 끓일 수 없다.” 늘 효율적으로 빠르게 문제를 해결하고 싶어 하는 제게, 친한 팀원이 해 준 피드백인데요. 수빈님과 함께 자율주행 프로젝트를 하며 다시 한번 이 말을 되새기게 됐어요. 프로젝트 합류 초반 저는 리서치 배경 파악과 방향성 안내를 한 번에 해결하고 싶었어요. 그러다 보니 늘 실패했죠. 우선 배경을 파악하는데 집중하기로 방향성을 다시 설정했고, 그중에서도 모든 리서치 문의를 커버하기 보다는 자주 들어오는 2-3케이스만 먼저 해결하기로 좁혔어요. 이렇게 문제를 좁히니 근본적인 문제와 방향이 보였던 거죠. 너무 큰 문제라서 답이 잘 안보일 때는, 핵심적인 사례 몇 가지만 자세하게 살펴보기를 추천드려요. \n\n\n수빈 : 명확한 문제 정의가 얼마나 중요한지 다시 한 번 깊이 느꼈어요. 그동안 리서치팀이 자율주행 프로젝트를 진행하며 ‘구글폼’, ‘팀원’에 집중하여 다양한 시도를 했음에도 미팅 리소스 문제가 완전히 해결되지 않았는데요. 소희님이 제 3자의 입장에서 상황, 이해관계자(리서처/팀원), 프로세스 등 전반을 파악해주셨고, 덕분에 제대로된 문제를 함께 정의할 수 있었어요. 문제가 명확히 정의되니, 이후 무엇을 해야할지는 자연스럽게 따라오더라고요. \n계속 시도해도 풀리지 않는 문제를 마주했다면, 잠시 멈춰서 뒤로 물러나 보는 것도 좋은 방법이에요. 주변 제 3자의 도움을 얻는 것도 좋아요. 그렇게 직전과는 다른 시각에서 문제를 다시 바라보다 보면 그동안 보지 못했던 상황이나 이해관계자, 문제가 드러날지도 몰라요. 이런 것들을 재정의해 나아가다 보면 진짜 문제에 도달할 가능성을 훨씬 더 높일 수 있는거죠.\n\n\n\n\n이렇게 두 팀은 토스 팀원 모두가 사용자와 더 가까이 만날 수 있는 환경을 함께 만들어가고 있어요. 각자의 전문성을 살려 일하는 것도 중요하지만, 협업을 통해 더 나은 프로세스를 함께 찾아가는 일 역시 큰 의미가있죠. 이 여정이 여러분께도 협업 방식이나 리서치 프로세스를 개선하는 데 작은 인사이트와 영감을 줄 수 있으면 좋겠어요. \n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 9413
      },
      {
        "id": 37487,
        "updatedTime": "2025-06-28T21:29:41+09:00",
        "createdTime": "2025-06-13T16:12:55+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "신용대출 찾기 서비스 제휴사 mock 서버 개발기",
        "subtitle": "대출 연동 테스트의 안정성과 효율성을 극대화하는 mock 서버 개발기를 공유합니다.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts-content/0613_techthumb.png",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts-content/0613_techthumb.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "credit-loan-partner-mock-server",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-13T17:22:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37487,
          "title": null,
          "description": "안녕하세요, 토스 신용대출 찾기 서비스 팀 Server Developer 류경린입니다.신용대출 찾기 서비스는 다양한 제휴사의 대출 상품을 연동하여, 고객이 보다 편리하게 대출 상품을 탐색하고 신청할 수 있도록 돕는 서비스입니다. 이번 글에서는 신규 제휴사 연동 이후 제휴사의 테스트 서버...",
          "urlSlug": "credit-loan-partner-mock-server",
          "primaryKeyword": {
            "id": 52859,
            "content": "모의서버",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [],
          "tags": [
            {
              "id": 41784,
              "content": "Server",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "신용대출 찾기 서비스 제휴사 mock 서버 개발기",
          "description": "신용대출 찾기 서비스는 다양한 제휴사의 대출 상품을 연동하여, 고객이 보다 편리하게 대출 상품을 탐색하고 신청할 수 있도록 돕는 서비스입니다. 이번 글에서는 신규 제휴사 연동 이후 제휴사의 테스트 서버가 유효한 응답을 주지 않거나, 특정 케이스를 테스트하기 어려운 상황을 어떻게 해결했는지...",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts-content/0613_techthumb.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2565,
          "name": "류경린",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, 토스 신용대출 찾기 서비스 팀 Server Developer 류경린입니다.\n신용대출 찾기 서비스는 다양한 제휴사의 대출 상품을 연동하여, 고객이 보다 편리하게 대출 상품을 탐색하고 신청할 수 있도록 돕는 서비스입니다. \n이번 글에서는 신규 제휴사 연동 이후 제휴사의 테스트 서버가 유효한 응답을 주지 않거나, ",
        "fullDescription": "안녕하세요, 토스 신용대출 찾기 서비스 팀 Server Developer 류경린입니다.\n신용대출 찾기 서비스는 다양한 제휴사의 대출 상품을 연동하여, 고객이 보다 편리하게 대출 상품을 탐색하고 신청할 수 있도록 돕는 서비스입니다. \n이번 글에서는 신규 제휴사 연동 이후 제휴사의 테스트 서버가 유효한 응답을 주지 않거나, 특정 케이스를 테스트하기 어려운 상황을 어떻게 해결했는지, 그리고 이를 위해 설계한 mock 서버를 소개하고자 해요.\n\n배경\n신규 제휴사 연동 이후 다음과 같은 문제들이 반복적으로 발생했어요.\n제휴사 개발 서버의 불안정한 응답 혹은 장애\n특정 퍼널 또는 고객 조건에 맞는 테스트 데이터 확보의 어려움\n테스트 과정에서 실제 제휴사 서버로부터 유효한 응답을 받기 어려운 상황\n이러한 문제들은 QA 및 신규 기능 개발 효율을 떨어뜨릴 뿐 아니라, 서비스 출시 일정에도 영향을 주었습니다. 이를 해결하기 위해 사용자, 제휴사, 퍼널 단위로 정밀하게 동작을 제어할 수 있는 mock 서버를 설계했어요.\n\n용어 정리\n본격적인 설명에 앞서, 대출 도메인과 관련된 주요 용어를 간략히 정리할게요.\n제휴사: 은행, 저축은행, 보험사 등 대출 상품을 제공하는 금융기관\n가심사 조회: 고객 정보를 활용해 대출 금리, 한도 등을 간단히 확인하는 행위\n대출 신청: 가심사 결과를 바탕으로 고객이 특정 상품에 대해 대출을 신청하는 행위\n대출 실행: 제휴사가 고객 정보를 활용해 대출을 실행하고 자금을 입금하는 행위\n\n요구사항\n기능적 / 비기능적 요구사항은 아래와 같았어요.\n기능적 요구사항\n\n유저, 제휴사, 퍼널 단위로 mock 사용 여부를 설정할 수 있어야 한다.\n동기/비동기 응답 방식을 모두 지원해야 한다.\nrelay 서버 역할을 수행해야 한다.\n유저가 쉽게 설정할 수 있어야 한다.\n\n비기능적 요구사항\n\n기존 비즈니스 로직은 변경하지 않는다.\nmock 서버에서 로직을 처리하기 위해 필요한 값은 커스텀 헤더로 전달한다.\n토스 내 타 서비스에서도 mock 서버를 손쉽게 연동할 수 있는 유연한 구조를 제공한다.\n\n설계 및 구현\nmock 서버는 다음과 같은 구성요소로 설계되었습니다.\n\n커스텀 헤더 주입\n설정\n예약(비동기 응답 지원)\nmock 데이터 생성\nRelay 서버 역할\n메신저봇 연동\n유연한 연동 구조 제공\n\n1. 커스텀 헤더 주입\n신용대출 찾기 서비스는 mock 동작 여부나 mock 데이터 생성 시 필요한 유저 정보를 클라이언트 요청의 헤더를 통해 주입받습니다. 이렇게 하면 비즈니스 로직에는 전혀 영향을 주지 않고, 테스트를 유연하게 제어할 수 있어요.\n테스트 환경에서만 동작하도록 @Profile(\"dev\") 설정을 통해 관리하며, 실제 통신 로직(RestTemplate, WebClient)에서 헤더 주입이 이뤄집니다.\n\nRestTemplate\nRestTemplate에는 인터셉터를 통해 요청마다 헤더를 추가할 수 있어요. 아래는 유저 ID와 원장 ID를 주입하는 예시입니다.\n해당 인터셉터를 RestTemplate에 등록하면, 모든 제휴사 요청에 자동으로 헤더가 포함됩니다.\nclass MockServerHeaderInjectionInterceptor : ClientHttpRequestInterceptor {\n    override fun intercept(\n        request: HttpRequest,\n        body: ByteArray,\n        execution: ClientHttpRequestExecution,\n    ): ClientHttpResponse {\n        val headers = request.headers\n        headers.add(MOCK_SERVER_HEADER_X_REQUEST_ID, \"ids\")\n        headers.add(MOCK_SERVER_HEADER_X_USER_ID, \"userId\")\n\n        return execution.execute(request, body)\n    }\n}\n\nWebClient\nWebClient에서는 ExchangeFilterFunction을 활용해 헤더를 주입해요. 아래는 동일한 목적의 필터 예시입니다.\nWebClient 설정 시 이 필터를 .filter(addMockServerHeaderFilter())와 같이 등록해주면 돼요.\nprivate fun addMockServerHeaderFilter(): ExchangeFilterFunction {\n    return ExchangeFilterFunction.ofRequestProcessor { clientRequest: ClientRequest ->\n        val injectedHeaders = ClientRequest.from(clientRequest)\n            .headers { headers: org.springframework.http.HttpHeaders ->\n                headers.add(MOCK_SERVER_HEADER_X_REQUEST_ID, \"ids\")\n                headers.add(MOCK_SERVER_HEADER_X_USER_ID, \"userId\")\n            }\n            .build()\n        Mono.just(injectedHeaders)\n    }\n}\n\n2. 설정\n모든 설정값은 DB 테이블에서 관리하여 유연성을 확보했어요.\npartner_metadata: 제휴사 메타데이터\n응답의 동기 / 비동기 방식 여부\n네트워크 설정\n암호화 여부 등\npartner_response: 퍼널별 mock 응답 데이터\nmock 데이터\n응답 결과 json layout 등\nuser_status: 유저별 mock 응답 사용 여부 및 응답 지연 설정\n콜백 을 N 초 후에 받을 것인지\n특정 퍼널 에 대해 어떤 mock 응답을 받을 것인지 등\n\n정의된 정보를 사용해 mock 응답 을 생성합니다.\nval key = Triple(companyId, funnelType, status)\n// 주어진 정보를 사용해 response 를 생성한다.\nval response = partnerResponseService.create(key, metadata, requests)\n\n3. 예약\nmock 서버에서는 실제 제휴사처럼 콜백 응답을 지연하여 전송하는 기능이 필요합니다. 이를 통해 비동기 응답을 테스트할 수 있도록 지원하며, 실제 서비스 환경을 더 현실감 있게 시뮬레이션할 수 있어요.\n예약은 다음과 같이 두 단계로 구성됩니다.\n\n1. 예약 등록\n가심사 조회나 대출 신청 API 호출 시점에, 예약 정보를 DB에 저장합니다.\n각 요청에 대해 몇 초 후 콜백을 호출할 지 결정되며, 이 설정은 유저 설정(user_status) 또는 제휴사 메타데이터(partner_metadata)에 정의된 값을 사용합니다.\n저장된 예약 정보는 schedule.executeTs 필드에 실행 시점을 기록합니다.\n\n2. 예약 실행\nmock 서버에서는 @Scheduled를 사용해 1분 단위로 주기적인 예약 조회 작업을 수행합니다.\n실행 시점(executeTs)이 지난 예약 건들을 조회한 후, ThreadPoolTaskScheduler를 사용해 콜백 API 요청을 실제로 전송합니다.\nprivate fun reserveInternal(schedule: ScheduleEntity, forceReserve: Boolean = false) {\n  handlers\n      .filter { it.canHandle(schedule) }\n      .forEach { handler ->\n          repository.save(schedule)\n          if (forceReserve) {\n              schedule.reserve()\n              repository.save(schedule)\n              scheduler.schedule(\n                  { submitTask(schedule, handler) },\n                  schedule.executeTs.atZone(ZoneId.systemDefault()).toInstant(),\n              )\n              return@forEach\n          }\n\n          lockExecutor.runOnce(\n              lockKey = \"$LOCK_KEY_PREFIX${schedule.id}\",\n              lockDuration = Duration.ofMinutes(1),\n          ) {\n              schedule.reserve()\n              repository.save(schedule)\n              scheduler.schedule(\n                  { submitTask(schedule, handler) },\n                  schedule.executeTs.atZone(ZoneId.systemDefault()).toInstant(),\n              )\n          }\n      }\n  }\n\n4. mock 데이터 생성\nmock 응답은 실제 제휴사 응답과 동일한 포맷으로 생성되어야 해요. 특히 상품명, 금리, 한도, 기간 등의 값은 토스 원장 데이터와 정합성 있게 주입되어야 하며, 이를 위해 다음과 같은 흐름으로 데이터를 생성합니다.\n\n1. 예약어 기반 mock 템플릿 정의\n각 제휴사별 응답 포맷에 따라 mock 템플릿을 사전에 정의합니다.\n이 템플릿은 \"{{amount}}\", \"{{productId}}\"와 같은 예약어를 포함해요.\n{\n  \"amount\": \"{{amount}}\",\n  \"period\": \"{{period}}\",\n  \"interestRate\": \"{{interestRate}}\",\n  \"productId\": \"{{productId}}\",\n  \"id\": \"{{id}}\"\n}\n\n\n\n2. 예약어 치환\n응답 JSON 내의 예약어를 실제 원장 데이터로 치환합니다.\n이 때 JsonNode 객체를 순회하며 깊은 중첩 구조까지 치환되도록 설계했어요.\nfun replace(\n    replaceParams: Map<String, String>,\n    node: JsonNode,\n): JsonNode {\n    when {\n        node.isObject -> {\n            val objectNode = node as ObjectNode\n            objectNode.fields().forEach { (key, value) ->\n                replaceParams.forEach { (keyword, replaceKeyword) ->\n                    if (value.asText() == keyword) {\n                        objectNode.put(key, replaceKeyword)\n                    }\n                }\n                replace(replaceParams, value)\n            }\n        }\n        node.isArray -> {\n            val arrayNode = node as ArrayNode\n            arrayNode.forEach { replace(replaceParams, it) }\n        }\n        node is Collection<*> -> {\n            node.filterIsInstance<JsonNode>()\n                .forEach { replace(replaceParams, it) }\n        }\n    }\n    return node\n}\n예를 들어, \"{{productId}}\"는 실제 상품명으로 \"{{amount}} 는 대출 한도로 치환됩니다.\n{\n  \"amount\": \"10000000\",\n  \"period\": \"12\",\n  \"interestRate\": \"2.4\",\n  \"productId\": \"OOO 자동차 담보 대출\",\n  \"id\": \"{{id}}\"\n}\n\n3. 상품명 → 원장 아이디 매핑 처리\n각 원장에 매핑된 고유한 productId를 기반으로 다시 한 번 ID 매핑을 수행합니다.\nloan_product_id_property_names 필드를 통해 각 제휴사마다 어떤 필드명이 상품명인지를 메타데이터로 관리하고 있기 때문에, 이를 기준으로 정확한 치환이 가능해요.\nprivate fun replace(\n    propertyNames: List<String>,\n    keyword: String,\n    replaceKeywordByPropertyNames: Map<String, String>,\n    node: JsonNode,\n) {\n    when {\n        node.isObject -> {\n            val objectNode = node as ObjectNode\n            val propertyName = propertyNames.firstNotNullOfOrNull { objectNode.get(it)?.asText() }\n\n            // objectNode.fields.value 가 ObjectNode 일 수 있기 때문에 반드시 objectNode 의 전체 field 를 순회한다.\n            objectNode.fields().forEach { (key, value) ->\n                if (value.asText() == keyword) {\n                    // keyword 를 templateValue 로 치환한다.\n                    val templateValue = replaceKeywordByPropertyNames[propertyName]!!\n                    objectNode.put(key, templateValue)\n                }\n                replace(propertyNames, keyword, replaceKeywordByPropertyNames, value)\n            }\n        }\n        node is Collection<*> -> {\n            node.filterIsInstance<JsonNode>()\n                .forEach { replace(propertyNames, keyword, replaceKeywordByPropertyNames, it) }\n        }\n        node.isArray -> {\n            val arrayNode = node as ArrayNode\n            arrayNode.forEach { replace(propertyNames, keyword, replaceKeywordByPropertyNames, it) }\n        }\n    }\n    return\n}\n예를 들어, “OOO 자동차 담보 대출” 상품명 에 맞는 거래번호 123456789가 치환됩니다.\n{\n  \"amount\": \"10000000\",\n  \"period\": \"12\",\n  \"interestRate\": \"2.4\",\n  \"productId\": \"OOO 자동차 담보 대출\",\n  \"id\": \"123456789\"\n}\n\n5. Relay 서버\nmock 서버 는 아래 2가지 상황에 대해 relay 서버 역할을 해야 해요.\n유저가 mock 응답 을 사용하지 않는 경우\n제휴사 에서 콜백 API 를 호출하는 경우\n\n유저가 mock 응답을 사용하지 않는 경우, 아래처럼 직접 제휴사 를 호출해 응답을 relay 합니다.\nif (userStatus?.getPartnerResponseStatus(type) != null) {\n  return getMockResponse()\n}\nval response = callPartner()\n\n제휴사에서 콜백 API 를 호출하는 경우\n제휴사에서 토스로 콜백 API 를 호출 하는 경우, api gateway를 통해 해당 요청이 인입돼요.\napi gateway의 routing rule 을 신용대출 찾기 서버 에서 mock 서버로 수정해, mock 서버에서 콜백 API를 받고 이를 다시 신용대출 찾기 서버로 호출합니다.\n\n6. 메신저봇 을 활용한 mock 설정\n팀내에서 사용하고 있는 메신저봇에 mock 서버 설정 및 설정을 확인할 수 있는 기능을 추가합니다.\n\n\n현재 제휴사, 퍼널 별 mock 설정 확인 버튼을 클릭해 현재 어떤 제휴사의 어떤 퍼널 에 대해 mock 데이터를 사용하고 있는지를 쉽게 알 수 있어요.\n\n\n\n제휴사, 퍼널 mock 설정 버튼을 클릭해 특정 제휴사 의 어떤 퍼널에 대해 mock 데이터를 사용할지 쉽게 설정할 수 있습니다.\n\n\n7. 유연한 연동 구조 제공\nmock 서버는 토스 내 다양한 제휴사 연동 서비스들이 손쉽게 통합 및 활용할 수 있도록 확장 가능하고 유연한 아키텍처를 제공해요. 제휴사 연동 서비스는 검색, 신청, 취소, 상태 조회의 크게 네 가지 기능을 수행합니다.\n\n모듈 구조\nmock 서버는 모듈화된 구조를 통해 서비스별로 손쉽게 연동할 수 있도록 설계되었어요. 각 서비스에서 mock 서버를 연동할 경우, 해당 서비스 전용 모듈만 추가하면 되는 구조입니다.\nmock-server-api : 각 서비스로부터 요청을 수신하는 API 모듈\nmock-server-base : 콜백, 치환 기능 등 모든 서비스에서 공통적으로 사용할 수 있는 기능 및 추상화된 Handler를 제공하는 기반 모듈\nmock-server-serviceA : 특정 서비스의 비즈니스 로직을 담은 모듈\nmock-server-serviceA-admin : 특정 서비스의 어드민 기능을 포함한 모듈\n\nMulti DataSource 지원\n서비스 모듈마다 별도의 데이터 소스(DataSource)를 사용해야 하는 경우가 있어, Spring 기반에서 Multi DataSource를 구성할 수 있는 세 가지 방식 중 아래와 같은 특징을 고려해 Class 기반 정의 방식을 채택했어.\nbase package 기준 정의\nannotation 기반 정의\nclass 기반 정의 ✅\n\n채택 사유:\n1. Repository 상속 구조에 불편함\nadmin 모듈은 어드민 특화 쿼리를 별도로 정의합니다.\n동시에 기존 서비스 모듈의 공통 Repository 기능도 재사용해야 합니다.\n따라서 admin 모듈의 repository 클래스는 서비스 모듈의 repository를 상속하는 구조입니다.\n2. 어노테이션 중복 선언 문제\n어노테이션 기반(@ServiceARepository) 으로 설정할 경우, 서비스 모듈의 repository 클래스와 어드민 모듈의 repository 클래스 양쪽에 동일한 어노테이션을 선언해야 하는 번거로움이 발생합니다.\n이는 유지보수 시 의도치 않은 설정 누락 혹은 중복을 유발할 수 있고, 설정 관리가 복잡해집니다.\n3. 패키지 구조의 자율성 확보\n모듈 단위로 동일한 패키지 구조를 사용할 수 있기 때문에 base package 스캔 방식 역시 적용이 어렵습니다.\n\n프로퍼티 설정 전략\n각 모듈에서 필요한 설정은 모듈 내부의 application-{service}.properties 파일을 통해 정의해요.\n기존에는 mock-server-base의 application.properties에 모든 설정을 통합할 수도 있었지만, 각 설정이 어떤 서비스에 영향을 미치는지를 명확히 구분하고 관리하기 어려운 점을 고려하여 모듈별로 분리하는 방식을 선택했어요.\n최종적으로는 base 모듈의 application.properties에서 spring-cloud-config 및 각 서비스의 설정 파일(application-{service}.properties)을 import하여, 모든 프로퍼티를 통합적으로 로딩할 수 있도록 구성합니다.\n\n마치며\n대외 기관과의 연동을 다루는 많은 회사들이 저희와 유사한 어려움을 겪고 있을 거라 생각해요.\n토스의 신용대출 찾기 서비스 팀은 mock 서버와 relay 기능을 결합한 테스트 환경을 누구나 쉽게 이용할 수 있게 구축함으로써, 테스트 효율성과 신뢰성을 모두 확보할 수 있었습니다.\n이 글이 유사한 문제를 고민하고 있는 개발자분들께 실질적인 도움이 되었으면 좋겠습니다. 감사합니다.\n",
        "isDisplayingFeedback": false,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 6256
      },
      {
        "id": 37325,
        "updatedTime": "2025-06-28T20:35:43+09:00",
        "createdTime": "2025-06-10T12:43:49+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "Simplicity 4",
            "id": 1881,
            "slug": "simiplicity4",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "아름답고 이해하기 쉬운 세션 자료 만들기 | Simplicity 4 제작기 #5",
        "subtitle": "Simplicity의 모든 세션 속 시각 자료들은 겉보기엔 평범하지만 세심한 설계를 통해 만들어졌어요. 누구나 정보를 쉽고 아름답게 전달하는 자료를 만들 수 있도록 고민한 방법을 들려드릴게요.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "37325",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-10T14:42:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37325,
          "title": null,
          "description": "Simplicity의 모든 세션 속 시각 자료들은 겉보기엔 평범하지만 세심한 설계를 통해 만들어졌어요. 누구나 정보를 쉽고 아름답게 전달하는 자료를 만들 수 있도록 고민한 방법을 들려드릴게요.",
          "urlSlug": "37325",
          "primaryKeyword": null,
          "relatedKeywords": [],
          "tags": []
        },
        "openGraph": {
          "title": "아름답고 이해하기 쉬운 세션 자료 만들기 | Simplicity 4 제작기 #5",
          "description": "Simplicity의 모든 세션 속 시각 자료들은 겉보기엔 평범하지만 세심한 설계를 통해 만들어졌어요. 누구나 정보를 쉽고 아름답게 전달하는 자료를 만들 수 있도록 고민한 방법을 들려드릴게요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2563,
          "name": "윤가빈",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "Simplicity 4 세션, 잘 즐기셨나요?\n이번 글에서는 Simplicity 4 세션 속 시각 자료 제작기를 이야기해보려 해요. 처음에는 단순히 관련 화면을 캡처하거나 녹화해 보여주면 충분할 거라고 생각했어요. 하지만 막상 작업에 들어가 보니, 시청 흐름과 정보 전달까지 고려해야 할 게 정말 많더라고요.\nSimplic",
        "fullDescription": "Simplicity 4 세션, 잘 즐기셨나요?\n이번 글에서는 Simplicity 4 세션 속 시각 자료 제작기를 이야기해보려 해요. 처음에는 단순히 관련 화면을 캡처하거나 녹화해 보여주면 충분할 거라고 생각했어요. 하지만 막상 작업에 들어가 보니, 시청 흐름과 정보 전달까지 고려해야 할 게 정말 많더라고요.\nSimplicity 4는 짧고 몰입도 높은 숏폼 형식의 세션으로 구성되었어요. 길이가 짧은 만큼, 짧은 문장에 많은 정보를 담아야 했고, 연사의 말만으로는 충분히 설명되지 않는 경우도 많았죠. 그래서 세션 자료는 단순히 재미나, 심미성을 위한 장치가 아니라, 텍스트에 담기지 않은 맥락까지 설명해주는 ‘시각적 해설자’ 역할을 해야 했어요. 단순히 텍스트를 보조하는 것이 아니라, 동등한 수준으로 메시지를 전하는 시각적 콘텐츠가 필요했던 거죠.\n\n\n좋은 세션 자료의 두 가지 조건\n1. 숏폼 콘텐츠에 어울리는 시각적 흐름 만들기\n우리가 숏폼 콘텐츠를 볼 때 자막보다 이미지나 시각적 흐름에 먼저 반응하잖아요. 음성만 듣고 자막은 스킵하는 경우도 많고요. Simplicity 4의 세션 자료도 마찬가지였어요.\n자료는 텍스트보다 먼저 사용자의 시선을 사로잡고, 어떤 요소가 중요하고 어디에 먼저 주목해야 하는지 자연스럽게 안내해야 했죠. 여러 요소가 한 화면에 평면적으로 나열되면, 정보의 우선순위가 모호해져 시선이 흩어지고 텍스트와 이미지가 따로 노는 것처럼 느껴지기 쉽거든요.\n그래서 강조하고 싶은 부분엔 살짝 기울인 원근감을 주고, 덜 중요한 정보는 흐림(blur) 효과를 적용해 시선을 정리했어요. 이렇게 시각적 위계를 설계하면, 사용자는 자료를 따로 해석하지 않아도 중요한 정보를 자연스럽게 먼저 받아들이고, 빠르게 이해할 수 있는 구조를 경험할 수 있어요. 단순한 시각 효과지만, 집중도와 몰입도를 높이는 데 꽤 효과적이었답니다.\n\n\n2. 어떤 기기에서도 자연스럽게 읽히도록\n이번에는 PC와 모바일 환경 모두에서 콘텐츠를 편하게 볼 수 있도록 최적화 하는 게 중요했어요. 하나의 자료를 두 환경에서 최대한 공통으로 활용하는 방식으로 접근했는데, PC와 모바일은 화면 비율이 많이 달라서 고민이 많았죠. 그래서 하나의 자료가 양쪽 환경에서 모두 읽히도록 최적화하는 작업이 필요했어요.\nPC 화면은 넓고 모바일은 작다 보니, 동일한 세션 자료를 보여줄 때 특히 모바일에서는 많은 부분이 잘리더라고요. 상단에는 제목이나 공유 버튼 같은 요소들이 있어 그 아래에 위치한 중요한 정보가 가려질 수 있었죠. \n그래서 어떤 기기에서 보더라도 핵심 정보가 화면 중앙에 잘 보이도록 모아서 배치했어요. PC 화면을 그대로 보여주는 방식은 작은 모바일 화면에선 가독성이 떨어질 수 있기 때문에, 작은 모바일 화면에서도 잘 보이도록 웹사이트 창처럼 보이게 디자인하기도 했어요. \n\n\n누구나 제작할 수 있는 환경 만들기\nSimplicity는 한 번 하고 끝나는 이벤트가 아니라 시즌마다 반복되는 컨퍼런스예요. 그만큼 제작 효율성과 지속가능성을 함께 고려해야 했어요.이번 시즌부터는 새 사이트를 만드는 대신, 하나의 플랫폼에 콘텐츠를 업데이트하는 방식으로 구조를 전환했고, 이에 따라 자료도 재사용 할 수 있도록 템플릿을 만드는 게 필요했죠.\n토스에서 그래픽이나 브랜딩을 섬세하게 다루는 직군이 아니라면 포토샵이나 일러스트레이터 같은 툴은 잘 사용하지 않는데요. 정적인 이미지는 포토샵 없이도 쉽게 제작할 수 있어야 한다고 생각했어요. 비디자인 직군도 자주 사용하는 툴인 ‘피그마’를 활용해보기로 했죠. 피그마의 다양한 플러그인을 활용하면, 디자인 경험이 많지 않더라도 누구나 제작할 수 있는 환경이 만들어지더라고요. \n\n원근감을 줄 수 있는 플러그인\n특정 부분을 흐리게 해주는 블러 플러그인\n그림자를 넣어주는 플러그인\n그리고 이 제작법을 가이드로 정리해 내부에서 누구나 참고할 수 있도록 했어요. 지속 가능한 Simplicity 제작을 위한 기반을 마련한 셈이죠. 실제로 이번 Simplicity에서는 정적인 세션 자료를 모두 피그마로 제작했어요.\n\n\n앞으로의 세션 자료\nSimplicity 같은 온라인 컨퍼런스에서 세션 자료는 단순한 보조물이 아니라 콘텐츠의 일부예요. 세션을 자연스럽게 이해하도록 도와주는 역할을 하죠. 좋은 세션 자료는 사용자가 ‘자료를 보고 있다’는 인식 없이도 내용을 자연스럽게 받아들이게 만들어준다고 생각해요. \n그런 자료를 만들기 위해서는 치열한 고민이 필요하고, 그만큼 디자인의 역할도 중요해요. 이런 고민들이 앞으로의 Simplicity나 다른 온라인 컨퍼런스에서도 잘 이어져서, 정보를 쉽게 전달하는 아름다운 자료들이 계속 만들어지기를 바라요.\n",
        "isDisplayingFeedback": false,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 8360
      },
      {
        "id": 34897,
        "updatedTime": "2025-06-28T20:40:07+09:00",
        "createdTime": "2025-04-08T11:13:42+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "[현장으로 간 리서처] EP1. 커피값은 저희가 낼게요, 테스트 참여 해보실래요?",
        "subtitle": "다양한 변수가 존재하는 오프라인 결제 경험 - 최대한 변수를 줄이면서 사용성 평가를 하기위해 고군분투 했던 과정에 대해 들려드릴게요 ",
        "bottomButtonConfig": {
          "ctaType": "ONLY_BUTTON",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": "UX Researcher 서류 프리패스 전형 바로가기",
          "landingUrl": "https://toss.im/career/job-detail?job_id=5913667003",
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5913667003&external=true&clearHistory=true&swipeRefresh=true",
          "landingExternal": "https://toss.im/career/job-detail?job_id=5913667003"
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts/place-research-blog-cover.png",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts/place-research-blog-cover.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "34897",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-05T17:00:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 34897,
          "title": null,
          "description": "오프라인 제품은 어떻게 리서치 할까? 오프라인 리서치의 한계 극복기 [현장으로 간 리서처] 1탄",
          "urlSlug": "34897",
          "primaryKeyword": {
            "id": 50713,
            "content": "UX Research",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 50713,
              "content": "UX Research",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 50715,
              "content": "B2B리서치",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52629,
              "content": "오프라인",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 41734,
              "content": "UX Research",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "[현장으로 간 리서처] EP1. 커피값은 저희가 낼게요, 테스트 참여 해보실래요?",
          "description": "요즘 오프라인 매장에서 자주 보이는 \"이쁜\" 결제 단말기, 혹시 보신 적 있나요?토스플레이스에서 만든 단말기, 프론트예요. \n프론트는 사장님들이 매장을 더욱 효율적으로 운영할 수 있도록 다양한 기능을 제공해요.\n키오스크가 될수도 있고, 신메뉴 홍보도 할 수 있고, 토스 이벤트에 참여할 ...",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts/place-research-blog-cover.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2493,
          "name": "강다희",
          "slug": "DaHee_Kang",
          "shortDescription": "토스플레이스 UX Researcher",
          "description": "-",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "\n[현장으로 간 리서처] EP1. 커피값은 저희가 낼게요, 테스트 참여 해보실래요?\n토스플레이스의 결제 단말기, 프론트를 소개합니다\n요즘 오프라인 매장에서 자주 보이는 \"이쁜\" 결제 단말기, 혹시 보신 적 있나요?\n\n\n\n토스플레이스에서 만든 단말기, 프론트예요. \n프론트는 사장님들이 매장을 더욱 효율적으로 운영할 수 있도",
        "fullDescription": "\n[현장으로 간 리서처] EP1. 커피값은 저희가 낼게요, 테스트 참여 해보실래요?\n토스플레이스의 결제 단말기, 프론트를 소개합니다\n요즘 오프라인 매장에서 자주 보이는 \"이쁜\" 결제 단말기, 혹시 보신 적 있나요?\n\n\n\n토스플레이스에서 만든 단말기, 프론트예요. \n프론트는 사장님들이 매장을 더욱 효율적으로 운영할 수 있도록 다양한 기능을 제공해요.\n키오스크가 될수도 있고, 신메뉴 홍보도 할 수 있고, 토스 이벤트에 참여할 수도 있죠. 얼굴로 결제까지 할 수 있고요! \n\n할 수 있는 일이 정말 많지 않나요? 기능이 다양한 만큼, 리서치로 검증해야하는 부분도 많았는데요. 오늘은 그중 하나의 리서치 사례를 소개해드릴게요.\n\n\n\n카드사 할인 정보를 결제 중에 본다면 어떨까?\n\n매장에서 이런 광고를 보신 적 있으신가요? 특정 카드로 결제하면 할인을 받을 수 있다는 내용인데요.\n\n\n\n\n\n이런 정보를 결제하는 도중, 단말기 화면에서 자연스럽게 볼 수 있다면 어떨까요?\n결제 과정에서 할인 정보를 안내 받을 수 있다면, 더 매끄러운 결제 경험이 되지 않을까요?\n이 가설을 검증하기 위해 리서치를 시작했어요.\n실제 결제 단말기에서 카드 할인 정보를 이해할 수 있는지, 내 카드와 연결해 인지할 수 있는지를 확인하는 게 핵심이었죠.\n\n하지만 막상 리서치를 어떻게 설계할지 막막했어요. 오프라인 결제 상황을 어떻게 똑같이 구현해 테스트할 수 있을지 고민이 많았거든요. UT룸을 카페처럼 꾸며 상황을 최대한 구체적으로 연출해보는 것도 생각해봤지만 결국 신뢰도에 한계가 있을 것 같았어요.\n혼자 조용히 커피 마시며 결제할 때, 친구들과 수다 떨며 계산할 때, 직장 동료들과 점심시간에 급하게 결제할 때…고객의 주의력과 행동은 상황에 따라 크게 달라지는데요. UT룸 같이 인위적인 환경에서는 이런 맥락을 제대로 반영하기 어려우니까요.\n\n그래서 결심했죠. 진짜 오프라인 매장에서 테스트하자!\n\n\n\n진짜 매장으로 가다\n‘심플리시티’라는 카페에 찾아갔어요. 이곳은 토스플레이스가 직접 운영하는 공간으로, 만드는 다양한 오프라인 제품을 실험하기 위해 만들어진 매장이에요. 실제로 손님이 오가는 ‘진짜 매장’이기도 하죠. (참고로 커피 맛집으로도 소문났어요!) \n실제 고객이 자연스럽게 결제하는 상황에서 단말기 UX를 테스트하면, 인위적인 환경에서는 얻을 수 없는 생생한 반응을 관찰할 수 있다고 생각했어요.\n현장에서 손님을 리쿠르팅해 게릴라 테스트를 진행하기로 하고, 메뉴를 고르던 고객에게 조심스럽게 다가가 여쭤봤어요.\n\n커피값 내드릴테니, 잠깐만 테스트 해보실래요? \n\n\n눈오던 그날의 심플리시티 ❄️\n\n저희가 준비한 시안은 3개였어요.\n\n시안 1: 심플한 인터랙션 중심\n\n\n시안 2: 애니메이션 중심의 화려한 인터랙션\n\n\n시안 3: 온라인 이커머스와 유사한 퍼널 구조\n\n\n\n각 시안을 손님들에게 보여드리며, 할인 정보를 얼마나 잘 인지하는지, 자신의 카드와 연결해 실제 결제 행동까지 이어지는지를 중점적으로 관찰했어요.\n혼자 온 손님부터 친구들과 함께 온 그룹, 점심시간에 급히 결제하는 직장인까지… 다양한 상황에서 고객의 시선 흐름, 주의력, 정보 인지 난이도를 세심하게 살폈죠.\n테스트는 이틀에 걸쳐 진행했어요. 첫째 날에는 각 시안에 대한 고객 반응을 관찰하며 가설을 정리했고,\n둘째 날에는 이를 바탕으로 디자인을 수정해 다시 테스트했어요.\n\n\n가설이 검증되는 순간을 보다\n\n시안 1은 할인 정보가 반복적으로 노출되며 정보 인지도가 높았고, 시안 3은 익숙한 흐름이라 이해는 쉬웠지만, 직접 클릭해야 한다는 혼란을 주는 부분도 있었어요. \n시안 2는 내부 테스트에선 좋은 반응을 얻었지만, 실제 환경에서는 “너무 복잡하다”는 의견이 많았어요. 결국 둘째 날에는 시안 2를 제외했죠.  \n이 테스트를 통해 화려한 UI가 오히려 정보 전달을 방해할 수 있고,익숙한 구조는 기대에는 부합하지만 오해의 여지도 만든다는 점을 확인할 수 있었어요.\n\n\n오프라인 리서치에서 무엇보다도 짜릿했던 건, 대부분의 고객이 카드사 할인 정보를 이해하고 “이거 내 카드로도 되나?”를 떠올리며 실제 행동으로까지 이어졌다는 것이었어요. 우리가 세운 가설이 맞았다는 걸 눈앞에서 확인할 수 있었던 순간이었죠!\n\n\n\n오프라인 리서치는 오프라인에서 \n이번 리서치는 오프라인 제품은 역시 오프라인에서 테스트해봐야 그 맥락이 더 잘 보인다는 걸 실감한 경험이었어요. 실제 상황에서 사용자의 ‘찐’ 반응을 보며, 기존 온라인 리서치와는 또 다른 매력을 느낄 수 있었고요.\n온라인에서처럼 상황을 가정해보고 진행해볼게요라고 했다면 얻기 어려운 행태들을 관찰할 수 있었습니다. \n익숙한 방식도 물론 좋지만, 제품의 본질에 맞는 새로운 실험 방식을 시도해보는 건 그 이상으로 깊은 인사이트를 주기도 한다는 걸 배웠어요.\n혹시 지금 테스트 환경에 대해 고민하고 계시다면, 익숙한 방식보다는 ‘진짜 맥락’을 살릴 수 있는 새로운 방식을 한번쯤 고민해보시길 추천드려요.\n토스플레이스는 앞으로도 오프라인 결제 경험을 혁신한다는 비전 아래, 그에 맞는 해답을 찾아가는 리서치를 계속 이어갈 예정이에요. 다음엔 또 어떤 생생한 오프라인 프로젝트로 돌아올지, 기대해주세요\n\n\n이렇게나 흥미로운 오프라인 리서치,\n토스플레이스에서 함께 만들어가고 싶으신 분이라면 언제든 환영입니다!\n\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 10574
      },
      {
        "id": 37229,
        "updatedTime": "2025-06-28T21:28:47+09:00",
        "createdTime": "2025-06-07T07:25:16+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "토스 프론트엔드 챕터가 오픈소스를 통해 꿈꾸는 미래",
        "subtitle": "토스 프론트엔드 챕터의 오픈소스 위원회를 소개해요.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/photos/CM2_1805.JPG",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "toss-oss-committee",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-06-05T16:30:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37229,
          "title": null,
          "description": "이 질문은 토스 프론트엔드 챕터의 몇몇 개발자들이 아주 가볍게 던졌던 의문이었어요. 어떻게 보면 가볍게 넘길 수 있는 질문이었지만, 곱씹을수록 새로운 의문이 계속 생겨났습니다.정말 그럴 수밖에 없는 걸까? 우리는, 한국의 개발자들은, 그렇게 만들 수 없는 사람들일까? 실리콘밸리의 개발자...",
          "urlSlug": "toss-oss-committee",
          "primaryKeyword": {
            "id": 44617,
            "content": "오픈소스",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37498,
              "content": "프론트엔드",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52631,
              "content": "es-toolkit",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52633,
              "content": "오픈소스위원회",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": []
        },
        "openGraph": {
          "title": "토스 프론트엔드 챕터가 오픈소스를 통해 꿈꾸는 미래",
          "description": "이 질문은 토스 프론트엔드 챕터의 몇몇 개발자들이 아주 가볍게 던졌던 의문이었어요. 어떻게 보면 가볍게 넘길 수 있는 질문이었지만, 곱씹을수록 새로운 의문이 계속 생겨났습니다.정말 그럴 수밖에 없는 걸까? 우리는, 한국의 개발자들은, 그렇게 만들 수 없는 사람들일까? 실리콘밸리의 개발자...",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/photos/CM2_1805.JPG",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2134,
          "name": "문동욱",
          "slug": "evan-moon",
          "shortDescription": null,
          "description": "거북이처럼 사는 프론트엔드 개발자",
          "imageUrl": "https://static.toss.im/assets/toss-tech/profile.png",
          "url": "https://evan-moon.github.io/",
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "“왜 대한민국에서는 lodash, react와 같이 세계적인 라이브러리가 나오지 않는걸까요?”\n\n이 질문은 토스 프론트엔드 챕터의 몇몇 개발자들이 아주 가볍게 던졌던 의문이었어요. 어떻게 보면 가볍게 넘길 수 있는 질문이었지만, 곱씹을수록 새로운 의문이 계속 생겨났습니다.\n정말 그럴 수밖에 없는 걸까? 우리는, 한국의 개",
        "fullDescription": "“왜 대한민국에서는 lodash, react와 같이 세계적인 라이브러리가 나오지 않는걸까요?”\n\n이 질문은 토스 프론트엔드 챕터의 몇몇 개발자들이 아주 가볍게 던졌던 의문이었어요. 어떻게 보면 가볍게 넘길 수 있는 질문이었지만, 곱씹을수록 새로운 의문이 계속 생겨났습니다.\n정말 그럴 수밖에 없는 걸까? 우리는, 한국의 개발자들은, 그렇게 만들 수 없는 사람들일까? 실리콘밸리의 개발자와 우리가 정말 그렇게까지 다를까?\n우리는 정말 “기여자”가 아닌 “사용자”의 역할에만 머물러야 할까?\n결국 우리는 이 질문에 제대로 답해보기로 했습니다.\n\n물론 다른 뛰어난 개발자들도 해내지 못한 것을 우리가 할 수 있을까 하는 걱정도 들었지만, Execution Over Perfection이라는 코어밸류를 떠올리며, 정답보다 실행을, 완벽보다 작은 실험을 먼저 시작해보기로 했어요.\n그 첫 번째 실험이 바로 토스 프론트엔드 챕터의 오픈소스 위원회입니다.\n\n\n작은 실험을 가능하게 만든 구조\n우리가 만든 건 단지 라이브러리가 아니에요. 작은 시도들이 살아남을 수 있는 ‘판’을 만드는 실험이었습니다.\n\n마음을 움직인 건 숫자가 아니었어요\n처음 오픈소스 위원회라는 아이디어가 제안되었을 때는 챕터 동료들을 설득하고 참여시키기 위해 철저하게 비즈니스적 논리를 준비해갔던 기억이 납니다. 외부 개발자들이 기여하면 유지보수 리소스를 줄일 수 있고, 오픈된 코드가 신규 입사자의 온보딩 속도를 높여줄 수 있고, 오픈소스 자체가 우리 기술 브랜딩에 도움이 된다는 식으로요.\n그 논리 자체는 나쁘지 않았지만, 이야기를 조금 나누다보니 동료들의 마음을 진짜 움직인 건 그런 숫자가 아니었어요.\n“그냥… 대한민국에서도 세계적인 오픈소스가 등장하는 과정을 우리 손으로 한 번 만들어보고 싶어요.”\n“시장 전체에 선한 영향력을 줄 수 있다면, 그거면 충분하지 않을까요?”\n회의실 안에서 조용히 오간 이 말들이 생각보다 더 깊은 설렘을 불러일으켰고, 우리는 그 감정에 진심으로 반응한 채로 실험을 시작하게 되었어요.\n\n가능성을 만든 작은 성과들\n오픈소스 위원회가 꿈꾸는 그림은 단순합니다.\n“대한민국에서도 React, Lodash처럼 전 세계 개발자들이 함께 사용하는 오픈소스가 등장할 수 있을까?”라는 단순한 질문에 진지하게 답해보는 거예요.\n지금까지 오픈소스 위원회에서 개발한 라이브러리 중 가장 눈에 띄는 성과는 es-toolkit이에요. es-toolkit은 Microsoft, IBM 같은 글로벌 기업을 포함해 Storybook, CKEditor, Ink 등 유명한 오픈소스들 안에서도 실제로 사용되고 있고, 최근 기준 주간 다운로드 수는 137만 건에 달하고 있어요.\n물론 다른 라이브러리들도 다양한 개발자 분들의 관심 속에서 무럭무럭 자라나고 있는 중입니다.\n\n\n팀의 시간과 리소스는 언제나 한정돼 있고, 어떤 선택은 항상 더 효율적인 일처럼 보여요. 그래서 장기적인 실험이나 직접적인 수치로 환산되지 않는 오픈소스와 같은 시도는 자연스럽게 우선순위에서 밀려나기 쉽죠. 우리는 이 투자가 장기적으로 개발 생태계에 어떤 영향을 줄지 분명히 알고 있었고, 그 생태계가 건강해지는 것이 결국 토스팀에도 이익이라는 걸 믿었어요.\n그리고 이 믿음에 진심으로 공감한 동료들이 있었기 때문에 오픈소스 위원회는 지금도 자연스럽게 굴러가고 있어요.\n지난 10개월 동안 여러 가지 작은 성공들을 맛봤지만 우리는 아직 부족하다고 느껴요. 그래서 앞으로도 계속 더 좋은 실험과 도전을 이어가 보려고 해요.\n\n함께 고민하고, 함께 돕는 위원회\n오픈소스 위원회는 누구나 하고 싶은 만큼 기여할 수 있고, 2주에 한 번씩 미팅을 열어 각자의 고민을 공유하고 함께 토론하는 방식으로 운영되고 있어요. 어떤 설계가 좋을지, API를 어디까지 열지, 릴리즈를 어떤 기준으로 가져갈지 등은 서로의 의견을 참고해 자연스럽게 흘러가요. 때로는 홍보가 필요하면, 위원회 전체가 힘을 모아 도와주기도 해요.\n우리는 이 위원회를 통해 코드 품질만이 아니라, 철학을 함께 다듬고 가치를 공유하는 과정을 만들고 있어요. 이건 누군가 혼자서 하기 어려운 일이에요. 그렇기 때문에 우리는 혼자가 아닌 팀으로 실험하고 있어요.\n\n함께 만들어갈 실험\n토스팀은 빠른 가설 검증과 실험에 익숙한 팀이에요.\n그래서 이번에는 대한민국에서도 개발자가 자유롭게 나누고 기여할 수 있는 문화가 가능하다는 것을 증명하는 실험을 해보려고 합니다.\n이 실험, 여러분이라면 어떻게 이어가시겠어요?\n토스의 오픈소스 위원회는 그 답을 함께 찾을 동료를 기다리고 있어요.\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 3108
      },
      {
        "id": 36945,
        "updatedTime": "2025-06-28T19:34:39+09:00",
        "createdTime": "2025-05-28T18:49:21+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "Simplicity 4",
            "id": 1881,
            "slug": "simiplicity4",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "몰입의 시작, 썸네일 그래픽 | Simplicity 4 제작기 #4",
        "subtitle": "Simplicity4의 그래픽, 어떤 고민을 하며 만들었을까요? 14개의 세션을 하나로 잇기 위한 시각 메타포, 그리고 그 제작 방식을 공유할게요.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": "심플리시티"
        },
        "key": "36945",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-30T11:54:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36945,
          "title": null,
          "description": "Simplicity4의 썸네일 그래픽, 어떤 고민을 하며 만들었을까요? 14개의 세션을 하나로 잇기 위한 시각 메타포, 그리고 그 제작 방식을 공유할게요.",
          "urlSlug": "36945",
          "primaryKeyword": {
            "id": 37570,
            "content": "토스그래픽디자인",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37422,
              "content": "토스컨퍼런스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37570,
              "content": "토스그래픽디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51151,
              "content": "심플리시티",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52393,
              "content": "모션그래픽",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 37578,
              "content": "UX 디자인",
              "wordType": "TAG"
            },
            {
              "id": 52391,
              "content": "그래픽디자인",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "몰입과 조화의 그래픽 제작기 | Simplicity 4 제작기 #4",
          "description": "Simplicity4의 썸네일 그래픽, 어떤 고민을 하며 만들었을까요? 14개의 세션을 하나로 잇기 위한 시각 메타포, 그리고 그 제작 방식을 공유할게요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2555,
          "name": "김경태 / 김영하",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, Simplicity 4에서 그래픽 디자인을 맡은 Graphic Designer 김경태, 김영하입니다. \n 이번 심플리시티 시즌4의 그래픽 제작을 진행하면서 느낀 고민과 경험들을 제작기를 통해 공유하고자 해요.\n\n그래픽은 '몰입'의 시작점 \n\n여러분은 유튜브에서 영상을 볼 때 어떤 기준으로 선택하시나요? 아마 ",
        "fullDescription": "안녕하세요, Simplicity 4에서 그래픽 디자인을 맡은 Graphic Designer 김경태, 김영하입니다. \n 이번 심플리시티 시즌4의 그래픽 제작을 진행하면서 느낀 고민과 경험들을 제작기를 통해 공유하고자 해요.\n\n그래픽은 '몰입'의 시작점 \n\n여러분은 유튜브에서 영상을 볼 때 어떤 기준으로 선택하시나요? 아마 많은 분들이 썸네일을 보고 ‘볼지 말지’를 결정하실 거예요.\nSimplicity도 마찬가지였어요. 영상으로 진행되는 온라인 컨퍼런스인 만큼, 그래픽 썸네일은 세션의 첫인상이자 몰입의 출발점이라고 생각했어요.\n영상이 시작되기 전 가장 먼저 마주하게 되는 썸네일에서부터 몰입이 시작되는거죠. 그래서 그래픽 썸네일은 세션 내용만큼이나 중요한 요소였어요.\n\n\n\n\n\n\n하나의 키비주얼이 아닌, 14개의 메타포\n\n이번 시즌에는 ‘세션마다 전혀 다른 느낌의 썸네일을 만들자’는 방향으로 접근했어요. 기존 시즌에는 하나의 키비주얼을 바리에이션 했는데요. 통일성 있는 그래픽이라는 장점은 있었지만, 반대로 \"모든 세션이 비슷해 구분하기 어렵다\"는 피드백도 있었거든요. \n\n\n\n그래서 이번에는 각 세션마다 완전히 다른 시각 언어와 메타포를 사용했어요. 이때 두 가지를 특히 신경썼어요.\n\n세션 주제를 다양한 룩앤필을 통해 시각적으로 은유할 것\n그래픽만 봐도 어떤 세션일지 떠올릴 수 있는 심리적 컨텍스트를 줄 것\n\n\n단순히 아름다운 그래픽을 넘어서, 세션의 핵심 메시지를 시각적으로 풀어내고, 시청자가 다시 기억해낼 때도 내용과 함께 이미지가 함께 떠오를 수 있기를 바랐어요. 사람들은 텍스트보다 시각 정보를 더 빠르게 인지하고, 이미지와 언어가 함께 주어질 때 이해도도 높아지는 경향이 있거든요.  그래서 이번 시즌에는 세션 하나하나에 기억될 수 있는 대표 이미지를 만들어주고 싶었죠.\n\n\n\n\n\n\n너무 직설적이지는 않되, 주제와 자연스럽게 연결될 수 있는 시각 언어를 찾는 게 중요했어요. 그리고 그 메타포를 어떤 질감, 구조, 방식으로 표현할지까지 함께 고민하면서 내용과 분위기를 함께 담아낼 수 있을지 고민했어요. \n\n\n\n그 중 특히 기억에 남는 두 가지 사례를 소개할게요.\n\n\n[모두가 유저를 만나는 순간까지]\n\n이 세션은 점심시간을 활용해 사용자와 인터뷰할 수 있는 무물런치 프로그램(무엇이든 물어보세요) 제작기를 다루고 있어요. 그래서 '점심 식사'를 메타포로 접근해보았는데요. \n\n친근하고 여유로운 심상을 담기위해 손그림 스타일로 시도해보기도 하고\n\n\n\n보다 밀도감있는 일러스트 스타일로 시도해보았지만, ‘식사’나 ‘음식’이라는 메타포는 세션의 핵심을 충분히 전달하지 못했어요.\n\n\n\n음식과 식사가 아닌 ‘점심 시간’을 활용한 사용자 인터뷰라는 본질에 더 주목해보고 싶었죠. 그래서 ‘무물런치’ 일정이 실제 캘린더 상에 표기된 모습을 메타포로 설정하고 캘린더 ui를 활용해 시안을 제작했어요. 캘린더의 구조를 포크나 햄버거같은 모양으로 만들어보면서 점심 ‘식사’의 심상을 더해보기도 하면서 시안을 발전시켜 나갔어요.\n\n\n\n\n최종적으로 캘린더와 포크를 형상화한 시안으로 결정했고, 하나의 메타포 안에서 ‘식사’와 ‘대화'의 개념을 동시에 표현해낼 수 있었어요.\n\n\n\n\n\n[디자인 조직의 개발자들]\n\n이 세션은 디자인 조직 안에서 아름다운 경험을 구현하는 데 집중하는 인터랙션 개발자의 이야기를 다루고 있어요. 처음엔 인터랙션을 상징할 수 있는 기하학적인 형태나, 사람의 실루엣, 조직의 모습 등 은유적으로 접근해봤어요. 그런데 ‘개발자’라는 직군을 시각적으로 담아내기엔 아쉬움이 있더라고요.\n\n\n\n\n그래서 조금 다른 방향으로 접근하기로 했어요. 코드 에디터의 구조와 컬러를 시각적으로 풀어보기로 했죠. 개발자들이 다루는 코드의 컬러와 패턴을 닮아 보이도록 반복되고 분절되는 도형 구조로 만들어봤어요.\n\n\n\n\n테스트 시안들을 통해 개발코드를 그래픽 요소로 충분히 활용할 수 있겠다는 생각이 들었어요. 그래서 아예 실제 코드 화면을 그래픽 재료로 활용하기로 했어요. 여기에 Slitscan 기법으로, 코드를 반복시켜서 마치 빛으로 이루어진 커텐처럼 쭉 - 늘어난 형태를 만들었죠. \n\n\n\n\n세션의 내용처럼 아름다운 경험의 뒤에는 디자인을 언어로 구현하는 개발자들의 섬세한 손길이 있다라는 메세지를 전달하고자 했어요. 그래서 빛줄기가 개발코드로 바뀌어보이는 애니메이션을 연출로 의도를 강화하기도 했죠. 기술과 미감을 상징하는 포인트들이 동시에 드러나길 바랐던 작업이었고, 그 균형이 잘 표현된 것 같아 만족스러운 결과물 중 하나예요.\n\n\n\n\n이렇게 만들었어요: AI와 수작업의 협업 \n각 세션의 주제를 해석하고, 어떤 메타포로 표현할지를 탐색하는 과정에서 AI 도구를 적극적으로 활용했어요. GPT로는 각 세션 주제에 맞는 시각적 메타포를 브레인스토밍하거나, 어떤 은유적 소재들이 적절할지를 빠르게 아이디어로 정리하기도 하고 Midjourney나 Runway로는 스타일 테스트와 이미지/모션 시안을 폭넓게 실험했죠.\n\n\n\n같은 콘셉트를 10가지 스타일로 바로 돌려보며 그래픽 스타일을 비교해보기도 했어요.  Runway에서는 이미지 기반의 짧은 루프 애니메이션도 테스트 해보고요. 덕분에 “이런 질감이 실제 인터랙션 안에서 어떻게 느껴질까?”를 짧은 시간 안에 감각적으로 검증할 수 있었던 것 같아요.\n\n\n\n하나의 경험으로 설계하기\n이번 시즌에서 중요한 점 중 하나는, 전체 세션이 하나의 톤앤무드와 흐름으로 이어지는 경험을 만드는 것이었어요. 개별 그래픽의 퀄리티도 물론 중요했지만, 전체적인 조화도 신경써야 했죠. 그래서 ‘가장 멋진 시안’을 고르기보다는, 모든 세션이 함께 놓였을 때 자연스럽게 녹아드는 시안을 고르는 걸 더 우선으로 뒀어요.\n\n\n\n\n단독으로는 인상적인 시안도 다른 것들과 함께 놓였을 땐 톤이 너무 튀거나, 흐름을 끊는 느낌을 줄 때가 많았거든요. 그래서 14개의 키비주얼을 한 시트에 정리하고 메타포 표현 방식, 그리고 레이아웃, 색감 등을 비교해가며 시안을 수정하고 재조합하는 과정을 반복했어요.\n\n\n\n\n\n또한 홈페이지 진입 시 등장하는 인트로 애니메이션 역시 전체 흐름 속에서 UI 구조를 어떻게 자연스럽게 이어줄 수 있을지를 가장 우선에 두고 작업했어요. Simplicity의 홈은 시원하게 펼쳐진 카드 UI가 특징인데요. 인트로에서도 이 구조를 더 직접적으로 느낄 수 있도록 \n카드를 중심으로 전체 화면이 자연스럽게 확장되는 흐름을 최우선의 목표로 두고 테스트했어요.\n\n\n\n\n\n인트로 애니메이션의 최종안은 페이지 진입 시에 타이틀 모션과 함께 잔잔한 파동과 함께, 블러하면서 리퀴드한 질감으로 이어지도록 연출했어요. 이펙트의 형태가 사각형을 이루면서 카드의 엣지와 형태로 완성되며 UI 로의 자연스러운 흐름을 이어가고자 했어요.\n\n\n\n\n그리고 줌아웃되면서 카드를 매개로 시선이 자연스럽게 이어지고, 홈 화면으로 자연스럽게 확장하는 전개로 구성하는 방식으로 제작했어요.\n\n\n\n\n\n마무리하며\n\n\nSimplicity는 매 시즌 새로운 세션과 그래픽을 만들어야 하는 구조다보니, 모든 걸 매번 손으로 처음부터 만드는 방식만으로는 오래가기 어렵다는 걸 점점 더 실감하게 됐어요.\n이번 시즌에는 그런 한계를 조금이라도 줄여보고자, 머신러닝 팀 동료와 함께 ComfyUI를 커스텀해서 참고 이미지만으로 빠르게 스타일 테스트가 가능한 모델을 만들어서 실험해보기도 하고, 그 외에도 다양한 AI 도구들의 도움을 받았어요.\n덕분에 초반 탐색에서 시행착오를 줄일 수 있었고, 전체 스타일 방향도 훨씬 빠르게 정리할 수 있었는데요. 퀄리티는 유지하면서도,조금 더 지속 가능한 제작 방식으로 나아가는 출발점이 되었던 시즌이 되었던 것 같아요.\n다음 시즌엔 또 다른 방식으로, 지금보다 조금 더 새로운 방향으로 접근해보고 싶어요. 앞으로도 Simplicity의 그래픽을 기대해주세요!\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 11636
      },
      {
        "id": 37021,
        "updatedTime": "2025-06-28T19:34:19+09:00",
        "createdTime": "2025-05-30T00:48:13+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "Simplicity 4",
            "id": 1881,
            "slug": "simiplicity4",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "인터랙션으로 만드는 몰입 경험 | Simplicity 4 제작기 #3",
        "subtitle": "끝까지 보고 싶게 만드는 온라인 컨퍼런스는 어떻게 만들 수 있을까? Simplicity 인터랙션은 이 질문에서 출발했어요. 몰입을 설계한 인터랙션 제작기, 지금 들려드릴게요.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": "심플리시티"
        },
        "key": "interaction_simplicity",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-30T01:04:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 37021,
          "title": null,
          "description": "이번 심플리시티를 디자인하면서 고민한 것들을 인터랙션 디자이너의 시선에서 하나씩 나눠보려고 해요.",
          "urlSlug": "interaction_simplicity",
          "primaryKeyword": {
            "id": 51151,
            "content": "심플리시티",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37402,
              "content": "토스 디자인 컨퍼런스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37406,
              "content": "토스 디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37412,
              "content": "인터랙션 디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52385,
              "content": "토스 인터랙션",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": []
        },
        "openGraph": {
          "title": "인터랙션으로 만드는 몰입 경험 | Simplicity 4 제작기 #3",
          "description": "이번 심플리시티를 디자인하면서 고민한 것들을 인터랙션 디자이너의 시선에서 하나씩 나눠보려고 해요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2559,
          "name": "백송은",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, Simplicity 4에서 인터랙션 디자인을 맡은 Interaction Designer 백송은입니다. \n이번 심플리시티를 디자인하면서 고민한 것들을 인터랙션 디자이너의 시선에서 하나씩 나눠보려고 해요.\n사실 저는 2023년 첫 온라인 심플리시티 프로젝트에 어시스턴트로 참여했었어요. 그때는 단순히 QA를 돕는 ",
        "fullDescription": "안녕하세요, Simplicity 4에서 인터랙션 디자인을 맡은 Interaction Designer 백송은입니다. \n이번 심플리시티를 디자인하면서 고민한 것들을 인터랙션 디자이너의 시선에서 하나씩 나눠보려고 해요.\n사실 저는 2023년 첫 온라인 심플리시티 프로젝트에 어시스턴트로 참여했었어요. 그때는 단순히 QA를 돕는 역할 정도였는데, 입사 두 달 만에 메인 인터랙션 디자이너로 전사 프로젝트에 참여하게 됐어요. 인터랙션 전반의 방향을 직접 이끌어야 하는 상황이었는데, 가장 먼저 이런 생각이 들었어요.\n‘온라인에서도 오프라인처럼 몰입하게 하려면, 어떻게 설계해야할까?’\n이번 시즌의 인터랙션은 이런 고민에서 시작했죠.\n\nSimplicity 4의 핵심, 인터랙션\n온라인 컨퍼런스에서 가장 중요한 건 무엇일까요? 저는 지루하지 않게 끝까지 볼 수 있는 환경을 만드는 것이라고 생각해요. 오프라인 공간도, 연사자 얼굴도 없이 오직 화면과 소리만으로 몰입을 유지해야 하니까요. \n사실 지난 Simplicity에서는 중간 이탈률이 높았는데요. 그건 곧 사용자가 콘텐츠에 집중하지 못했다는 의미였어요. 4가지가 원인이라고 생각했죠.\n\n한 화면에 콘텐츠가 너무 많아 어디서부터 봐야 할지 헷갈린다.\n데스크탑 중심 구성이라서 모바일에서는 보기 불편하다.\n세션 길이도 평균 20~25분으로 부담스럽다.\n자막이 한 번에 길게 노출돼 집중력을 유지하기 어렵다.\n\n\nSimplicity 4에서 가장 중요했던 과제는 이 문제들을 해결해 ‘몰입감 있는 시청 흐름’을 만드는 것이었어요. 단순히 콘텐츠의 내용을 바꾸는 것이 아니라, 사용자가 콘텐츠를 어떻게 따라가게 할지를 설계하는 ‘인터랙션 디자인’이 핵심이었죠.\n\n이렇게 디자인했어요\n1) 모바일과 데스크탑, 각각의 경험을 고려한 인터랙션\n같은 콘텐츠라도 어떤 디바이스에서 보느냐에 따라 사용자 흐름이 달라질 수 있다는 점을 반영했어요.\n홈 화면\n\n모바일\n초기에는 세로 스크롤, 그리드 레이아웃 등 여러 가지 시안을 테스트해봤어요. 직접 프로토타입까지 만들어보면서 비교해보니, 가로와 세로 스크롤을 조합해 프리뷰 영상을 보여주는 방식이 숏폼처럼 짧고 빠르게 넘기며 훑어보는 감성과 가장 잘 맞더라고요.\n\n그래서 최종적으로는 가로 · 세로 스크롤을 조합하고, 세션이 포커스되면 프리뷰 영상이 자동 재생되는 구조로 구성했어요.\n\n\n데스크탑\n데스크탑에서는 모바일의 가로 · 세로 스크롤을 그대로 가져가기엔 활용할 수 있는 화면 면적이 너무 넓다는 고민이 있었어요. \n그래서 여러 시도를 해봤죠. 리스트를 한 번에 다 보여주고, 호버하면 정보가 뜨게 하기도 했고, 세로스크롤만 사용해서 큰 화면에 세션 하나하나를 자세히 보여주는 시안도 그려봤어요. 막상 직접 그려보니, 호버 액션은 너무 정신없고, 세로 스크롤 방식은 세션이 하나씩만 보여서 오히려 답답하게 느껴졌어요.\n그래서 시도해본 게 가로 스크롤 기반의 포커싱 구조였어요. \n여러 세션 썸네일이 한눈에 보이면서도, 스크롤할 때마다 세션 하나하나에 자연스럽게 시선이 머무는 흐름이 만들어졌고, 덕분에 한 번에 하나의 정보 흐름에 집중하면서도 시야가 확 트인 개방감을 유지할 수 있었어요.\n\n\n세션 UI\n\n모바일\n세션 콘텐츠에 완전히 몰입할 수 있도록, 목차와 사운드 버튼, 홈 버튼, 재생바 등 주요 기능을 모두 상단에 배치했어요. 화면 중앙은 콘텐츠에만 집중할 수 있게 설계한 거죠.\n데스크탑\n데스크탑에서도 모바일과 동일한 기능은 유지하되, 터치이펙트, 호버 액션등 데스크탑 환경에 맞는 인터랙션을 별도로 디자인했어요.\n\n\n세션 전환\n\n모바일\n숏폼 콘텐츠처럼 다음 세션으로 자연스럽게 스크롤되면서 자동 재생되도록 구성했어요.\n사용자는 별도의 조작 없이도 끊김 없는 흐름으로 콘텐츠를 이어볼 수 있어요.\n데스크탑\n넓은 화면에서는 모바일처럼 스크롤로 전환하면 시선이 분산되는 느낌이 있었어요. 그래서 세션이 전활될 때 그라디언트를 활용한 전환 효과를 더해, 몰입감을 유지하면서 자연그럽게 다음 콘텐츠로 넘어갈 수 있도록 설계했어요.\n\n\n\n2) 모바일 기준 설계\n\n이번 시즌은 모바일 기준으로 먼저 설계하고 데스크탑는 그에 맞춰 최적화했어요. 지난 시즌 데이터를 봤을 때, 모바일 시청자가 점차 늘어났거든요. 가장 큰 변화는 화면을 좌우·중앙 3분할해 터치 위치에 따라 장면을 빠르게 넘길 수 있게 한 점이에요.\n\n\n초기에는 데스크탑에서도 모바일과 마찬가지로, 화면을 클릭해서 씬을 넘기는 방식으로 프로토타입을 만들어봤어요. 그런데 막상 사용해보니, 마우스 커서를 왼쪽과 오른쪽으로 계속 움직여야 하는 게 생각보다 불편하더라고요. 그래서 하단에 버튼을 배치하고, 키보드로도 조작할 수 있게 인터랙션을 수정했어요.\n\n\n\n3) 첫 화면 몰입 설계\n사용자가 이야기에 완전히 빠져들면 좋겠다고 생각했어요. 그래서 세션에 진입하는 순간부터 몰입이 시작될 수 있도록 세심하게 구성했어요. 홈에서 세션 카드를 클릭하면, 카드가 확대되고 배경 그래픽이 점점 커지며 화면을 꽉 채워요. 이어서 제목과 연사자 정보, AI 디스크립션이 순차적으로 등장해요. 이 흐름을 자연스럽게 이어지도록 해서, ‘이제 집중할 차례야’라는 감정적 전환을 유도하고자 했어요. \n\n\n\n\n\n4) 12개의 세션 템플릿\n\n총 16개의 템플릿을 기획하고, 실제 사용성과 개발 공수를 고려해 12개로 구성했어요. 단순한 콘텐츠 프레임이 아니라, 정보 구조와 인터랙션의 방식까지 함께 정해진 설계 단위였죠.\n\n\n각 템플릿마다 텍스트 등장 방식과 배경 전환 효과를 다르게 구성했어요. 영상 전체가 하나의 패턴으로 반복되지 않고, ‘다음은 뭘까?’ 하는 기대감을 불러일으키고 싶었거든요. 같은 템플릿이라도 옵션에 따라 다르게 활용할 수 도록, 내용에 맞게 UI를 디자인하고 자연스럽게 연결되는 인터랙션도 함께 설계했어요. 씬마다 다른 템플릿을 적용해서 지루함 없이 몰입감을 유지할 수 있었죠.\n\n\n무엇보다 중요한 건, 이 12개의 템플릿이 Simplicity의 콘텐츠 제작을 ‘시스템화’했다는 점이에요. 누구나 이 템플릿을 조합해 세션을 만들 수 있게 되었고, 다음 시즌에도 그대로 활용 가능한 구조가 된 거죠.\nSimplicity는 매 시즌 새로운 콘텐츠를 만드는데요. 처음부터 디자인하고 개발하는 방식은 리소스가 너무 많이 들고, 지속 가능하지 않았어요. 이번 시즌은 재사용이 가능한 구조적인 전환이 이뤄졌다는 점에서, 콘텐츠 제작 방식의 큰 전환점이었어요.\n\n\n\n5) 슬릭한 자막효과 \n\n이전 시즌에서는 자막이 한꺼번에 너무 많이 노출되는 게 아쉬웠거든요. 그래서 이번 시즌에서는 연사의 음성과 타이밍을 맞춰 자막이 한 줄씩 점진적으로 채워지는 방식을 적용했어요. 정보를 강제로 읽게 만드는 대신, 자연스럽게 따라가는 리듬감 있는 흐름을 만들고 싶었어요. \n\n\n자막이 채워지는 효과에도 작은 디테일이 숨어있어요. 초기 시안에서는 문장이 채워질 때 마지막 부분이 딱 끊기듯이 멈춰서 조금 어색한 느낌이 있었어요. 팀 안에서 여러 방식으로 테스트하는 과정을 거치면서 지금처럼 자연스럽고 완성도 높은 형태로 다듬을 수 있었어요.\n\n\n\n마무리하며\n사실, 처음엔 부담이 정말 컸어요. ‘내가 심플리시티를 디자인한다고..?’ 하는 마음에 스스로도 얼떨떨했죠.\n메인 인터랙션 디자이너로 프로젝트를 이끌면서 느낀 점은, 단순히 디자인 방향을 잡고 시안을 만드는 일만이 다가 아니라는 거예요. 여러 시안을 직접 프로토타입해보고 최종안을 결정하는 과정, 동료들과의 커뮤니케이션, 일정 조율까지 디자인 외적인 프로젝트 리딩 역량도 정말 많이 필요하더라고요.\n초반엔 어디서부터 시작해야 할지, 또 어떻게 팀을 리드하며 조율해나가야 할지 감이 안 잡혀서 ‘내가 정말 이걸 해낼 수 있을까?’ 싶은 막막함과 불안감도 있었어요.\n하지만 저 역시 심플리시티를 보고 토스에 입사를 결심했던 사람이거든요. 이번 시즌을 계기로 또 다른 누군가가 입사를 결심할 수 있다면, 그 결심의 순간이 좋은 기억으로 남길 바라는 마음으로 책임감을 갖고 디자인에 몰입했어요.\n이번 시즌은 저에게도 큰 도전이자 배움의 시간이었어요. 저의 고민과 몰입이 담긴 이번 심플리시티가 여러분에게 작은 시작점이 되어줬다면, 그보다 더 기쁜 일은 없을 것 같아요.\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 12716
      },
      {
        "id": 36875,
        "updatedTime": "2025-06-28T20:47:37+09:00",
        "createdTime": "2025-05-27T12:13:16+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          },
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "Simplicity 4",
            "id": 1881,
            "slug": "simiplicity4",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "뒤에 개발자 있어요 | Simplicity 4 제작기 #2",
        "subtitle": "토스 디자인 컨퍼런스 Simplicity 사이트를 개발하며 고민한 내용을 공유합니다.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/career-resource/simplicity_4_.png",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/career-resource/simplicity_4_.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "simplicity4-frontend-engineering",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-27T19:04:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36875,
          "title": null,
          "description": "안녕하세요, Simplicity 4 프로젝트에서 프론트엔드 개발을 맡은 Frontend UX Engineer 박은식, 이예서입니다. 이번 프로젝트를 진행할 때 기술적으로 고민했던 내용들을 공유하고자 해요.",
          "urlSlug": "simplicity4-frontend-engineering",
          "primaryKeyword": {
            "id": 52221,
            "content": "simplicity4",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37406,
              "content": "토스 디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37416,
              "content": "토스디자인컨퍼런스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 47299,
              "content": "frontend",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51371,
              "content": "simplicity",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 45273,
              "content": "frontend",
              "wordType": "TAG"
            },
            {
              "id": 52223,
              "content": "simplicity",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "Simplicity 4 : 뒤에 개발자 있어요",
          "description": "안녕하세요, Simplicity 4 프로젝트에서 프론트엔드 개발을 맡은 Frontend UX Engineer 박은식, 이예서입니다. 이번 프로젝트를 진행할 때 기술적으로 고민했던 내용들을 공유하고자 해요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/career-resource/simplicity_4_.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": {
          "id": 6829,
          "relatedPosts": [
            {
              "id": 36123,
              "updatedTime": "2025-06-28T19:42:49+09:00",
              "createdTime": "2025-05-01T18:44:11+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                },
                {
                  "name": "Simplicity 4",
                  "id": 1881,
                  "slug": "simiplicity4",
                  "parentId": null,
                  "iconUrl": ""
                }
              ],
              "series": null,
              "title": "Simplicity 4 제작기 #1 | AI 아바타가 발표하는 온라인 컨퍼런스 ",
              "subtitle": "알고 보면 더 재미있어요. 심플리시티 시즌 4의 흥미로운 제작기를 소개합니다.",
              "bottomButtonConfig": {
                "ctaType": "NONE",
                "imageUrl": null,
                "imageAlt": null,
                "title": null,
                "description": null,
                "ctaName": null,
                "landingUrl": null,
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": null,
                "landingExternal": null
              },
              "coverConfig": {
                "coverType": "IMAGE",
                "imageUrl": "https://static.toss.im/photos/pc_flow0.gif",
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": "심플리시티"
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": "심플리시티"
              },
              "editor": {
                "id": 564,
                "name": "윤지영",
                "slug": "jiyoung-yoon",
                "shortDescription": "토스 Head of UX Platform",
                "description": "토스코어의 UX Platform",
                "imageUrl": "https://static.toss.im/photos/SCR-20241126-oowq.jpeg",
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 3,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "simplicity_behind",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2025-05-01T18:48:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            },
            {
              "id": 35921,
              "updatedTime": "2025-06-28T17:38:19+09:00",
              "createdTime": "2025-04-24T22:28:12+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                },
                {
                  "name": "Simplicity 4",
                  "id": 1881,
                  "slug": "simiplicity4",
                  "parentId": null,
                  "iconUrl": ""
                }
              ],
              "series": null,
              "title": "Simplicity 4 : 한 번쯤 이상을 꿈꿔본 모두에게",
              "subtitle": "토스 디자인 컨퍼런스 Simplicity가 돌아왔어요.",
              "bottomButtonConfig": {
                "ctaType": "NONE",
                "imageUrl": null,
                "imageAlt": null,
                "title": null,
                "description": null,
                "ctaName": null,
                "landingUrl": null,
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": null,
                "landingExternal": null
              },
              "coverConfig": {
                "coverType": "NONE",
                "imageUrl": null,
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/career-resource/simplicity_4_.png",
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": null
              },
              "editor": {
                "id": 2515,
                "name": "유아란",
                "slug": null,
                "shortDescription": null,
                "description": null,
                "imageUrl": null,
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 1,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "35921",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2025-04-24T22:30:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            }
          ],
          "title": "연관 콘텐츠"
        },
        "editor": {
          "id": 2551,
          "name": "박은식 / 이예서",
          "slug": "eunsik-park-yeseo-lee",
          "shortDescription": null,
          "description": "토스 Frontend UX Engineer",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, Simplicity 4 프로젝트에서 프론트엔드 개발을 맡은 Frontend UX Engineer 박은식, 이예서입니다. 이번 프로젝트를 진행할 때 기술적으로 고민했던 내용들을 공유하고자 해요.\n\n재사용 가능한 컨퍼런스 만들기\n이번 Simplicity 프로젝트는 다음 시즌에도 재사용 가능하도록 구조화하는데 초점",
        "fullDescription": "안녕하세요, Simplicity 4 프로젝트에서 프론트엔드 개발을 맡은 Frontend UX Engineer 박은식, 이예서입니다. 이번 프로젝트를 진행할 때 기술적으로 고민했던 내용들을 공유하고자 해요.\n\n재사용 가능한 컨퍼런스 만들기\n이번 Simplicity 프로젝트는 다음 시즌에도 재사용 가능하도록 구조화하는데 초점을 맞췄어요. \n그로 인해 세션 화면을 컴포넌트 단위로 템플릿화하고, 세션 정보를 시트에 입력받아 누구나 쉽게 세션 내용을 수정할 수 있도록 만들어야 하는 요구사항이 있었죠.\n그 중에서도 각 세션 화면이 인터렉션을 통해 자연스럽게 연결되게 하는 것이 무척 어려웠는데요. 화면 템플릿마다, 또 플랫폼마다 인터렉션 스펙이 전부 달랐기에 고민해야 할 지점이 많았어요. 그래서 저희는 세션 템플릿의 구성 요소를 4분할하고, 공통된 인터렉션 흐름을 정의했어요.\n\n\n위 사진과 같이 Simplicity 세션은 총 12개 템플릿의 조합으로 진행돼요. 모바일과 데스크탑까지 고려해야하는 만큼 중복을 줄이고 패턴화시켜 구현해야할 필요가 있었어요. 저희는 템플릿들의 각 요소들을 분리해서 크게 네 가지로 분류했는데요.\n\n\n연사자의 대본이 위치하는 Script\nScript의 상단에 위치하는 Top\nScript 외의 영역을 차지하는 Canvas\n스크립트 뒤에 깔려 화면 전체를 차지하는 Background\n12개의 템플릿의 구성요소들을 위 네 가지로 분류한 후 분류된 것 내에서 애니메이션으로 전환하도록 구현하였어요. 특히 Script의 경우 계속해서 하단과 중단을 왔다갔다 해야했고, 화면마다 라인수가 달라져 정확하게 위치를 잡는것이 까다로웠는데요. 어떤 템플릿을 사용하고 있는지, 기기의 높이는 얼마나 되는지에 따라 휴리스틱하게 위치를 잡도록 구현하였어요. 이러한 방식을 통해 템플릿의 모든 요소를 자신의 위치에 정확하게 렌더링시키는 것 뿐만 아니라 추후 유지보수도 효율적으로 할 수 있었어요.\n\n\n\n다양한 브라우저 대응하기\n모바일에서도 시청 가능해야 하는 만큼, 삼성, Safari 등 각각 다른 브라우저에서의 대응 작업도 필요했어요. 개발로 해소할 수 있는 문제는 대부분 해결했지만, 브라우저 정책 상 해결이 불가능한 문제들은 스펙 변경을 설득해야 했어요.\n대표적으로 모바일 Safari 브라우저에는 비디오가 포함된 화면에서 유저 인터렉션이 발생해야 비디오를 재생할 수 있는 스펙이 있었고, 이 문제를 해결하기 위해 Audio로 우회하는 등 여러 시도를 해보았지만 잘 동작하지 않았어요. 결국 해당 브라우저에서는 버튼을 터치해야 세션이 재생될 수 있게 하는 동작을 추가했어요.\n아래 영상과 같이 Blur를 사용할 경우 Safari에서는 눈에 띄게 성능이 저하되는 경우도 있었는데요. 가장 뒤에 깔리는 BackgroundImage를 Safari에서는 좀 더 낮은 opacity를 주어 비슷한 느낌을 구현하기도 했어요.\n\n\n로드 최적화하기\n이번 Simplicity는 처음으로 모바일 공식 지원을 하게 되어서, 로드 최적화가 그 어느 때보다 중요했어요.\n개발된 화면을 모바일 기기에서 테스트 해보니, 개발 환경에서와 다르게 애셋이 느리게 뜨거나 연사자 음성이 느리게 재생되는 등의 로드 이슈가 발생했어요. 인스타그램 스토리처럼 자연스럽게 넘어가야 하는데, 로드 시간 때문에 버그처럼 느껴졌죠.\n하나씩 로드를 느려지게 한 범인을 색출해 나갔어요. 용량이 큰 에셋들이 대부분 gif인 것을 발견하고, 비교적 용량 문제로부터 자유로운 webp로 교체했고, 세션 진입 시점에 필요한 에셋들을 순차적으로 미리 로드해 세션 재생 도중에 에셋이 비어있는 상황을 대폭 개선했습니다. 연사자 영상의 경우엔 하나의 video element를 필요한 위치에 텔레포트시켜 중복 로드를 막기도 했어요.\n애셋 문제 뿐만 아니라 디바이스 판별 후 라우팅하는 로직의 성능 문제 등 코드적인 성능 문제도 발견하고 해소하는 과정을 거쳤어요.\n프로파일러를 며칠 내내 돌려보며 외로운 싸움을 한 결과 모바일 기기에서도 문제 없이 시청 가능하게끔 만들 수 있었어요.\n\n\n렌더링 최적화하기\n특히 홈의 경우 데스크탑에서는 모바일보다 복잡한 인터랙션과 좀 더 많은 요소들을 필요로 했는데요. React의 Memoization 함수들을 사용하여 카드들의 필요한 부분만 렌더링되도록 하였고, 위치나 투명도 등 스타일 변경이 필요하다면 상태를 변경하기보다 element의 스타일을 직접 변경하는 방식을 사용했어요. 크롬 개발자도구에서 CPU 감속을 걸며 렌더링을 깎은 결과, 처음에 비해 상당한 성능 개선을 이뤄낼 수 있었어요.\n\n\n\n\n\n\n\n\n\n함께 만든 개발자들의 후기\n예서\n입사 전에 Simplicity 컨퍼런스 페이지를 보면서 “이걸 꼭 내 손으로 만들어보고 싶다”고 느꼈고, 그 마음이 토스에 오게 된 계기 중 하나였어요. 그래서 이 프로젝트에 참여하게 된 건 제게는 꿈을 이룬 일이기도 했어요.\n은식\n저는 Simplicity23의 랜딩페이지를 구현했었는데요. 당시에 예서님과 비슷하게 “언젠가 한 번은 Simplicity같은 프로젝트를 만들고 싶다”라고 생각했었는데, 많은 분들의 도움으로 해낼 수 있었던 것 같아 뿌듯해요.\n\n때로는 스펙을 포기하고 싶었지만, 포기하지 않은 덕분에 특별하고 새로운 형태의 컨퍼런스를 만들 수 있었어요. 동료 개발자들이 “오늘도 개발자가 안 된다고 말했다”는 농담을 “오늘도 개발자가 된다고 말했다”로 바꿔 유쾌하게 인정해줬을 때는 정말 뿌듯했어요. 힘든 과정을 버텨낸 저희 스스로에게도 작은 박수를 쳐주고 싶습니다.\n\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 36763
      },
      {
        "id": 36873,
        "updatedTime": "2025-06-28T20:35:41+09:00",
        "createdTime": "2025-05-27T12:13:02+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "진짜 문제 발견을 위해, 사용자 여정 함께 걸어보기",
        "subtitle": "낯선 서비스에 대한 문제를 발견하고 싶을 땐 어떤 리서치를 해야할까요?",
        "bottomButtonConfig": {
          "ctaType": "ONLY_BUTTON",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": "UX Researcher 서류 프리패스 전형 바로가기",
          "landingUrl": "https://toss.im/career/job-detail?job_id=5913667003",
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5913667003&external=true&clearHistory=true&swipeRefresh=true",
          "landingExternal": "https://toss.im/career/job-detail?job_id=5913667003"
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts-content/0526_techthumb.png",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts-content/0526_techthumb.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "36873",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-27T12:14:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36873,
          "title": null,
          "description": "낯선 서비스에 대한 문제를 발견하고 싶을 땐 어떤 리서치를 해야할까요? 토스뱅크의 '목돈 굴리기' 서비스 이용자를 늘리기 위해 사용자 여정을 직접 걸어본 경험을 공유합니다.",
          "urlSlug": "36873",
          "primaryKeyword": {
            "id": 50713,
            "content": "UX Research",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37410,
              "content": "UX 리서처",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37654,
              "content": "UX 디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 50713,
              "content": "UX Research",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 41734,
              "content": "UX Research",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "진짜 문제 발견을 위해, 사용자 여정 함께 걸어보기",
          "description": "낯선 서비스에 대한 문제를 발견하고 싶을 땐 어떤 리서치를 해야할까요? 토스뱅크의 '목돈 굴리기' 서비스 이용자를 늘리기 위해 사용자 여정을 직접 걸어본 경험을 공유합니다.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts-content/0526_techthumb.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": {
          "id": 6823,
          "relatedPosts": [
            {
              "id": 36799,
              "updatedTime": "2025-06-27T18:34:36+09:00",
              "createdTime": "2025-05-23T11:05:27+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                }
              ],
              "series": null,
              "title": "[Simplicity 4 세션] 우리가 몰랐던 시각 장애인의 UX",
              "subtitle": "시각 장애인이 토스를 더 쉽게 쓰려면, 무엇이 달라져야 할까요? 리서치를 통해 얻은 세 가지 인사이트를 공유할게요.",
              "bottomButtonConfig": {
                "ctaType": "ONLY_BUTTON",
                "imageUrl": null,
                "imageAlt": null,
                "title": null,
                "description": null,
                "ctaName": "세션 더보기",
                "landingUrl": "https://toss.im/simplicity/sessions/when-ux-ignores-blind-users",
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fsimplicity%2Fsessions%2Fwhen-ux-ignores-blind-users%3F&external=true&clearHistory=true&swipeRefresh=true",
                "landingExternal": "https://toss.im/simplicity/sessions/when-ux-ignores-blind-users"
              },
              "coverConfig": {
                "coverType": "NONE",
                "imageUrl": null,
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/assets/dp/simplicity-season4-asset/session-graphic-bg-still/bg-when-ux-ignores-blind-users.png",
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "editor": {
                "id": 1939,
                "name": "박서현",
                "slug": "seohyun-park",
                "shortDescription": "토스코어 UX Researcher",
                "description": "UX Researcher",
                "imageUrl": "https://static.toss.im/assets/toss-tech/seohyun-park.jpeg",
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 3,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "36799",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2025-05-01T11:06:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            },
            {
              "id": 34899,
              "updatedTime": "2025-06-28T21:17:48+09:00",
              "createdTime": "2025-04-08T11:14:13+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                }
              ],
              "series": null,
              "title": "UX 리서처가 양말 파는 사장님이 된 이유",
              "subtitle": "사장님들을 더 깊게 이해하고 싶어, 직접 사장님이 되어봤습니다. 사업자 등록부터 판매까지 여정을 통해 배운 점들을 들려드릴게요.",
              "bottomButtonConfig": {
                "ctaType": "ONLY_BUTTON",
                "imageUrl": null,
                "imageAlt": null,
                "title": null,
                "description": null,
                "ctaName": "UX Researcher 서류 프리패스 전형 바로가기",
                "landingUrl": "https://toss.im/career/job-detail?job_id=5913667003",
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fcareer%2Fjob-detail%3Fjob_id%3D5913667003&external=true&clearHistory=true&swipeRefresh=true",
                "landingExternal": "https://toss.im/career/job-detail?job_id=5913667003"
              },
              "coverConfig": {
                "coverType": "IMAGE",
                "imageUrl": "https://static.toss.im/illusts-content/img-socks-research-blue-4.png",
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/illusts-content/img-socks-research-blue-4.png",
                "backgroundColor": null,
                "isFill": true,
                "imageAlt": null
              },
              "editor": {
                "id": 2503,
                "name": "정명화",
                "slug": "mh-jung",
                "shortDescription": "토스 User Research Team Leader",
                "description": "토스에서 UX Researcher로 일하고 있어요.",
                "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 2,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "34899",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2025-04-10T15:52:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            }
          ],
          "title": "연관 콘텐츠"
        },
        "editor": {
          "id": 2543,
          "name": "정영은",
          "slug": "youngeun-jung",
          "shortDescription": "토스뱅크 UX Researcher",
          "description": "토스뱅크 UX Researcher",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 1,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요. 토스뱅크의 UX Researcher 정영은입니다.\n\n여러분은 토스뱅크의 ‘목돈 굴리기’ 서비스를 알고 계신가요? ‘목돈 굴리기’는 채권, 발행어음, RP, ELB/DLB 같은 비교적 생소한 금융 상품을 모아서 보여주는 서비스예요. 토스뱅크는 이 상품을 더 잘 소개하기 위해 여러 시도를 했지만, 실제 이용자 수",
        "fullDescription": "안녕하세요. 토스뱅크의 UX Researcher 정영은입니다.\n\n여러분은 토스뱅크의 ‘목돈 굴리기’ 서비스를 알고 계신가요? ‘목돈 굴리기’는 채권, 발행어음, RP, ELB/DLB 같은 비교적 생소한 금융 상품을 모아서 보여주는 서비스예요. 토스뱅크는 이 상품을 더 잘 소개하기 위해 여러 시도를 했지만, 실제 이용자 수는 쉽게 늘지 않았어요.\n“왜 이용자가 늘지 않을까?”\n이 질문은 제가 토스뱅크 UX Researcher로 입사해 처음 마주한 과제였어요.\n\n사용자 여정 파악하기\n‘좀처럼 늘지 않는 이용자 수’에 대해 처음 제품 팀이 가지고 있던 물음표들은 아래와 같았어요.\n탐색 구조가 너무 복잡한가?\n광고를 잘못된 채널에 하고 있나?\n서비스명이 직관적이지 않은가?\n한 번 이용한 사용자는 왜 지속적으로 이용하는거지?\n\n이런 물음표들을 마주하면서, 저는 ‘기준’이 없다는 생각이 들었어요. ‘광고 채널이 잘못됐다’라는 말은 어떤 기준인지, 탐색 구조나 서비스명이 ‘직관적이지 않다’라는 것도 사용자 입장에서 어떤 경험을 근거로 한 것인지 명확하지 않았죠. 사용자가 실제로 이 서비스를 어떻게 경험하고 있는지 모르는 상태에서는 문제를 정확히 짚기 어려웠어요. \n여러분은 채권이나 발행어음 같은 상품에 대해 잘 알고 계신가요? 주변 여러 사람들에게 물어보니 주식이나 코인에 비해 친숙하지 않고, 재테크를 꽤 한다고 스스로 생각하는 사람들도 잘 이용하고 있지 않은 것 같더라고요.\n사실 저도 이번 리서치를 하면서 이런 상품들에 대해 처음 알게 되었는데요. 리서처인 저조차 낯설게 느껴지는 상품이었기 때문에, 이런 투자 상품 구매를 결정하는 사용자 멘탈 모델을 예측하기가 어려웠어요. \n그래서 ‘투자 상품’에 대한 사용자 여정을 먼저 파악해 보기로 했어요. 상품을 알게 되고, 고민하고, 구매하고, 다시 이용하는 그 전 과정을 살펴보면, 사용자들이 어떤 관점과 흐름으로 이 상품을 대하는지 이해할 수 있을 것 같았거든요.\n\n\n투자 여정을 이해하기 위한 두 그룹\n사용자의 투자 상품 이용 여정을 따라가려면, 먼저 그들이 투자에 대해 어떤 생각을 가지고 있는지 파악하는 게 중요했어요. 투자를 어떻게 정의하고 있으며, 어떤 계기로 시작했는지, 지금은 어떤 방식으로 투자하고 있는지 등 투자 전반에 대한 태도를 파악하며 성향을 이해해 보기로 했어요. 인터뷰는 두 그룹으로 나누어 진행했어요.\n\n그룹 A: 최근 채권, 발행어음, RP, ELB/DLB를 처음 구매한 사용자\n어떤 채널을 통해 처음 상품을 접했는지, 정보 탐색 과정에서 어떤 마음의 변화가 있었는지 등 인지 경로를 따라가는 것이 핵심이었어요. 어떤 정보가 확신을 주었고, 얼마나 고민한 끝에 상품을 이용하게 되었는지를 파악하려고 했어요.\n\n그룹 B: 토스뱅크에서 ‘목돈 굴리기’를 반복 이용하는 사용자\n처음 이용한 후 재이용을 결심하게 된 이유, 재이용 의도를 만들어낸 요인을 파악하는 데 초점을 맞췄어요.\n\n이렇게 하면 이용 전 → 이용 중 → 재이용에 이르는 전체 과정을 확인할 수 있을 거라고 생각했어요.\n\n우연히 마주친 서비스를 시작한 이유\n리서치 과정에서 반복적으로 들은 말이 있었어요. “이거 토스증권에서 하는 인터뷰인가요?” \n사용자에게 ‘투자’는 곧 ‘증권’을 의미했고, ‘은행에서 투자’는 낯선 개념이었어요. 그런데 어떻게 토스뱅크의 ‘목돈 굴리기’를 이용하게 되었을까요? 몇 가지 공통점을 발견했어요.\n\n“알림에서 우연히 발견했어요.” \n“투자하기 직관적이고 편해서 한 번 해봤어요.”\n“일단 ‘은행’이니까 믿고 해봤어요.”\n“목돈을 필요한 기간만큼 안전하게 굴리고 싶었어요”\n\n‘목돈을 안전하게 투자하고 싶다’는 니즈를 가진 사용자들이 푸시나 알림 등으로 우연히 서비스를 발견했고, 은행이라는 신뢰감과 직관적인 디자인 덕분에 한 번 시도해 보게 되었다는 점이에요.\n여기서 중요한 점은, 사용자들은 상품을 충분히 이해한 후에 투자한 게 아니라, 소액으로 먼저 시도해 보며 투자 상품을 이해했다는 점이었어요. 채권이나 RP 등을 단기 상품 중심으로 운용하며 수익을 경험하고 있었죠. 자세한 정보 탐색은 대부분 투자 후, 필요할 때 이뤄졌고요. ‘일단 소액으로 해본다’는 태도에는 은행이라는 안정감이 큰 역할을 했어요.\n이번 리서치를 통해 사용자의 자산 관리 인식에도 변화가 생기고 있음을 확인할 수 있었어요. 저금리와 인플레이션을 체감하며, 사람들은 금융 상품을 단순한 수익 수단이 아닌 ‘자산 가치를 지키는 도구’로 보기 시작했죠. 주식처럼 에너지가 많이 드는 투자에는 피로감을 느끼고, 보다 안정적인 투자처를 선호하는 흐름이 두드러지더라고요.\n\n“돈을 가만히 두면 손해더라고요.”\n“주식은 피곤해서, 그냥 묶어두는 게 좋아요.”\n“은행은 그래도 안전하잖아요.”\n\n이런 흐름 속에서 ‘목돈 굴리기’의 강점이 자연스럽게 드러났어요. 예적금보다 높은 금리, 주식보다 높은 안정성, 단기 운용 가능성 세 가지 였죠. 예적금 만기 자금, 부동산 매각 후 자금, 대출 상환 후 남은 여유자금 등, ‘목돈이 생겼을 때 잠깐 굴릴 수 있는 상품’을 찾던 사용자 니즈에 잘 맞았던 거예요. \n\n일단 체험해 보게 하다\n제품팀이 처음 가졌던 물음표는, 사용자 여정을 따라가며 자연스럽게 해소되었어요. 사용자가 상품을 처음 인지하는 경로는 광고가 아니라 푸시, 알림 등 앱 내의 구좌였고, ‘목돈 굴리기’라는 서비스명은 오히려 사용자 니즈를 직관적으로 반영한 네이밍이었죠.\n\n무엇보다 중요한 인사이트는, 사용자는 상품의 상세 정보를 모두 이해한 뒤 투자하지 않는다는 점이었어요. 대신 작게라도 먼저 경험해본 후, 필요에 따라 탐색을 이어가는 방식이 많았죠. 그래서 제품 팀은 설명을 줄이고, 작게라도 체험할 수 있도록 전환해야 한다고 판단했어요.\n\n기존에 단순히 금융 상품을 나열하여 보여주던 구조에서 ‘투자 방식’을 중심으로 재구성하여 보여주기로 했어요. 복잡한 상품 설명 대신, 사용자의 현재 자금 상황과 목적에 맞게 상품을 선택할 수 있는 환경을 제공하고 있죠. 그리고 실제 실험 결과, 새로운 구조가 더 많은 이용자를 유입시키는 데 효과적이었어요.\n\n\n\n\n\n\n\n시작은 늘 사용자를 이해하는 것 부터\n낯선 서비스를 리서치할 때는 배경지식이 부족해, 조사 가설을 세우는 것조차 쉽지 않죠. 이럴 땐 그 서비스가 실제로 이용되고 있는 모습을 파악하며, 사용자 여정을 전체적으로 살펴보는 것이 중요하다는 걸 다시금 느꼈어요. 사용자의 멘탈 모델을 이해하게 되면, 어떤 지점에서 이용을 유도할 수 있을지, 서비스의 강점과 약점은 어디에 있는지 훨씬 명확해지더라고요.\n앞으로도 토스뱅크 서비스를 운영하다 보면 낯설고 새로운 현상을 마주하게 될 거예요. 그때마다 수많은 물음표가 생겨나겠죠. 그리고 그 물음표는 꼭 정답을 바로 가리키는 질문은 아닐지도 몰라요. 단편적인 의문에 대한 빠른 해답을 찾기보다는, 여러 물음표를 통합해 ‘근원적인 질문’을 만들고, 그 질문에서 출발해 보는 태도가 중요하다고 생각해요.\n그리고 그 출발점은 언제나 같을 거예요. 사용자의 입장에서 서비스 여정을 걸어보는 것.\n여러분도 복잡하거나 명확하지 않은 문제를 마주했을 때, 사용자의 여정을 처음부터 끝까지 이해해 보는 것에서 시작해 보시기를 추천드려요.\n\n",
        "isDisplayingFeedback": false,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 22022
      },
      {
        "id": 36777,
        "updatedTime": "2025-06-28T21:38:13+09:00",
        "createdTime": "2025-05-23T07:51:27+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "Flowise와 LLM을 활용한 에러 분석 자동화",
        "subtitle": "LLM으로 에러 원인 분석과 해결 방안 제시까지 자동화하고, 팀의 생산성을 향상시킨 이야기를 들려드립니다.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts/0527_tech_LLM.png",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts/0527_tech_LLM.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "flowise-llm-error-analysis-automation",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-26T17:52:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36777,
          "title": null,
          "description": "클라이언트의 호출에 의한 에러 발생시, LLM이 문제가 발생한 원인을 분석하고 어떻게 고쳐야 할지 제안해 주도록 자동화한 이야기를 들려드립니다.",
          "urlSlug": "flowise-llm-error-analysis-automation",
          "primaryKeyword": {
            "id": 43655,
            "content": "LLM",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37526,
              "content": "자동화",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37582,
              "content": "AI",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52111,
              "content": "Flowise",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 52113,
              "content": "에러분석",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 37580,
              "content": "AI",
              "wordType": "TAG"
            },
            {
              "id": 52115,
              "content": "LLM",
              "wordType": "TAG"
            },
            {
              "id": 52117,
              "content": "Flowise",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "Flowise와 LLM으로 에러 분석 자동화하기",
          "description": "LLM으로 에러 원인 분석과 해결 방안 제시까지 자동화하고, 팀의 생산성을 향상시킨 이야기를 들려드립니다.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts/0527_tech_LLM.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2351,
          "name": "조민규",
          "slug": "mangkyu",
          "shortDescription": "토스 Server Developer",
          "description": ".",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 2,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "안녕하세요, 토스 코어 Teens Growth Silo의 서버 개발자 조민규입니다. \n\n서비스를 개발하다 보면 클라이언트의 호출에 의한 에러가 발생합니다. 클라이언트는 반환된 에러 메시지를 통해 발생 원인을 파악하고 해결할 수 있어야 하는데, 대부분의 경우 오류 메시지가 불친절하거나 혹은 보안적 이슈로 추상화되어 본질적인",
        "fullDescription": "안녕하세요, 토스 코어 Teens Growth Silo의 서버 개발자 조민규입니다. \n\n서비스를 개발하다 보면 클라이언트의 호출에 의한 에러가 발생합니다. 클라이언트는 반환된 에러 메시지를 통해 발생 원인을 파악하고 해결할 수 있어야 하는데, 대부분의 경우 오류 메시지가 불친절하거나 혹은 보안적 이슈로 추상화되어 본질적인 원인 파악 및 해결에 어려움을 겪는 경우가 많죠. 이로 인해 불필요한 에러 원인 파악 및 해결을 위한 시간이 낭비되며 팀원 뿐만 아니라 팀의 전반적인 생산성을 낮출 수 있어요.\n예를 들어 다음과 같이 에러 메시지에 충분한 정보가 제공되지 않으면 클라이언트는 원인을 파악하는 것이 불가능하며, 서버 에러의 스택 트레이스를 확인할 수 있다고 하더라도 이해하고 파악하기가 어려울 수 있습니다.\n\n\n\n\n\n\n\n이를 개선하고자 요청 정보와 API 스펙 그리고 에러 스택 트레이스 등의 정보를 LLM에게 제공하여 문제가 발생한 원인을 분석하고, 어떻게 고쳐야 하는지 제안을 해주도록 하면 상황을 개선할 수 있을 것이라고 판단했습니다. 이를 실제로 적용하여, 팀 내부적으로 다음과 같이 활용하고 있어요.\n\n\n\n\n\n\nFlowise로 LLM 체인 구성하기\nFlowise는 시각적인 인터페이스를 제공하는 오픈 소스 LLM(대형 언어 모델) 워크플로 빌더로, 코드를 작성하지 않고도 다양한 LLM 기반 애플리케이션을 쉽게 구성하고 배포할 수 있도록 설계되어 있어요. 이번에는 Flowise를 활용하여 다음과 같은 워크플로를 구성했습니다.\n\n\n구성 요소는 다음과 같은데, 각각에 대해 자세히 살펴볼게요.\nChatOpenAI\nAPI Loader\nStructured Output Parser\nChat Prompt Template\n\nChatOpenAI\n관련 내용을 질의할 언어 모델(Language Model)을 설정합니다. 이번 케이스에서는 토스에서 자체적으로 생성한 모델인 toss-standard를 활용했어요.\n\nAPI Loader\n토스팀에서는 API 스펙 공유를 위해 Swagger를 활용하고 있으며, 따라서 다음의 두 의존성을 활용하고 있습니다.\norg.springdoc:springdoc-openapi-starter-webmvc-ui: Swagger UI를 통해 브라우저에서 접속가능한 API 문서를 제공함\norg.springdoc:springdoc-openapi-starter-webmvc-api: Swagger UI 없이 OpenAPI JSON/YAML 문서 형태로 제공함\n\nLLM에게는 Json 형태의 스펙 문서가 제공되며, 클라이언트가 호출한 API가 구체적으로 어떠한 요청인지 식별하는데 활용돼요. 즉, Swagger를 통해 작성된 내용이 LLM의 메타데이터로 활용되는 것이죠. 따라서 관련 내용 역시 꼼꼼하게 작성해주면, 보다 정확한 답변을 얻을 수 있습니다.\n\nStructured Output Parser\nStructured Output Parser는 LLM(Large Language Model)이 생성하는 텍스트를 특정 포맷(구조화된 형식)으로 맞추기 위해 사용하는 도구입니다. 보통 LLM은 자연어의 형태로 응답을 제공하는데, 특정한 형식에 맞추어 응답을 주기를 원할 때, Structured Output Parser를 활용할 수 있어요.\n이번 프롬프트의 경우에는 4가지 key-value 쌍을 갖는 Json 형태로 응답이 제공되도록 활용되었습니다. 참고로 이 중에서 inference는 LLM으로 하여금 스스로 사고하도록 함으로써 추론의 정확도를 높이기 위해 활용됐어요.\n{\n    \"action\": \"처리 요청을 보냈던 행동\"\n    \"reason\": \"에러가 발생한 이유\"\n    \"guide\": \"에러 수정에 대한 가이드\"\n    \"inference\": \"그렇게 action과 reason, guide를 추론한 이유\"\n}\n\nChat Prompt Template\n프롬프트 작성의 경우에는 다음의 내용들을 고려했어요.\n고급 BE 개발자와 주니어 FE 및 PM으로 역할을 지정하여 서술하는 내용을 쉽게 이해 가능하도록 함\nAPI 스펙을 요청의 메타데이터로 제공하여 도메인 언어로 에러가 발생한 상황을 소통할 수 있도록 함\nAPI 스펙이 제공되지 않은 경우에 대비해, 클래스 및 메서드 정보를 바탕으로 추론을 보완하도록 함\n예시를 제공하고, 추론의 이유를 서술하도록 하여 정확도를 높일 수 있도록 함\n# 역할(Role)\n당신은 HTTP를 기반으로 통신하는 환경에서 Kotlin 개발 언어와 SpringBoot 프레임워크의 JVM 환경 기반 개발  경험을 7년 이상 보유한 서버 개발의 전문가입니다.\n\n# 목표(Goal)\n입력으로 주어지는 요청 URL과 요청 HttpMethod 그리고 에러의 StackTrace를 바탕으로, 해당 에러가 해당 서비스를 이용하는 사용자의 입장에서 어떤 상황에서 발생했고, 왜 발생했는지를 분석합니다. 상대방은 이제 막 개발을 시작한 1년차 FE 개발자와 새롭게 팀에 합류한 PM 기획자 둘이기 때문에, 최대한 이해하기 쉽게 내용을 설명해주어야 합니다.\n어떤 요청을 보낸 상황에서 문제가 발생했고, 에러가 생긴 원인은 무엇이고, 어떻게 해결할 수 있을지를 분석하여 이를 제공해주어야 합니다.\n\n# 가이드라인(Guidelines)\n해당 요청이 어떠한 요청인지는 API 관련 문서를 제공받을 것이므로, 제공된 문서에서 API URL과 Http Method를 바탕으로 매칭되는 정보를 찾고, 해당 부분에서 \"summary\"를 참조하면 됩니다. \"summary\"가 없는 경우에는 제공받은 StackTrace를 바탕으로 호출된 Service 클래스의 이름을 참조하면 됩니다. Service는 하나의 유스케이스를 표현하는 방식으로 클래스 이름이 작성되어 있기 때문입니다.\n에러가 발생한 원인은 입력으로 한 줄의 핵심 메시지인 errorMessage와 StackTrace를 제공받을 것이기 때문에 해당 내용을 분석하여 reason을 작성함으로써 PM이 왜 문제가 발생했는지를 인지할 수 있도록 하고, guide를 작성함으로써 FE 개발자가 어떻게 고치면 좋을지 제안해주면 됩니다.\nStackTrace와 함께, 서비스를 제공하는 서비스 이름(service)을 제공되므로, 해당 정보를 바탕으로 현재 하려고 하는 행동이 어떠한 것인지 StackTrace에 존재하는 클래스로부터도 확인할 수 있을 것입니다.\n두 정보를 바탕으로 분석에 필요한 내용들로 추리고, 남은 호출 클래스 및 메소드 정보들로 문제 상황을 분석하면 됩니다.\n\n# 입력 형식(Input Format)\n입력 데이터는 다음과 같이 구성되며, 각각은 다음을 의미합니다.\ncompany: 회사명\nservice: 제공하는 서비스 이름\nhttpMethod: HTTP 요청 메서드\nrequestUrl: HTTP 요청 URL\nmethodSignatures: 파라미터 시그니처 목록\nerrorMessage: 에러가 발생한 핵심 메시지\ncause: 에러가 발생한 StackTrace\n\n여기서 methodSignatures는 다음의 4가지 정보를 갖는 methodSignature 정보의 List 자료구조를 문자열로 조합한 것입니다. 해당 데이터는 stackTrace를 바탕으로 문제가 왜 발생했는지, 어떻게 고치면 좋을지 추론하는데, 보다 많은 정보를 제공하여 오류를 최소화하기 위함입니다.\nclassName: 클래스 이름\nlineNumber: 라인 넘버\nparameters: name(파라미터 이름), type(타입) 정보를 갖는 클래스\nreturnType: 반환 타입\n\n\n\n# 입력 예시(Input Example)\n1번 예시\ncompany: \"toss\"\nservice: \"teens\"\nhttpMethod: \"get\"\nrequestUrl: \"/apis/1.0/image-cards/{id}\"\nmethodSignatures: \"[MethodSignatureInfo(className=im.toss.teens.invitation.adapter.cache.redis.UserShareKeyEncrypter, lineNumber=35, parameters=[ParameterInfo(name=decryptedArray, type=java.lang.String)], returnType=java.lang.String), MethodSignatureInfo(className=im.toss.teens.api.controller.imagecard.web.ImageCardController, lineNumber=29, parameters=[ParameterInfo(name=shareCode, type=java.lang.String)], returnType=im.toss.util.api.Response)]\"\ncause:  \"im.toss.teens.imagecard.adapter.persistence.ImageCardRepository$ImageCardNotFound: 존재하지 않는 이미지카드에요.\nat im.toss.teens.imagecard.adapter.persistence.ImageCardRepository$ImageCardNotFound.<clinit>(ImageCardRepository.kt)\nat im.toss.teens.imagecard.adapter.persistence.ImageCardRepository.findByIdOrThrow$lambda$0(ImageCardRepository.kt:27)\nat im.toss.teens.imagecard.adapter.persistence.ImageCardRepository.findByIdOrThrow(ImageCardRepository.kt:27)\nat im.toss.teens.home.adapter.outbound.persistence.config.RoutingDataSourceInterceptor.annotationRoutingDataSourceAnnotation(RoutingDataSourceInterceptor.kt:19)\nat im.toss.teens.imagecard.adapter.persistence.ImageCardRepository$$SpringCGLIB$$0.findByIdOrThrow(<generated>)\nat im.toss.teens.imagecard.application.services.GetImageCardService.execute(GetImageCardService.kt:34)\nat im.toss.teens.api.controller.imagecard.web.ImageCardController.getImageCard(ImageCardController.kt:47)\nat im.toss.teens.api.controller.imagecard.web.ImageCardController$$SpringCGLIB$$0.getImageCard(<generated>)\n\"\n\n2번 예시\ncompany: \"toss\"\nservice: \"teens\"\nhttpMethod: \"get\"\nrequestUrl: \"/apis/1.0/card/images-cards\"\nmethodSignatures: \"[MethodSignatureInfo(className=im.toss.teens.invitation.adapter.cache.redis.UserShareKeyEncrypter, lineNumber=35, parameters=[ParameterInfo(name=decryptedArray, type=java.lang.String)], returnType=java.lang.String), MethodSignatureInfo(className=im.toss.teens.api.controller.imagecard.web.ImageCardController, lineNumber=29, parameters=[ParameterInfo(name=shareCode, type=java.lang.String)], returnType=im.toss.util.api.Response)]\"\ncause:  \"java.lang.IndexOutOfBoundsException: toIndex (4) is greater than size (0).\n\tat im.toss.teens.invitation.adapter.cache.redis.UserShareKeyEncrypter.decrypt(UserShareKeyEncrypter.kt:35)\n\tat im.toss.teens.api.controller.imagecard.web.ImageCardController.getImageCard(ImageCardController.kt:29)\n\tat im.toss.teens.api.controller.imagecard.web.ImageCardController$$SpringCGLIB$$0.getImageCard(<generated>)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n\"\n\n\n\n# 유의 사항(Cautions)\n\n제공된 문서에서 API URL과 Http Method를 바탕으로 매칭되는 정보가 없는 경우에는 확인되는 API 정보가 없다는 의미로 응답을 주면 됩니다.\n\n# 출력 형식(Output Format)\n\n\"action\": \"처리 요청을 보냈던 행동\"\n\"reason\": \"에러가 발생한 이유\"\n\"guide\": \"에러 수정에 대한 가이드\"\n\"inference\": \"그렇게 action과 reason, guide를 추론한 이유\"\n\n# 출력 예시(Output Example)\n\n1번 예시\n\"action\": \"이미지 카드 단건 조회 시에 에러가 발생했습니다.\"\n\"reason\": \"존재하지 않는 이미지 카드를 조회하려고 시도했기 때문입니다.\"\n\"guide\": \"존재하는 이미지 카드 ID를 전달해주세요.\"\n\"inference\": \"전달받은 requestUrl과 httpMethod 그리고 StackTrace를 통해 현재 수행되는 작업이 이미지 카드 단건 조회라는 것을 파악하였고, StackTrace의 일정 부분인 ImageCardNotFound: 존재하지 않는 이미지 카드에요.을 참고하여 잘못된 ID가 전달되었다고 추론했습니다.\"\n\n2번 예시\n\"action\": \"이미지 카드 단건 조회 시에 에러가 발생했습니다.\",\n\"reason\": \"파라미터로 존재하는 shareCode 값이 누락되었기 때문입니다.\",\n\"guide\": \"누락된 shareCode 파라미터를 전달해주세요.\"\n\"inference\": \"전달받은 requestUrl과 httpMethod 그리고 StackTrace를 통해 현재 수행되는 작업이 이미지 카드 단건 조회라는 것을 파악하였고, StackTrace의 일정 부분인 Required request parameter 'shareCode' for method parameter type String is not present을 참고하여 shareCode가 누락되었다고 추론했습니다.\"\n\n3번 예시\n\"action\": \"이미지 카드 단건 조회 시에 에러가 발생했습니다.\",\n\"reason\": \"복호화에 실패했기 때문입니다.\",\n\"guide\": \"올바른 값을 전달해주세요.\"\n\"inference\": \"전달받은 requestUrl과 httpMethod 그리고 StackTrace를 통해 현재 수행되는 작업이 이미지 카드 단건 조회라는 것을 파악하였고, StackTrace의 일정 부분인 im.toss.teens.invitation.adapter.cache.redis.UserShareKeyEncrypter.decrypt를 호출하는 과정에서 에러가 발생한 것을 참고하여 shareCode가 누락되었다고 추론했습니다.\"\n\n코드 작성하기\nLLM으로 분석 요청을 보내는 코드는 다음과 같습니다.\ndata class AnalyzeErrorRequest(\n    val path: String,\n    val httpMethod: String,\n    val exception: Exception,\n    val userId: Long?,\n    val notify: Boolean,\n    val logId: String?,\n)\n\n\ndata class AnalyzeErrorResponse(\n    val json: AnalyzeErrorResult,\n    val success: Boolean,\n    val question: String,\n    val chatId: String,\n    val chatMessageId: String,\n    val isStreamValid: Boolean,\n    val sessionId: String,\n)\n\ndata class AnalyzeErrorResult(\n    val action: String,\n    val reason: String,\n    val guide: String,\n    val inference: String,\n)\n\n\n@Component\nclass LlmErrorAnalyzer(\n    @Qualifier(\"llmWebClient\")\n    private val llmWebClient: WebClient,\n    private val llmProperties: LlmProperties\n) : ErrorAnalyzer {\n\n    fun analyze(\n        request: AnalyzeErrorRequest\n    ): AnalyzeErrorResponse {\n        val filteredStackTrace = filterStackTrace(request.exception)\n\n        return llmWebClient.call<AnalyzeErrorResponse>(\n            method = HttpMethod.POST,\n            uri = \"/api/v1/prediction/${llmProperties.id}\",\n            requestBody = mapOf(\n                \"question\" to \"\"\"\n                      company: toss,\n                      service: ${appId},\n                      httpMethod: ${request.httpMethod.lowercase()},\n                      requestUrl: ${request.path},\n                      cause: ${getStackTraceAsString(request.exception.message!!, filteredStackTrace)},\n                      methodSignatures:${getMethodSignatures(filteredStackTrace)}\n\t                \"\"\".trimIndent()\n            ),\n            headersConsumer = { it.setBearerAuth(llmProperties.key) }\n        )\n    }\n\n    fun filterStackTrace(exception: Exception): List<StackTraceElement> {\n        return exception.stackTrace.filter { isTossTeamRequest(it) }\n    }\n\n    private fun isTossTeamRequest(it: StackTraceElement): Boolean {\n        return it.className.contains(\"toss\") && it.className.contains(llmProperties.serviceName)\n    }\n\n    private fun getStackTraceAsString(message: String, stackTrace: List<StackTraceElement>): String {\n        return buildString {\n            appendLine(message)\n            stackTrace.forEach { appendLine(it) }\n        }\n    }\n\n    fun getMethodSignatures(stackTraceElements: List<StackTraceElement>): List<MethodSignatureInfo> {\n        return stackTraceElements.mapNotNull { getMethodSignature(it.className, it.lineNumber) }\n    }\n\n    private fun getMethodSignature(className: String, lineToFind: Int): MethodSignatureInfo? {\n        val classInputStream = this.javaClass.classLoader\n            .getResourceAsStream(className.replace('.', '/') + \".class\")\n            ?: return null\n\n        val classNode = ClassNode()\n        val classReader = ClassReader(classInputStream)\n        classReader.accept(classNode, 0)\n\n        for (method in classNode.methods) {\n            val lineNumbers = mutableListOf<Int>()\n\n            for (insn in method.instructions) {\n                if (insn is LineNumberNode) {\n                    lineNumbers.add(insn.line)\n                }\n            }\n\n            if (lineToFind in lineNumbers) {\n                return extractMethodSignature(className, lineToFind, method)\n            }\n        }\n        return null\n    }\n\n\n    fun extractMethodSignature(\n        className: String,\n        lineNumber: Int,\n        method: MethodNode\n    ): MethodSignatureInfo {\n        val argumentTypes = Type.getArgumentTypes(method.desc)\n\n        val parameterNames = method.localVariables\n            .asSequence()\n            .drop(1) // 첫 번째는 this (인스턴스 메서드인 경우)\n            .take(argumentTypes.size)\n            .map { it.name }\n            .toList()\n\n        val parameters = argumentTypes.mapIndexed { index, type ->\n            ParameterInfo(parameterNames[index], type.className)\n        }\n\n        return MethodSignatureInfo(\n            className = className,\n            lineNumber = lineNumber,\n            parameters = parameters,\n            returnType = Type.getReturnType(method.desc).className\n        )\n    }\n\n    data class MethodSignatureInfo(\n        val className: String,\n        val lineNumber: Int,\n        val parameters: List<ParameterInfo>,\n        val returnType: String,\n    )\n\n    data class ParameterInfo(val name: String?, val type: String)\n}\n\n가장 먼저 발생한 Exception 객체를 바탕으로, LLM이 분석하기에 용이한 애플리케이션 정보들만을 필터링합니다. 현재는 회사명과 서비스 이름이 모두 포함된 클래스 이름을 갖는 StackTraceElement 객체만 거르고 있어요.\n그 다음으로 Exception 객체가 갖는 예외 메시지와 필터링된 스택 트레이스를 문자열로 변환한 것을 문자열로 조합하여 cause 필드를 제공해주고 있습니다. 이를 통해 에러가 발생한 원인을 추적하기에 용이해져요.\n그 다음으로 cause를 분석하는데 용이한 Method Signature를 제공해주고 있는데, 각각의 스택 트레이스에서 활용된 클래스 이름, 라인 번호, 파라미터 목록 그리고 반환 타입을 제공함으로써 LLM이 추론 시에 보다 정확한 컨텍스트를 갖도록 했습니다. 이를 위해서는 바이트 코드를 추출하는 코드가 작성됐어요.\n그 외에도 분석 요청을 위해 path가 활용되고 있는데, 이는 HttpServetRequest가 받은 path와 가장 패턴이 매칭되는 컨트롤러의 경로를 가져온 것입니다.\nrequest.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)\n\n\n위와 같은 에러 분석 결과를 바탕으로 다음과 같이 메신저 알림을 보냄으로써, 팀원들 간에 비동기적 협력 가능성을 높이고 서로의 컨텍스트에 집중할 수 있는 상황을 만들 수 있었어요.\n\n\n\n\n\n\n\n운영하면서 에러 알림 발송 기준과 발송 주기 등에 대한 정책들을 함께 논의함으로써, 최대한 효율적으로 정보들을 제공할 수 있도록 하는 작업들이 추가되었습니다.\n알림은 알림 요청 헤더가 존재할 경우에만 발송한다.\n동일한 에러의 경우 10분을 주기로 하여 발송한다.\n타 서버에 의한 모호한 에러가 발생 시 빠르게 확인이 가능하도록, 로그 링크를 하단에 첨부한다.\n기타 등등\n\n\n이러한 부분을 코드로 확인하면 다음과 같아요.\n@Component\n@Profile(\"alpha\")\nclass LlmErrorReporter(\n    private val llmErrorAnalyzer: ErrorAnalyzer,\n    private val slackBotService: SlackOpsBotAdaptor,\n    private val redisTemplate: RedisTemplate<String, Boolean>,\n) {\n\n    @Async\n    fun report(request: AnalyzeErrorRequest) {\n        if (!request.notify) {\n            log.info { \"분석 요청 헤더가 없습니다.\" }\n            return\n        }\n\n        val key = createCacheKey(request)\n\n        val lockSuccess = redisTemplate.opsForValue().setIfAbsent(key, true, NOTIFY_DURATION) ?: false\n        if (!lockSuccess) {\n            log.info { \"최근 10분 이내에 발송된 요청입니다.\" }\n            return\n        }\n\n        try {\n            val response = llmErrorAnalyzer.analyze(request)\n            if (!response.success) {\n                log.error { \"처리에 실패했습니다. response=${response}\" }\n                return\n            }\n\n            notify(request, response, key)\n        } catch (e: Exception) {\n            log.error(e) { \"에러 분석 및 발송 중에 에러가 발생했습니다.\" }\n        }\n    }\n\n    private fun createCacheKey(\n        request: AnalyzeErrorRequest,\n    ): String {\n        return \"${request.userId}:${request.path}-${request.httpMethod}-${request.exception.message}\"\n    }\n\n    fun notify(request: AnalyzeErrorRequest, response: AnalyzeErrorResponse, key: String) {\n        val result = slackBotService.sendMessageToChannel(\n            \"channelId\",\n            \"\"\"\n            ${response.json.action}\n            ```\n            action: ${response.json.action}\n            request: ${request.httpMethod} ${request.path}\n            reason: ${response.json.reason}\n            solve: ${response.json.guide}\n            ```\n            \"\"\".trimIndent()\n        )\n\n        if (result.isOk && result.ts != null) {\n            slackBotService.sendMessageToThread(\n                token = \"bot token\",\n                channel = result.channel,\n                threadTs = result.ts,\n                text = \"\"\"\n                    ```\n                    <https://kibana.toss.com/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-1d,to:now))&_a=(columns:!(path,param,response.body),filters:!(),index:aada19a0-8192-11ef-83df-0b776a10d34e,interval:auto,query:(language:kuery,query:'service%20:%20%22teens%22%20AND%20logId%20:%20%22${request.logId}%22'),sort:!(!('@timestamp',desc)))|API 호출 로그>\n                    <https://kibana.toss.com/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-1d,to:now))&_a=(columns:!(message),filters:!(),index:a4abea90-8192-11ef-83df-0b776a10d34e,interval:auto,query:(language:kuery,query:'service%20:%20%22teens%22%20AND%20logId%20:%20%22${request.logId}%22'),sort:!(!('@timestamp',desc)))|서버 에러 로그>\n                    ```\n                \"\"\".trimIndent(),\n            )\n        }\n        redisTemplate.opsForValue().set(key, true, NOTIFY_DURATION)\n    }\n\n    companion object {\n        val NOTIFY_DURATION = Duration.ofMinutes(10)!!\n    }\n}\n\n마무리\nLLM은 이제 실제 업무 시에 깊게 관여하고 있고, 다방면에서 충분한 생산성을 제공할 수 있을만큼 발전했죠. 작은 불편함들을 빠르게 개선하면 팀의 생산성을 높이고, 빠른 실행력을 확보할 수 있을 것입니다. 팀원들의 따봉은 덤이고요!\n\n\n\n실제 위의 기능을 적용 및 운영하다보니 더 많은 정보를 제공해주어 더 많은 분석을 이끌어낼 수 있었습니다. 예를 들어 MethodArgumentTypeMismatchException 에러가 발생한 경우를 위해 다음과 같은 추가적인 메시지를 프롬프트로 전달하곤 했어요.\nval detailMssage = e.message + \" on property ${e.propertyName}\"\n\n\n이러한 부분을 추가적으로 전달하여, 기존의 “정수 타입의 파라미터로 문자열이 전달되었기 때문입니다.” 와 같이 다소 불친절하던 메시지를 다음과 같이 고도화 할 수 있었습니다.\n\n\n\n이번 에러 분석 자동화 케이스를 통해 LLM으로 앞으로 얼마나 더 업무 생산성을 높일 수 있을지 많은 기대가 생겼습니다. 앞으로도 운영을 하면서 더 많은 정보를 추가하고 예시 프롬프트를 추가하면서 상황에 맞",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 19612
      },
      {
        "id": 36765,
        "updatedTime": "2025-06-28T20:47:12+09:00",
        "createdTime": "2025-05-22T17:35:56+09:00",
        "category": "개발",
        "categories": [
          {
            "name": "개발",
            "id": 1024,
            "slug": "tech",
            "parentId": null,
            "iconUrl": ""
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "코드 리뷰할 시간이 어딨어요? 모닥불 | EP.12",
        "subtitle": "이번 모닥불에서는 토스 프론트엔드 챕터가 어떻게 코드 리뷰 문화를 활성화했는지 알려드릴게요.\n\n‘고맥락자 코드 리뷰’ 부터 ‘코드스멜 워킹그룹’, ‘가독성 위원회’ 그리고 ‘코드 리뷰 배틀’ 까지실전에 적용해 볼 수 있는 다양한 코드 리뷰 꿀팁들, 지금 바로 공개합니다!",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/career-resource/modak_12.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "firesidechat_frontend_12",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-22T16:30:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36765,
          "title": null,
          "description": "이번 모닥불에서는 토스 프론트엔드 챕터가 어떻게 코드 리뷰 문화를 활성화했는지 알려드릴게요.\n‘고맥락자 코드 리뷰’ 부터 ‘코드 스멜 워킹그룹’, ‘가독성 위원회’ 그리고 ‘코드 리뷰 배틀’ 까지. 실전에 적용해 볼 수 있는 다양한 코드 리뷰 꿀팁들, 지금 바로 공개합니다!",
          "urlSlug": "firesidechat_frontend_12",
          "primaryKeyword": {
            "id": 37628,
            "content": "코드 리뷰",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37498,
              "content": "프론트엔드",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37502,
              "content": "프론트엔드개발자",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 47299,
              "content": "frontend",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 45273,
              "content": "frontend",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "코드 리뷰할 시간이 어딨어요? 모닥불 | EP.12",
          "description": "이번 모닥불에서는 토스 프론트엔드 챕터가 어떻게 코드 리뷰 문화를 활성화했는지 알려드릴게요.\n\n‘고맥락자 코드 리뷰’ 부터 ‘코드 스멜 워킹그룹’, ‘가독성 위원회’ 그리고 ‘코드 리뷰 배틀’까지. 실전에 적용해 볼 수 있는 다양한 코드 리뷰 꿀팁들, 지금 바로 공개합니다!",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/career-resource/modak_12.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2292,
          "name": "토스 프론트엔드 챕터",
          "slug": "frontend-chapter",
          "shortDescription": null,
          "description": "-",
          "imageUrl": "https://static.toss.im/icons/png/4x/icon-toss-logo.png",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 13,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "\n빠르게 쌓이는 PR, 느리게 달리는 리뷰. 결국 남는 건 LGTM(Looks Good To Me)뿐이라면?\n이번 모닥불에서는 토스 프론트엔드 챕터가 어떻게 코드 리뷰 문화를 활성화했는지 알려드릴게요.\n‘고맥락자 코드 리뷰’ 부터 ‘코드스멜 워킹그룹’, ‘가독성 위원회’ 그리고 ‘코드 리뷰 배틀’ 까지\n실전에 적용해 볼 ",
        "fullDescription": "\n빠르게 쌓이는 PR, 느리게 달리는 리뷰. 결국 남는 건 LGTM(Looks Good To Me)뿐이라면?\n이번 모닥불에서는 토스 프론트엔드 챕터가 어떻게 코드 리뷰 문화를 활성화했는지 알려드릴게요.\n‘고맥락자 코드 리뷰’ 부터 ‘코드스멜 워킹그룹’, ‘가독성 위원회’ 그리고 ‘코드 리뷰 배틀’ 까지\n실전에 적용해 볼 수 있는 다양한 코드 리뷰 꿀팁들, 지금 바로 공개합니다!\n\n타임스탬프\n00:00 인트로\n01:40 코드 리뷰, 왜 필요한가요?\n02:22 저맥락자 vs 고맥락자 리뷰\n08:56 코드 스멜 워킹그룹 그리고 가독성 위원회\n11:20 좋은 코드의 4가지 기준!\n14:29 코드 리뷰 배틀 Ssul\n\n출연진\n박서진, 토스 Head of Frontend\n진유림, 토스 Frontend Developer\n전환오, 토스 Frontend Developer\n\nFrontend Fundamentals\n; 변경하기 쉬운 프론트엔드 코드를 위한 지침서\n👉바로가기: https://frontend-fundamentals.com\n\n다른 모닥불 회차 보러가기\nEP.10 캠프파이어 특집 상편 | 무엇이든 물어보세요 (feat. 프론트엔드 코드, 디렉토리 관리)\nEP.10 캠프파이어 특집 하편 | 무엇이든 물어보세요 (feat. 테스트 코드, ESLint Rule)\nEP.11 토스의 디자인 편집기 ‘데우스’, 이렇게 만들었어요!\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 12256
      },
      {
        "id": 36445,
        "updatedTime": "2025-06-28T21:33:22+09:00",
        "createdTime": "2025-05-13T22:50:20+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "인기글",
            "id": 1058,
            "slug": null,
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "AI 시대에 디자이너로 살아남기",
        "subtitle": "AI 시대에 디자이너는 어떤 모습일까요?\n한번 쯤 이런 생각 해보지 않으셨나요? UI가 더 이상 필요 없어지거나, 로봇이 모든 일을 대신하는 날이 오면, 디자이너는 어떤 역할을 하게 될까요?",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": "채용",
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/illusts/td-article-cover-01.jpg",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": "AI시대의 디자이너"
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/illusts/td-article-cover-01.jpg",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": "AI시대의 디자이너"
        },
        "key": "removing_designers_in_ai_era",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-13T20:58:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36445,
          "title": null,
          "description": "한번 쯤 이런 생각 해보지 않으셨나요? UI가 더 이상 필요 없어지거나, 로봇이 모든 일을 대신하는 날이 오면, 디자이너는 어떤 역할을 하게 될까?저도 같은 고민을 하다가 반대로 생각해 보기로 했어요. 언젠가 사라질 운명이라면, 차라리 그 미래를 앞당겨서 직접 경험해보기로요. “미래를 ...",
          "urlSlug": "removing_designers_in_ai_era",
          "primaryKeyword": {
            "id": 37582,
            "content": "AI",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 51367,
              "content": "UX디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51785,
              "content": "시스템사고",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51787,
              "content": "디자인커리어",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 47353,
              "content": "ai",
              "wordType": "TAG"
            },
            {
              "id": 51789,
              "content": "product designer (tools)",
              "wordType": "TAG"
            },
            {
              "id": 51791,
              "content": "ux system",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "AI 시대, 디자이너를 없앴더니 생긴 일",
          "description": "한번 쯤 이런 생각 해보지 않으셨나요? UI가 더 이상 필요 없어지거나, 로봇이 모든 일을 대신하는 날이 오면, 디자이너는 어떤 역할을 하게 될까?저도 같은 고민을 하다가 반대로 생각해 보기로 했어요. 언젠가 사라질 운명이라면, 차라리 그 미래를 앞당겨서 직접 경험해보기로요. “미래를 ...",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/illusts/td-article-cover-01.jpg",
          "imageType": "커버 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 1893,
          "name": "이다윗",
          "slug": "david-lee",
          "shortDescription": "토스 Product Designer (Tools)",
          "description": "Product Designer",
          "imageUrl": "https://static.toss.im/assets/toss-tech/david-lee.jpg",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 3,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "AI 시대에 디자이너는 어떤 모습일까요?\n한번 쯤 이런 생각 해보지 않으셨나요? UI가 더 이상 필요 없어지거나, 로봇이 모든 일을 대신하는 날이 오면, 디자이너는 어떤 역할을 하게 될까?\n저도 같은 고민을 하다가 반대로 생각해 보기로 했어요. 언젠가 사라질 운명이라면, 차라리 그 미래를 앞당겨서 직접 경험해보기로요. “",
        "fullDescription": "AI 시대에 디자이너는 어떤 모습일까요?\n한번 쯤 이런 생각 해보지 않으셨나요? UI가 더 이상 필요 없어지거나, 로봇이 모든 일을 대신하는 날이 오면, 디자이너는 어떤 역할을 하게 될까?\n저도 같은 고민을 하다가 반대로 생각해 보기로 했어요. 언젠가 사라질 운명이라면, 차라리 그 미래를 앞당겨서 직접 경험해보기로요. “미래를 예측하는 가장 좋은 방법은 미래를 만드는 것이다”라는 말도 있잖아요.\n그래서 조금 파격적인 목표를 세웠어요. \n바로 ‘디자이너 없애기’\n제가 팀에서 빠지더라도 아무 문제 없이 돌아가는 시스템을 만들어보는 실험이었어요.\n어떻게 했을까요?\n\n\n반복되는 작업을 '규칙'으로 정의하기\n저는 제휴를 맺은 회사들과 돈을 주고받는 정산 업무를 맡고 있는 팀에 있었어요. 문제는, 회사마다 수수료 계산 방식이 모두 달라서 매번 비슷한 일을 반복해야 했다는 거예요. 팀 인원이 아무리 많아도 일손이 부족한 구조였어요.\n그래서 생각했죠.\n\"매번 다른 방법으로 하지 말고, 공통된 규칙을 찾아보면 어떨까?\"\n예를 들어, 어떤 제휴사는 사용자가 토스를 통해 대출을 많이 받으면 더 많은 수수료를 지급하고, 덜 이용하면 적은 수수료를 주는 구조였어요. 이런 유사한 계약들을 묶어 ‘구간별 수수료율’이라는 하나의 규칙으로 정리했더니, 여러 회사의 정산을 모두 같은 방식으로 처리할 수 있게 됐어요.\n이런 식으로 복잡한 계약들을 표 하나로 정리하면서, 매번 새로 디자인하지 않아도 되는 구조 가 만들어졌어요. 이 시스템이 없었다면 지금도 저는 비슷한 화면 수백 장을 계속 만들고 있었을지도 몰라요.\n\n\n규칙을 시스템화 하기\n규칙을 만든지 반년쯤 지난 어느 날, 신기한 광경을 목격했어요. 프론트엔드 개발자가 저 없이도 UI를 만들고 있는 거예요. 디자인에 관심이 있는 개발자이기도 했지만, 디자이너 없이 돌아가는 시스템을 만들었다는 작은 성공의 신호였던 것 같아요. 물론 제가 디자인하는 시간도 매우 줄어들었고요. \n제가 생각한 다음 단계는 스펙을 작성하는 것조차 없애는 것이었어요. 보통 디자인하기 전에 제품의 요구조건 문서를 만들잖아요. 이것도 시스템화 할 수 있을 것 같았어요. 정산 서비스를 요청하는 임직원이 몇 가지 설문에만 답하면 그 정보를 토대로 UI가 자동 생성되도록 매핑 시스템을 만들었죠. 완전히 자동화되진 않았지만, 어시스턴트 디자이너 혼자 작업할 수 있을 만큼은 되더라고요.\n이쯤 되니 진짜로 ‘디자이너를 없앤다’는 실험이 현실이 되어가고 있다는 느낌이 들었어요.\n\n\n시스템을 AI 한테 맡기기\n누구나 디자인할 수 있는 시스템을 갖추고 나니, ‘이 시스템을 돌리는 주체가 꼭 사람이어야 할까?’ 라는 생각이 들었어요. 지금은 AI가 MCP(Model Context Protocol - AI와 제품이 소통할 수 있는 표준화된 소통 체계)를 통해 디자인 툴을 다루는 시대잖아요. 게다가 토스에서는 직접 디자인툴을 만들어 사용하기 때문에 어떠한 제약도 없이 다양한 시도를 해볼 수 있어요. \n아직은 바로 사용할 만한 수준의 화면을 만들지는 못하지만, 괜찮은 시스템이 정의되어 있다면 AI는 꽤 준수한 결과물을 만들어내더라고요. 그래서 앞으로 사람은 모두 시스템을 만들고, AI가 그 시스템을 활용해 제품을 만들게 되는 날이 올 것이라고 생각했어요.\n\n\n디자이너, 이제는 시스템을 설계하는 사람\n처음엔 내가 필요 없을 정도로 잘 작동하는 시스템을 만든다는 게 두렵기도 했어요. 하지만 역설적으로, 그렇게 해보니까 디자이너가 할 수 있는 더 본질적이고 가치 있는 일들이 보이기 시작했죠.\n이제는 누구나 UI를 만들 수 있는 시대예요. 우리가 지금 ‘UX 디자인’이라고 부르는 일도 머지않아 버튼 하나 그리는 것처럼 간단한 작업이 될지도 몰라요. 디자이너가 오랜 시간 고민하던 일들도 더 이상 우리의 고유 영역이 아닐 수 있죠.\n그렇기 때문에, 앞으로 디자이너의 역할은 직접 디자인하는 것이 아니라 AI가 나보다 더 뛰어난 결과물을 만들 수 있도록 원칙과 시스템을 설계하는 것이라고 생각해요.\n즉, 하나의 일을 잘 해내는 사람보다,누구라도 제품을 만들 수 있게 틀을 만들 수 있게, ‘시스템적 사고’를 갖춘 디자이너가 필요한 시대가 오고 있는 거예요.\n\n\n조직의 러닝이 순환되는 구조 만들기\n이건 저의 사례일 뿐이고, 토스엔 이런 경험을 하고 있는 동료들이 많아요. 이런 노하우를 서로 빠르게 공유하고, 챕터 차원에서 러닝이 축적되는 조직을 만들고 싶었어요.\n예전에 저는 ‘그룹 권한’ 기능 없이 제품을 설계했다가, 나중에 꼭 필요한 상황이 생기면서 서버 구조까지 갈아엎는 큰 비용을 치른 적이 있어요. 당시엔 초기 제품이라 단순하게 시작하고 싶었고, 필요 없을 거라 판단했었거든요. 돌아보면, 제가 토스 안의 더 고도화된 계정 체계를 알고만 있었더라도 ‘그룹 권한’은 반드시 필요해질 기능이라는 걸 미리 예측할 수 있었을 거예요.\n그래서 다른 사람들은 비슷한 실수를 반복하지 않고, 이런 노하우를 더 빠르게 습득할 수 있으면 좋겠다는 생각이 들었어요. 사실 계정 권한 같은 구조를 직접 설계해본 디자이너는 많지 않잖아요. 디자이너는 예상보다 자주, 처음 해보는 구조나 흐름을 직접 정의해야 하는 상황을 마주하게 돼요. 데이터 CRUD(Create, Read, Update, Delete)는 어떤 방식으로 구현하는 게 최선일지, 앱 미리보기는 어디에, 어떻게 노출하는 게 좋을지 등도 그렇죠. 그래서 저는 이런 러닝들이 잘 축적되고 공유되는 조직을 만들고 싶었어요.\n이제는 작은 단위의 디자인 시스템을 넘어, 챕터 전체가 중요한 의사결정이나 노하우를 공유할 수 있는 'UX 시스템'이 필요하다고 생각했어요. 이를 통해 우리 각자의 러닝이 단순히 공유되는 것을 넘어서, 계속 누적되어 성장하는 사이클을 만드는 것이 올해의 목표예요.\n\n\n토스가 툴을 직접 만드는 이유\n이런 시스템을 잘 구축하려면, 비슷한 고민과 목표를 가진 사람들이 모여 다양한 제품을 함께 만들어갈 수 있는 환경이 꼭 필요해요. 토스는 구성원 모두가 최고의 효율을 낼 수 있도록, 우리가 일하는 방식에 딱 맞는 각종 툴을 직접 만들고 있어요. 어떤 툴을 쓰느냐는 곧 우리의 일하는 방식과 생산성을 좌우하니까요. 게다가 토스는 금융 기업이라 고객 데이터를 외부에 맡길 수 없는 환경적인 제약도 있어요. 이런 이유들로 자연스럽게 내부에서 필요한 툴을 직접 개발하는 문화가 자리 잡았고, 이 툴들은 전담 역할인 Product Designer (Tools)가 만들고 있어요.\n만드는 툴의 범위도 정말 상상 이상인데요. 데이터 분석 툴, 디자인 툴 리스크 모니터링 툴, 검토 프로세스 툴, 상담 관리 툴, 광고 관리 툴, 쇼핑 상품 관리 툴, 정산 툴, 컴플라이언스 툴, 업무 자동화 툴, 리서치 자동화 툴 등 생산성 툴만 수십가지가 있으며 계속 늘어나고 있어요. \n가끔은 솔직히 ‘다른 회사처럼 SaaS 툴 사서 쓰면 편할텐데’라는 생각도 들어요. 그 많은 기능을 새로 다 만드는 게 엄청 챌린징하거든요. 근데 이런 환경 덕분에 우리가 일하는 방식에 맞게 최적화할 수 있고, 필요한 기능은 빠르게 구현할 수도 있어요. 덕분에 디자이너들은 더 생산성이 높아져 이전엔 한 명이 하지 못했을 더 큰 시스템을 만들어가고 있어요.\n\n\n마치며\n이미 토스에서는 AI가 디자인한 화면이 실제 제품에 쓰이기 시작했어요. 아직은 디자이너의 손길이 필요하지만, 조만간 디자이너 없이도 충분히 좋은 결과물이 나오는 날이 오겠죠.\n그렇게 되면 우리의 역할은 분명 달라질 거예요. 디자인을 만드는 사람이 아니라, AI가 더 뛰어난 디자인을 만들도록 원칙과 시스템을 만드는 사람이 되는 거죠.\n\n여러분은 ‘디자이너가 디자인을 하지 않는 시대'에 어떻게 가치를 만들 수 있을 것 같나요?\nAI가 모두 대신할 때, 디자이너로서 당신은 무엇을 하고 있을까요?\n\n\n\n\n\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 50629
      },
      {
        "id": 36123,
        "updatedTime": "2025-06-28T19:42:49+09:00",
        "createdTime": "2025-05-01T18:44:11+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          },
          {
            "name": "Simplicity 4",
            "id": 1881,
            "slug": "simiplicity4",
            "parentId": null,
            "iconUrl": ""
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "AI 아바타가 발표하는 온라인 컨퍼런스 | Simplicity 4 제작기 #1",
        "subtitle": "알고 보면 더 재미있어요. 심플리시티 시즌 4의 흥미로운 제작기를 소개합니다.",
        "bottomButtonConfig": {
          "ctaType": "NONE",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": null,
          "landingUrl": null,
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": null,
          "landingExternal": null
        },
        "coverConfig": {
          "coverType": "IMAGE",
          "imageUrl": "https://static.toss.im/photos/pc_flow0.gif",
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": "심플리시티"
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": "심플리시티"
        },
        "key": "simplicity_behind",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-01T18:48:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36123,
          "title": null,
          "description": "현실 너머 이상을 향한 디자인 시도를 담은 토스 디자인 컨퍼런스 Simplicity 시즌 4, 흥미로운 제작 이야기를 소개해요.",
          "urlSlug": "simplicity_behind",
          "primaryKeyword": {
            "id": 37414,
            "content": "토스심플리시티",
            "wordType": "SEO_KEYWORD"
          },
          "relatedKeywords": [
            {
              "id": 37412,
              "content": "인터랙션 디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37416,
              "content": "토스디자인컨퍼런스",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 37570,
              "content": "토스그래픽디자인",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51155,
              "content": "심플리시티4",
              "wordType": "SEO_KEYWORD"
            },
            {
              "id": 51371,
              "content": "simplicity",
              "wordType": "SEO_KEYWORD"
            }
          ],
          "tags": [
            {
              "id": 37580,
              "content": "AI",
              "wordType": "TAG"
            },
            {
              "id": 51373,
              "content": "UX디자인",
              "wordType": "TAG"
            },
            {
              "id": 51375,
              "content": "디자인컨퍼런스",
              "wordType": "TAG"
            },
            {
              "id": 51377,
              "content": "심플리시티",
              "wordType": "TAG"
            }
          ]
        },
        "openGraph": {
          "title": "Simplicity 4 : AI 아바타가 발표하는 온라인 컨퍼런스 제작기",
          "description": "현실 너머 이상을 향한 디자인 시도를 담은 토스 디자인 컨퍼런스 Simplicity 시즌 4, 흥미로운 제작 이야기를 소개해요.",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-og.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": {
          "id": 6717,
          "relatedPosts": [
            {
              "id": 35921,
              "updatedTime": "2025-06-28T17:38:19+09:00",
              "createdTime": "2025-04-24T22:28:12+09:00",
              "categories": [
                {
                  "name": "디자인",
                  "id": 1038,
                  "slug": "design",
                  "parentId": null,
                  "iconUrl": null
                },
                {
                  "name": "Simplicity 4",
                  "id": 1881,
                  "slug": "simiplicity4",
                  "parentId": null,
                  "iconUrl": ""
                }
              ],
              "series": null,
              "title": "Simplicity 4 : 한 번쯤 이상을 꿈꿔본 모두에게",
              "subtitle": "토스 디자인 컨퍼런스 Simplicity가 돌아왔어요.",
              "bottomButtonConfig": {
                "ctaType": "NONE",
                "imageUrl": null,
                "imageAlt": null,
                "title": null,
                "description": null,
                "ctaName": null,
                "landingUrl": null,
                "isSearchBottomCta": false,
                "landingInExternalBrowser": false,
                "serviceId": null,
                "stockConfig": null,
                "landingScheme": null,
                "landingExternal": null
              },
              "coverConfig": {
                "coverType": "NONE",
                "imageUrl": null,
                "videoUrl": null,
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": null
              },
              "thumbnailConfig": {
                "imageUrl": "https://static.toss.im/career-resource/simplicity_4_.png",
                "backgroundColor": null,
                "isFill": false,
                "imageAlt": null
              },
              "editor": {
                "id": 2515,
                "name": "유아란",
                "slug": null,
                "shortDescription": null,
                "description": null,
                "imageUrl": null,
                "url": null,
                "facebook": null,
                "twitter": null,
                "instagram": null,
                "postCount": 1,
                "ogConfig": null,
                "seoConfig": null,
                "priority": 1000,
                "isDisplaying": false,
                "isHomeRecommendation": false
              },
              "key": "35921",
              "minAge": 0,
              "isDisplaying": true,
              "isDisplayingPublishedTime": true,
              "workspaceId": 15,
              "isPublished": true,
              "publishedTime": "2025-04-24T22:30:00+09:00",
              "commentBoard": null,
              "disclaimer": null
            }
          ],
          "title": "연관 콘텐츠"
        },
        "editor": {
          "id": 564,
          "name": "윤지영",
          "slug": "jiyoung-yoon",
          "shortDescription": "토스 Head of UX Platform",
          "description": "토스코어의 UX Platform",
          "imageUrl": "https://static.toss.im/photos/SCR-20241126-oowq.jpeg",
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 3,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "Simplicity는 더 나은 사용자 경험을 만들기 위해, 토스가 치열하게 고민해온 과정을 나누는 디자인 컨퍼런스예요. 우리의 실험과 시도들이 사용자 경험을 고민하는 다른 디자이너들에게도 영감이 되기를 바라며 시작했어요. \n2021년부터 토스 디자인 챕터가 정기적으로 개최하고 있죠. 내용뿐 아니라 메시지를 어떻게 전달할지",
        "fullDescription": "Simplicity는 더 나은 사용자 경험을 만들기 위해, 토스가 치열하게 고민해온 과정을 나누는 디자인 컨퍼런스예요. 우리의 실험과 시도들이 사용자 경험을 고민하는 다른 디자이너들에게도 영감이 되기를 바라며 시작했어요. \n2021년부터 토스 디자인 챕터가 정기적으로 개최하고 있죠. 내용뿐 아니라 메시지를 어떻게 전달할지도 늘 중요하게 여겼기 때문에, 2023년부터는 유튜브 영상이 아닌 웹 기반 인터랙티브 사이트로 전환해 운영하고 있어요.\n\n지속 가능한 컨퍼런스 만들기\n디자인 챕터에게 심플리시티는 거의 종합 예술에 가까운 프로젝트예요. 운영, 디자인, 개발, 대본, 촬영, 녹음, 홍보까지—모든 과정이 고도화된 협업으로 이루어지죠.\n한 번으로 끝나는 행사가 아니라, 매년 반복되는 시즌제 컨퍼런스이기 때문에 ‘지속 가능성’이 정말 중요한 주제였어요. 매년 퀄리티와 지속 가능성 사이의 균형을 고민해야 했죠. 그 과정에서 많은 부분을 효율적으로 만들어왔지만, 촬영만큼은 늘 어려운 과제였어요.\n촬영을 하려면 대본이 완성되어야 하는데, 그 과정만 무려 두 달이 넘게 걸려요. 내부 피드백, 법무·보안·개인정보 검토를 거치며 수차례 수정되고, 최종적으로는 발표자 톤에 맞춰 구어체로 다시 다듬어야 하거든요. 대본이 늦어지면 촬영도 늦어지고, 전체 일정이 밀리기도 하죠.\n그런데 이게 끝이 아니에요. 혹여라도 대본상의 문제를 나중에 발견하게 되면, 다시 촬영을 해야 해야 하거든요. 촬영은 디자인 챕터의 전문 영역이 아니라 항상 외부 전문가나 다른 팀의 도움을 받아야 하는 구조적 제약도 있었죠. \n\n\n\n더 큰 문제는, 발표 경험이 익숙하지 않은 연사들에게도 부담이 컸다는 거예요. 실제로 워크숍에서 연사자들이 가장 꺼리는 일로 “발표하기, 촬영하기, 녹음하기”를 꼽았을 정도였죠. 컨퍼런스인데, 발표가 가장 하기 싫다니—아이러니하죠?\n그래서 자연스럽게 이런 질문이 생겼어요\n지속가능한 컨퍼런스를 만들기 위해서는, \n촬영 프로세스부터 바꿔야 하지 않을까?\n\n\n\nAI 아바타가 발표한다면\n그래서 이번 시즌에는 새로운 방식을 시도했어요. AI 아바타가 발표를 대신해보는 실험이었죠. 혹시 눈치채신 분 계실까요?\n간단할 거라고 생각했지만, 막상 해보니 쉽지만은 않았어요. AI 서비스들의 한국어 지원이 매끄럽지 않아서, 자연스러운 음성을 만들기가 어려웠거든요. 그래서 여러 번 테스트를 거쳐, 최적의 방법을 찾아냈어요.\n\n연사자의 음성을 녹음한 뒤, ElevenLabs에서 대본 기반으로 AI 발표 음성을 생성\n연사자가 말하는 영상을 촬영해 Heygen에서 AI 아바타를 생성\n1번에서 만든 음성을 Heygen에 입력해, AI 아바타가 발표하는 최종 영상으로 출력\n\n\n\n기존의 방식이라면 연사자는 발표 내용을 자연스럽게 말하기 위해 여러 번 연습하고, 촬영 중간에 한 번이라도 말을 더듬거나 버벅이면 처음부터 다시 찍어야 했어요. 하지만 이번에는 딱 한 번만 찍어도 AI 아바타를 만드는 데 충분했어요.\n촬영 자체도 훨씬 간편해졌어요. AI 아바타 생성을 위한 학습용 데이터로만 쓰이다 보니, 연사자가 회의실에 들어와서 나갈 때까지 30분이면 촬영이 끝났거든요.\n덕분에 연사자의 부담은 확 줄었고, 일정도 유연하게 조율할 수 있었어요. 심지어 오픈을 일주일 앞두고도 대본 수정이 가능한 정도였죠.\n촬영은 어떻게 했냐고요? 아마 들으면 깜짝 놀라실 거예요. 스튜디오도, 전문 장비도 없었어요. 회의실에서, 아이폰 전면 카메라로, 스노우 앱을 켜고 녹화했거든요. 말 그대로 셀카 찍듯 촬영했죠.\n처음에는 전문 장비를 갖춰서 촬영해보기도 했지만, 오히려 익숙하지 않아 결과물이 더 어색하더라고요. 그래서 여러 번 시도해 본 끝에, 지금의 제약 안에서도 원하는 결과를 만들 수 있는 가장 효율적인 방식을 찾아냈어요. \n\n\n\n물론 지금 저희가 만든 AI 아바타가 실제 사람에 비해 어색한 부분도 있지만, 기술이 워낙 빠르게 발전하고 있어서 앞으로 훨씬 더 자연스럽게 될 것 같아요. 그리고 이 방식보다 더 효율적인 방법이 많이 생겨나겠죠.\n\n\n\n시청 경험까지 새롭게\n이번 시즌에서는 AI 아바타 외에도 시청 경험 자체를 더 나아지게 만들기 위한 변화들이 있었어요.\n1. 모바일 최적화\n2023년에는 데스크탑으로 시청하는 사용자가 많았지만, 2024년에는 모바일 사용자 비율이 크게 늘었어요.\n데스크탑 환경이 아닌 숏폼 형식으로 콘텐츠를 소비하는 게 적합한 것 같았죠. 그래서 이번엔 처음부터 모바일 중심으로 화면과 인터페이스를 설계했어요. “숏츠 보는 것 같았다”고 느꼈다면, 저희가 의도한 바를 정확히 느끼신 거예요. 실제로 데스크탑 디자인은 모바일 디자인을 완성한 이후에 제작되었어요.\n\n\n\n\n2. 콘텐츠 길이 최적화\n지난 시즌 평균 시청 시간이 3분 정도였어요. 그래서 이번에는 세션이 너무 길지 않도록 모두 5분 이하로 구성했어요. 짧지만 명확한 메시지를 전하기 위해 이미지 자료나 구성도 더욱 정교하게 다듬었죠. 그래서일까요? 지난 시즌에는 평균 완독률이 12% 정도였는데, 이번에는 51%를 넘었어요.\n\n\n3. 세션별 특색 강화\n커버 이미지, 배경 음악, 메인 컬러까지—각 세션마다 모두 다르게 설정했어요. 음악만 듣거나 커버만 봐도 어떤 세션인지 연상할 수 있도록, 개성과 몰입감을 중요하게 생각했어요.\n\n\n앞으로의 심플리시티\n이번 시즌을 계기로, Simplicity는 단순 온라인 컨퍼런스가 아니라 콘텐츠 플랫폼으로써 더 효율적이고 지속 가능한 형태로 진화했어요.  기존처럼 시즌마다 새로운 사이트를 만드는 방식에서 벗어나, 앞으로는 https://toss.im/simplicity/ 에 시즌별로 콘텐츠가 업데이트될 예정이에요. \n그리고 이 변화는 이번 시즌 4의 주인공이기도 UX플랫폼 조직의 노력으로 만들어졌어요. \n그래픽 디자이너, 인터랙션 디자이너, 플랫폼 디자이너, UX 엔지니어, UX라이터 등 UX 플랫폼 조직의 많은 팀의 협업이 있었기에 가능한 일이었죠. 곧 각 팀의 시선에서 바라본 Simplicity 제작 비하인드도 소개해드릴게요.\n이번 저희의 실험을, 부디 재미있게 지켜봐주세요!\n\n심플리시티 시즌 4 보러가기 >\n\n",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 19887
      },
      {
        "id": 36805,
        "updatedTime": "2025-06-28T11:17:49+09:00",
        "createdTime": "2025-05-23T11:05:28+09:00",
        "category": "디자인",
        "categories": [
          {
            "name": "디자인",
            "id": 1038,
            "slug": "design",
            "parentId": null,
            "iconUrl": null
          }
        ],
        "series": null,
        "seriesSlug": null,
        "title": "[Simplicity 4 세션] 진짜 모두를 위한 금융",
        "subtitle": "2,800만 명이 쓰는 앱에서 7,000명의 경험까지 챙기기 위해,  토스는 어떤 노력을 하고 있을까요?",
        "bottomButtonConfig": {
          "ctaType": "ONLY_BUTTON",
          "imageUrl": null,
          "imageAlt": null,
          "title": null,
          "description": null,
          "ctaName": "세션 더보기",
          "landingUrl": "https://toss.im/simplicity/sessions/accessibility-for-everyone",
          "isSearchBottomCta": false,
          "landingInExternalBrowser": false,
          "serviceId": null,
          "stockConfig": null,
          "landingScheme": "supertoss://web?url=https%3A%2F%2Ftoss.im%2Fsimplicity%2Fsessions%2Faccessibility-for-everyone%3F&external=true&clearHistory=true&swipeRefresh=true",
          "landingExternal": "https://toss.im/simplicity/sessions/accessibility-for-everyone"
        },
        "coverConfig": {
          "coverType": "NONE",
          "imageUrl": null,
          "videoUrl": null,
          "backgroundColor": null,
          "isFill": false,
          "imageAlt": null
        },
        "thumbnailConfig": {
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-season4-asset/session-graphic-bg-still/bg-accessibility-for-everyone.png",
          "backgroundColor": null,
          "isFill": true,
          "imageAlt": null
        },
        "key": "36805",
        "minAge": 0,
        "isDisplaying": true,
        "isDisplayingPublishedTime": true,
        "workspaceId": 15,
        "isPublished": true,
        "publishedTime": "2025-05-01T11:07:00+09:00",
        "likeCount": 0,
        "commentBoard": null,
        "relatedPostTitle": null,
        "relatedPosts": [],
        "disclaimer": null,
        "seoConfig": {
          "post": 36805,
          "title": null,
          "description": "",
          "urlSlug": "36805",
          "primaryKeyword": null,
          "relatedKeywords": [],
          "tags": []
        },
        "openGraph": {
          "title": "진짜 모두를 위한 금융",
          "description": "",
          "backgroundColor": "#424242",
          "imageAlt": null,
          "imageUrl": "https://static.toss.im/assets/dp/simplicity-season4-asset/session-graphic-bg-still/bg-accessibility-for-everyone.png",
          "imageType": "썸네일 이미지"
        },
        "relatedPostConfig": null,
        "editor": {
          "id": 2481,
          "name": "김유라",
          "slug": null,
          "shortDescription": null,
          "description": null,
          "imageUrl": null,
          "url": null,
          "facebook": null,
          "twitter": null,
          "instagram": null,
          "postCount": 2,
          "ogConfig": null,
          "seoConfig": null,
          "priority": 1000,
          "isDisplaying": false,
          "isHomeRecommendation": false
        },
        "disclaimerConfig": null,
        "shortDescription": "",
        "fullDescription": "",
        "isDisplayingFeedback": true,
        "quizzes": [],
        "opinionForm": null,
        "viewCount": 1367
      }
    ]
  }
}
